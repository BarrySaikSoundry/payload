{"version":3,"sources":["../src/mergeData.ts"],"sourcesContent":["import type { PaginatedDocs } from 'payload'\nimport type { fieldSchemaToJSON } from 'payload/shared'\n\nimport type { PopulationsByCollection, UpdatedDocument } from './types.js'\n\nimport { traverseFields } from './traverseFields.js'\n\nconst defaultRequestHandler = ({ apiPath, endpoint, serverURL }) => {\n  const url = `${serverURL}${apiPath}/${endpoint}`\n  return fetch(url, {\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n}\n\nexport const mergeData = async <T>(args: {\n  apiRoute?: string\n  collectionPopulationRequestHandler?: ({\n    apiPath,\n    endpoint,\n    serverURL,\n  }: {\n    apiPath: string\n    endpoint: string\n    serverURL: string\n  }) => Promise<Response>\n  depth?: number\n  externallyUpdatedRelationship?: UpdatedDocument\n  fieldSchema: ReturnType<typeof fieldSchemaToJSON>\n  incomingData: Partial<T>\n  initialData: T\n  returnNumberOfRequests?: boolean\n  serverURL: string\n}): Promise<\n  {\n    _numberOfRequests?: number\n  } & T\n> => {\n  const {\n    apiRoute,\n    depth,\n    externallyUpdatedRelationship,\n    fieldSchema,\n    incomingData,\n    initialData,\n    returnNumberOfRequests,\n    serverURL,\n  } = args\n\n  const result = { ...initialData }\n\n  const populationsByCollection: PopulationsByCollection = {}\n\n  traverseFields({\n    externallyUpdatedRelationship,\n    fieldSchema,\n    incomingData,\n    populationsByCollection,\n    result,\n  })\n\n  await Promise.all(\n    Object.entries(populationsByCollection).map(async ([collection, populations]) => {\n      let res: PaginatedDocs\n\n      const ids = new Set(populations.map(({ id }) => id))\n      const requestHandler = args.collectionPopulationRequestHandler || defaultRequestHandler\n\n      try {\n        res = await requestHandler({\n          apiPath: apiRoute || '/api',\n          endpoint: `${collection}?depth=${depth}&where[id][in]=${Array.from(ids).join(',')}`,\n          serverURL,\n        }).then((res) => res.json())\n\n        if (res?.docs?.length > 0) {\n          res.docs.forEach((doc) => {\n            populationsByCollection[collection].forEach((population) => {\n              if (population.id === doc.id) {\n                population.ref[population.accessor] = doc\n              }\n            })\n          })\n        }\n      } catch (err) {\n        console.error(err) // eslint-disable-line no-console\n      }\n    }),\n  )\n\n  return {\n    ...result,\n    ...(returnNumberOfRequests\n      ? { _numberOfRequests: Object.keys(populationsByCollection).length }\n      : {}),\n  }\n}\n"],"names":["traverseFields","defaultRequestHandler","apiPath","endpoint","serverURL","url","fetch","credentials","headers","mergeData","args","apiRoute","depth","externallyUpdatedRelationship","fieldSchema","incomingData","initialData","returnNumberOfRequests","result","populationsByCollection","Promise","all","Object","entries","map","collection","populations","res","ids","Set","id","requestHandler","collectionPopulationRequestHandler","Array","from","join","then","json","docs","length","forEach","doc","population","ref","accessor","err","console","error","_numberOfRequests","keys"],"mappings":"AAKA,SAASA,cAAc,QAAQ,sBAAqB;AAEpD,MAAMC,wBAAwB,CAAC,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,EAAE;IAC7D,MAAMC,MAAM,CAAC,EAAED,UAAU,EAAEF,QAAQ,CAAC,EAAEC,SAAS,CAAC;IAChD,OAAOG,MAAMD,KAAK;QAChBE,aAAa;QACbC,SAAS;YACP,gBAAgB;QAClB;IACF;AACF;AAEA,OAAO,MAAMC,YAAY,OAAUC;IAuBjC,MAAM,EACJC,QAAQ,EACRC,KAAK,EACLC,6BAA6B,EAC7BC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,sBAAsB,EACtBb,SAAS,EACV,GAAGM;IAEJ,MAAMQ,SAAS;QAAE,GAAGF,WAAW;IAAC;IAEhC,MAAMG,0BAAmD,CAAC;IAE1DnB,eAAe;QACba;QACAC;QACAC;QACAI;QACAD;IACF;IAEA,MAAME,QAAQC,GAAG,CACfC,OAAOC,OAAO,CAACJ,yBAAyBK,GAAG,CAAC,OAAO,CAACC,YAAYC,YAAY;QAC1E,IAAIC;QAEJ,MAAMC,MAAM,IAAIC,IAAIH,YAAYF,GAAG,CAAC,CAAC,EAAEM,EAAE,EAAE,GAAKA;QAChD,MAAMC,iBAAiBrB,KAAKsB,kCAAkC,IAAI/B;QAElE,IAAI;YACF0B,MAAM,MAAMI,eAAe;gBACzB7B,SAASS,YAAY;gBACrBR,UAAU,CAAC,EAAEsB,WAAW,OAAO,EAAEb,MAAM,eAAe,EAAEqB,MAAMC,IAAI,CAACN,KAAKO,IAAI,CAAC,KAAK,CAAC;gBACnF/B;YACF,GAAGgC,IAAI,CAAC,CAACT,MAAQA,IAAIU,IAAI;YAEzB,IAAIV,KAAKW,MAAMC,SAAS,GAAG;gBACzBZ,IAAIW,IAAI,CAACE,OAAO,CAAC,CAACC;oBAChBtB,uBAAuB,CAACM,WAAW,CAACe,OAAO,CAAC,CAACE;wBAC3C,IAAIA,WAAWZ,EAAE,KAAKW,IAAIX,EAAE,EAAE;4BAC5BY,WAAWC,GAAG,CAACD,WAAWE,QAAQ,CAAC,GAAGH;wBACxC;oBACF;gBACF;YACF;QACF,EAAE,OAAOI,KAAK;YACZC,QAAQC,KAAK,CAACF,KAAK,iCAAiC;;QACtD;IACF;IAGF,OAAO;QACL,GAAG3B,MAAM;QACT,GAAID,yBACA;YAAE+B,mBAAmB1B,OAAO2B,IAAI,CAAC9B,yBAAyBoB,MAAM;QAAC,IACjE,CAAC,CAAC;IACR;AACF,EAAC"}