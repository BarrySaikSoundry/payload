{"version":3,"sources":["../../src/lib/replacements.ts"],"sourcesContent":["import type { DbType, StorageAdapterType } from '../types.js'\n\ntype DbAdapterReplacement = {\n  configReplacement: (envName?: string) => string[]\n  importReplacement: string\n  packageName: string\n}\n\nconst mongodbReplacement: DbAdapterReplacement = {\n  // Replacement between `// database-adapter-config-start` and `// database-adapter-config-end`\n  configReplacement: (envName = 'DATABASE_URI') => [\n    '  db: mongooseAdapter({',\n    `    url: process.env.${envName} || '',`,\n    '  }),',\n  ],\n  importReplacement: \"import { mongooseAdapter } from '@payloadcms/db-mongodb'\",\n  packageName: '@payloadcms/db-mongodb',\n}\n\nconst postgresReplacement: DbAdapterReplacement = {\n  configReplacement: (envName = 'DATABASE_URI') => [\n    '  db: postgresAdapter({',\n    '    pool: {',\n    `      connectionString: process.env.${envName} || '',`,\n    '    },',\n    '  }),',\n  ],\n  importReplacement: \"import { postgresAdapter } from '@payloadcms/db-postgres'\",\n  packageName: '@payloadcms/db-postgres',\n}\n\nexport const dbReplacements: Record<DbType, DbAdapterReplacement> = {\n  mongodb: mongodbReplacement,\n  postgres: postgresReplacement,\n}\n\ntype StorageAdapterReplacement = {\n  configReplacement: string[]\n  importReplacement?: string\n  packageName?: string\n}\n\nconst vercelBlobStorageReplacement: StorageAdapterReplacement = {\n  // Replacement of `// storage-adapter-placeholder`\n  configReplacement: [\n    '    vercelBlobStorage({',\n    '      collections: {',\n    '        [Media.slug]: true,',\n    '      },',\n    \"      token: process.env.BLOB_READ_WRITE_TOKEN || '',\",\n    '    }),',\n  ],\n  importReplacement: \"import { vercelBlobStorage } from '@payloadcms/storage-vercel-blob'\",\n  packageName: '@payloadcms/storage-vercel-blob',\n}\n\nconst payloadCloudReplacement: StorageAdapterReplacement = {\n  configReplacement: ['    payloadCloudPlugin(),'],\n  importReplacement: \"import { payloadCloudPlugin } from '@payloadcms/plugin-cloud'\",\n  packageName: '@payloadcms/plugin-cloud',\n}\n\n// Removes placeholders\nconst diskReplacement: StorageAdapterReplacement = {\n  configReplacement: [],\n  importReplacement: '',\n}\n\nexport const storageReplacements: Record<StorageAdapterType, StorageAdapterReplacement> = {\n  localDisk: diskReplacement,\n  payloadCloud: payloadCloudReplacement,\n  vercelBlobStorage: vercelBlobStorageReplacement,\n}\n\n/**\n * Generic config replacement\n */\ntype ConfigReplacement = {\n  configReplacement: {\n    match: string\n    replacement: string\n  }\n  importReplacement: string\n  packageName: string\n}\n\nexport const configReplacements: Record<string, ConfigReplacement> = {\n  sharp: {\n    // Replacement of `sharp, // Now optional`\n    configReplacement: {\n      match: 'sharp,',\n      replacement: '  // sharp,',\n    },\n    importReplacement: \"import sharp from 'sharp'\",\n    packageName: 'sharp',\n  },\n}\n"],"names":["mongodbReplacement","configReplacement","envName","importReplacement","packageName","postgresReplacement","dbReplacements","mongodb","postgres","vercelBlobStorageReplacement","payloadCloudReplacement","diskReplacement","storageReplacements","localDisk","payloadCloud","vercelBlobStorage","configReplacements","sharp","match","replacement"],"mappings":"AAQA,MAAMA,qBAA2C;IAC/C,8FAA8F;IAC9FC,mBAAmB,CAACC,UAAU,cAAc,GAAK;YAC/C;YACA,CAAC,qBAAqB,EAAEA,QAAQ,OAAO,CAAC;YACxC;SACD;IACDC,mBAAmB;IACnBC,aAAa;AACf;AAEA,MAAMC,sBAA4C;IAChDJ,mBAAmB,CAACC,UAAU,cAAc,GAAK;YAC/C;YACA;YACA,CAAC,oCAAoC,EAAEA,QAAQ,OAAO,CAAC;YACvD;YACA;SACD;IACDC,mBAAmB;IACnBC,aAAa;AACf;AAEA,OAAO,MAAME,iBAAuD;IAClEC,SAASP;IACTQ,UAAUH;AACZ,EAAC;AAQD,MAAMI,+BAA0D;IAC9D,kDAAkD;IAClDR,mBAAmB;QACjB;QACA;QACA;QACA;QACA;QACA;KACD;IACDE,mBAAmB;IACnBC,aAAa;AACf;AAEA,MAAMM,0BAAqD;IACzDT,mBAAmB;QAAC;KAA4B;IAChDE,mBAAmB;IACnBC,aAAa;AACf;AAEA,uBAAuB;AACvB,MAAMO,kBAA6C;IACjDV,mBAAmB,EAAE;IACrBE,mBAAmB;AACrB;AAEA,OAAO,MAAMS,sBAA6E;IACxFC,WAAWF;IACXG,cAAcJ;IACdK,mBAAmBN;AACrB,EAAC;AAcD,OAAO,MAAMO,qBAAwD;IACnEC,OAAO;QACL,0CAA0C;QAC1ChB,mBAAmB;YACjBiB,OAAO;YACPC,aAAa;QACf;QACAhB,mBAAmB;QACnBC,aAAa;IACf;AACF,EAAC"}