{"version":3,"sources":["../../../src/adapters/vercelBlob/staticHandler.ts"],"sourcesContent":["import type { StaticHandler } from '@payloadcms/plugin-cloud-storage/types'\nimport type { CollectionConfig } from 'payload'\n\nimport { head } from '@vercel/blob'\nimport path from 'path'\n\nimport { getFilePrefix } from '../../utilities/getFilePrefix.js'\n\ntype StaticHandlerArgs = {\n  baseUrl: string\n  token: string\n}\n\nexport const getStaticHandler = (\n  { baseUrl, token }: StaticHandlerArgs,\n  collection: CollectionConfig,\n): StaticHandler => {\n  return async (req, { params: { filename } }) => {\n    try {\n      const prefix = await getFilePrefix({ collection, filename, req })\n\n      const fileUrl = `${baseUrl}/${path.posix.join(prefix, filename)}`\n\n      const blobMetadata = await head(fileUrl, { token })\n      if (!blobMetadata) {\n        return new Response(null, { status: 404, statusText: 'Not Found' })\n      }\n\n      const { contentDisposition, contentType, size } = blobMetadata\n      const response = await fetch(fileUrl)\n      const blob = await response.blob()\n\n      if (!blob) {\n        return new Response(null, { status: 204, statusText: 'No Content' })\n      }\n\n      const bodyBuffer = await blob.arrayBuffer()\n\n      return new Response(bodyBuffer, {\n        headers: new Headers({\n          'Content-Disposition': contentDisposition,\n          'Content-Length': String(size),\n          'Content-Type': contentType,\n        }),\n        status: 200,\n      })\n    } catch (err: unknown) {\n      req.payload.logger.error({ err, msg: 'Unexpected error in staticHandler' })\n      return new Response('Internal Server Error', { status: 500 })\n    }\n  }\n}\n"],"names":["head","path","getFilePrefix","getStaticHandler","baseUrl","token","collection","req","params","filename","prefix","fileUrl","posix","join","blobMetadata","Response","status","statusText","contentDisposition","contentType","size","response","fetch","blob","bodyBuffer","arrayBuffer","headers","Headers","String","err","payload","logger","error","msg"],"mappings":"AAGA,SAASA,IAAI,QAAQ,eAAc;AACnC,OAAOC,UAAU,OAAM;AAEvB,SAASC,aAAa,QAAQ,mCAAkC;AAOhE,OAAO,MAAMC,mBAAmB,CAC9B,EAAEC,OAAO,EAAEC,KAAK,EAAqB,EACrCC;IAEA,OAAO,OAAOC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE,EAAE;QACzC,IAAI;YACF,MAAMC,SAAS,MAAMR,cAAc;gBAAEI;gBAAYG;gBAAUF;YAAI;YAE/D,MAAMI,UAAU,CAAC,EAAEP,QAAQ,CAAC,EAAEH,KAAKW,KAAK,CAACC,IAAI,CAACH,QAAQD,UAAU,CAAC;YAEjE,MAAMK,eAAe,MAAMd,KAAKW,SAAS;gBAAEN;YAAM;YACjD,IAAI,CAACS,cAAc;gBACjB,OAAO,IAAIC,SAAS,MAAM;oBAAEC,QAAQ;oBAAKC,YAAY;gBAAY;YACnE;YAEA,MAAM,EAAEC,kBAAkB,EAAEC,WAAW,EAAEC,IAAI,EAAE,GAAGN;YAClD,MAAMO,WAAW,MAAMC,MAAMX;YAC7B,MAAMY,OAAO,MAAMF,SAASE,IAAI;YAEhC,IAAI,CAACA,MAAM;gBACT,OAAO,IAAIR,SAAS,MAAM;oBAAEC,QAAQ;oBAAKC,YAAY;gBAAa;YACpE;YAEA,MAAMO,aAAa,MAAMD,KAAKE,WAAW;YAEzC,OAAO,IAAIV,SAASS,YAAY;gBAC9BE,SAAS,IAAIC,QAAQ;oBACnB,uBAAuBT;oBACvB,kBAAkBU,OAAOR;oBACzB,gBAAgBD;gBAClB;gBACAH,QAAQ;YACV;QACF,EAAE,OAAOa,KAAc;YACrBtB,IAAIuB,OAAO,CAACC,MAAM,CAACC,KAAK,CAAC;gBAAEH;gBAAKI,KAAK;YAAoC;YACzE,OAAO,IAAIlB,SAAS,yBAAyB;gBAAEC,QAAQ;YAAI;QAC7D;IACF;AACF,EAAC"}