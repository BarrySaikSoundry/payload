{"version":3,"sources":["../src/index.tsx"],"sourcesContent":["import type { Config, RichTextAdapterProvider } from 'payload'\n\nimport { sanitizeFields, withNullableJSONSchemaType } from 'payload'\n\nimport type { AdapterArguments } from './types.js'\n\nimport { RichTextCell } from './cell/index.js'\nimport { richTextRelationshipPromise } from './data/richTextRelationshipPromise.js'\nimport { richTextValidate } from './data/validation.js'\nimport { transformExtraFields } from './field/elements/link/utilities.js'\nimport { RichTextField } from './field/index.js'\nimport { getGenerateComponentMap } from './generateComponentMap.js'\nimport { getGenerateSchemaMap } from './generateSchemaMap.js'\n\nexport function slateEditor(\n  args: AdapterArguments,\n): RichTextAdapterProvider<any[], AdapterArguments, any> {\n  return async ({ config }) => {\n    const validRelationships = config.collections.map((c) => c.slug) || []\n\n    if (!args.admin) {\n      args.admin = {}\n    }\n    if (!args.admin.link) {\n      args.admin.link = {}\n    }\n    if (!args.admin.link.fields) {\n      args.admin.link.fields = []\n    }\n    args.admin.link.fields = await sanitizeFields({\n      config: config as unknown as Config,\n      fields: transformExtraFields(args.admin?.link?.fields, config),\n      validRelationships,\n    })\n\n    if (args?.admin?.upload?.collections) {\n      for (const collection of Object.keys(args.admin.upload.collections)) {\n        if (args?.admin?.upload?.collections[collection]?.fields) {\n          args.admin.upload.collections[collection].fields = await sanitizeFields({\n            config: config as unknown as Config,\n            fields: args.admin?.upload?.collections[collection]?.fields,\n            validRelationships,\n          })\n        }\n      }\n    }\n\n    return {\n      CellComponent: RichTextCell,\n      FieldComponent: RichTextField,\n      generateComponentMap: getGenerateComponentMap(args),\n      generateSchemaMap: getGenerateSchemaMap(args),\n      graphQLPopulationPromises({\n        context,\n        currentDepth,\n        depth,\n        draft,\n        field,\n        fieldPromises,\n        findMany,\n        flattenLocales,\n        overrideAccess,\n        populationPromises,\n        req,\n        showHiddenFields,\n        siblingDoc,\n      }) {\n        if (\n          field.admin?.elements?.includes('relationship') ||\n          field.admin?.elements?.includes('upload') ||\n          field.admin?.elements?.includes('link') ||\n          !field?.admin?.elements\n        ) {\n          richTextRelationshipPromise({\n            context,\n            currentDepth,\n            depth,\n            draft,\n            field,\n            fieldPromises,\n            findMany,\n            flattenLocales,\n            overrideAccess,\n            populationPromises,\n            req,\n            showHiddenFields,\n            siblingDoc,\n          })\n        }\n      },\n      hooks: {\n        afterRead: [\n          ({\n            context: _context,\n            currentDepth,\n            depth,\n            draft,\n            field: _field,\n            fieldPromises,\n            findMany,\n            flattenLocales,\n            overrideAccess,\n            populationPromises,\n            req,\n            showHiddenFields,\n            siblingData,\n          }) => {\n            const context: any = _context\n            const field = _field as any\n            if (\n              field.admin?.elements?.includes('relationship') ||\n              field.admin?.elements?.includes('upload') ||\n              field.admin?.elements?.includes('link') ||\n              !field?.admin?.elements\n            ) {\n              richTextRelationshipPromise({\n                context,\n                currentDepth,\n                depth,\n                draft,\n                field,\n                fieldPromises,\n                findMany,\n                flattenLocales,\n                overrideAccess,\n                populationPromises,\n                req,\n                showHiddenFields,\n                siblingDoc: siblingData,\n              })\n            }\n          },\n        ],\n      },\n      outputSchema: ({ isRequired }) => {\n        return {\n          type: withNullableJSONSchemaType('array', isRequired),\n          items: {\n            type: 'object',\n          },\n        }\n      },\n      validate: richTextValidate,\n    }\n  }\n}\n\nexport { ElementButton } from './field/elements/Button.js'\n\nexport { toggleElement } from './field/elements/toggle.js'\nexport { LeafButton } from './field/leaves/Button.js'\nexport { useLeaf } from './field/providers/LeafProvider.js'\n\nexport type {\n  AdapterArguments,\n  ElementNode,\n  FieldProps,\n  RichTextCustomElement,\n  RichTextCustomLeaf,\n  RichTextElement,\n  RichTextLeaf,\n  TextNode,\n} from './types.js'\n\nexport { nodeIsTextNode } from './types.js'\n"],"names":["sanitizeFields","withNullableJSONSchemaType","RichTextCell","richTextRelationshipPromise","richTextValidate","transformExtraFields","RichTextField","getGenerateComponentMap","getGenerateSchemaMap","slateEditor","args","config","validRelationships","collections","map","c","slug","admin","link","fields","upload","collection","Object","keys","CellComponent","FieldComponent","generateComponentMap","generateSchemaMap","graphQLPopulationPromises","context","currentDepth","depth","draft","field","fieldPromises","findMany","flattenLocales","overrideAccess","populationPromises","req","showHiddenFields","siblingDoc","elements","includes","hooks","afterRead","_context","_field","siblingData","outputSchema","isRequired","type","items","validate","ElementButton","toggleElement","LeafButton","useLeaf","nodeIsTextNode"],"mappings":"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"}