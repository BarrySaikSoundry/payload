{"version":3,"sources":["../../../../../src/field/elements/link/Element/index.tsx"],"sourcesContent":["'use client'\nimport type { FormState } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport {\n  Button,\n  Popup,\n  Translation,\n  useAuth,\n  useConfig,\n  useDocumentInfo,\n  useDrawerSlug,\n  useLocale,\n  useModal,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { getFormState } from '@payloadcms/ui/shared'\nimport { deepCopyObject, reduceFieldsToValues } from 'payload/shared'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Editor, Node, Transforms } from 'slate'\nimport { ReactEditor, useSlate } from 'slate-react'\n\nimport type { LinkElementType } from '../types.js'\n\nimport { useElement } from '../../../providers/ElementProvider.js'\nimport { LinkDrawer } from '../LinkDrawer/index.js'\nimport { linkFieldsSchemaPath } from '../shared.js'\nimport { unwrapLink } from '../utilities.js'\nimport './index.scss'\n\nconst baseClass = 'rich-text-link'\n\n/**\n * This function is called when an existing link is edited.\n * When a link is first created, another function is called: {@link ../Button/index.tsx#insertLink}\n */\nconst insertChange = (editor, fields) => {\n  const data = reduceFieldsToValues(fields, true)\n\n  const [, parentPath] = Editor.above(editor)\n\n  const newNode: Record<string, unknown> = {\n    doc: data.doc,\n    linkType: data.linkType,\n    newTab: data.newTab,\n    url: data.url,\n  }\n\n  if (data.fields) newNode.fields = data.fields\n\n  Transforms.setNodes(editor, newNode, { at: parentPath })\n\n  Transforms.delete(editor, { at: editor.selection.focus.path, unit: 'block' })\n  Transforms.move(editor, { distance: 1, unit: 'offset' })\n  Transforms.insertText(editor, String(data.text), { at: editor.selection.focus.path })\n\n  ReactEditor.focus(editor)\n}\n\nexport const LinkElement = () => {\n  const { attributes, children, editorRef, element, fieldProps, schemaPath } =\n    useElement<LinkElementType>()\n\n  const fieldMapPath = `${schemaPath}.${linkFieldsSchemaPath}`\n\n  const { richTextComponentMap } = fieldProps\n  const fieldMap = richTextComponentMap.get(linkFieldsSchemaPath)\n\n  const editor = useSlate()\n  const config = useConfig()\n  const { user } = useAuth()\n  const { code: locale } = useLocale()\n  const { i18n, t } = useTranslation()\n  const { closeModal, openModal, toggleModal } = useModal()\n  const [renderModal, setRenderModal] = useState(false)\n  const [renderPopup, setRenderPopup] = useState(false)\n  const [initialState, setInitialState] = useState<FormState>({})\n  const { id, collectionSlug } = useDocumentInfo()\n\n  const drawerSlug = useDrawerSlug('rich-text-link')\n\n  const handleTogglePopup = useCallback((render) => {\n    if (!render) {\n      setRenderPopup(render)\n    }\n  }, [])\n\n  useEffect(() => {\n    const awaitInitialState = async () => {\n      const data = {\n        doc: element.doc,\n        fields: deepCopyObject(element.fields),\n        linkType: element.linkType,\n        newTab: element.newTab,\n        text: Node.string(element),\n        url: element.url,\n      }\n\n      const state = await getFormState({\n        apiRoute: config.routes.api,\n        body: {\n          data,\n          operation: 'update',\n          schemaPath: fieldMapPath,\n        },\n        serverURL: config.serverURL,\n      })\n\n      setInitialState(state)\n    }\n\n    if (renderModal) {\n      void awaitInitialState()\n    }\n  }, [renderModal, element, user, locale, t, collectionSlug, config, id, fieldMapPath])\n\n  return (\n    <span className={baseClass} {...attributes}>\n      <span contentEditable={false} style={{ userSelect: 'none' }}>\n        {renderModal && (\n          <LinkDrawer\n            drawerSlug={drawerSlug}\n            fieldMap={Array.isArray(fieldMap) ? fieldMap : []}\n            handleClose={() => {\n              toggleModal(drawerSlug)\n              setRenderModal(false)\n            }}\n            handleModalSubmit={(fields) => {\n              insertChange(editor, fields)\n              closeModal(drawerSlug)\n              setRenderModal(false)\n            }}\n            initialState={initialState}\n          />\n        )}\n        <Popup\n          boundingRef={editorRef}\n          buttonType=\"none\"\n          forceOpen={renderPopup}\n          horizontalAlign=\"left\"\n          onToggleOpen={handleTogglePopup}\n          render={() => (\n            <div className={`${baseClass}__popup`}>\n              {element.linkType === 'internal' && element.doc?.relationTo && element.doc?.value && (\n                <Translation\n                  elements={{\n                    '0': ({ children }) => (\n                      <a\n                        className={`${baseClass}__link-label`}\n                        href={`${config.routes.admin}/collections/${element.doc.relationTo}/${element.doc.value}`}\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                        title={`${config.routes.admin}/collections/${element.doc.relationTo}/${element.doc.value}`}\n                      >\n                        {children}\n                      </a>\n                    ),\n                  }}\n                  i18nKey=\"fields:linkedTo\"\n                  t={t}\n                  variables={{\n                    label: getTranslation(\n                      config.collections.find(({ slug }) => slug === element.doc.relationTo)?.labels\n                        ?.singular,\n                      i18n,\n                    ),\n                  }}\n                />\n              )}\n              {(element.linkType === 'custom' || !element.linkType) && (\n                <a\n                  className={`${baseClass}__link-label`}\n                  href={element.url}\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                  title={element.url}\n                >\n                  {element.url}\n                </a>\n              )}\n              <Button\n                buttonStyle=\"icon-label\"\n                className={`${baseClass}__link-edit`}\n                icon=\"edit\"\n                onClick={(e) => {\n                  e.preventDefault()\n                  setRenderPopup(false)\n                  openModal(drawerSlug)\n                  setRenderModal(true)\n                }}\n                round\n                tooltip={t('general:edit')}\n              />\n              <Button\n                buttonStyle=\"icon-label\"\n                className={`${baseClass}__link-close`}\n                icon=\"x\"\n                onClick={(e) => {\n                  e.preventDefault()\n                  unwrapLink(editor)\n                }}\n                round\n                tooltip={t('general:remove')}\n              />\n            </div>\n          )}\n          size=\"fit-content\"\n          verticalAlign=\"bottom\"\n        />\n      </span>\n      <span\n        className={[`${baseClass}__popup-toggler`].filter(Boolean).join(' ')}\n        onClick={() => setRenderPopup(true)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') setRenderPopup(true)\n        }}\n        role=\"button\"\n        tabIndex={0}\n      >\n        {children}\n      </span>\n    </span>\n  )\n}\n"],"names":["getTranslation","Button","Popup","Translation","useAuth","useConfig","useDocumentInfo","useDrawerSlug","useLocale","useModal","useTranslation","getFormState","deepCopyObject","reduceFieldsToValues","React","useCallback","useEffect","useState","Editor","Node","Transforms","ReactEditor","useSlate","useElement","LinkDrawer","linkFieldsSchemaPath","unwrapLink","baseClass","insertChange","editor","fields","data","parentPath","above","newNode","doc","linkType","newTab","url","setNodes","at","delete","selection","focus","path","unit","move","distance","insertText","String","text","LinkElement","attributes","children","editorRef","element","fieldProps","schemaPath","fieldMapPath","richTextComponentMap","fieldMap","get","config","user","code","locale","i18n","t","closeModal","openModal","toggleModal","renderModal","setRenderModal","renderPopup","setRenderPopup","initialState","setInitialState","id","collectionSlug","drawerSlug","handleTogglePopup","render","awaitInitialState","string","state","apiRoute","routes","api","body","operation","serverURL","span","className","contentEditable","style","userSelect","Array","isArray","handleClose","handleModalSubmit","boundingRef","buttonType","forceOpen","horizontalAlign","onToggleOpen","div","relationTo","value","elements","a","href","admin","rel","target","title","i18nKey","variables","label","collections","find","slug","labels","singular","buttonStyle","icon","onClick","e","preventDefault","round","tooltip","size","verticalAlign","filter","Boolean","join","onKeyDown","key","role","tabIndex"],"mappings":"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"}