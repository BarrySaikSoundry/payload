{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import type { Config } from 'payload'\n\nimport type { SearchPluginConfig } from './types.js'\n\nimport { deleteFromSearch } from './Search/hooks/deleteFromSearch.js'\nimport { syncWithSearch } from './Search/hooks/syncWithSearch.js'\nimport { generateSearchCollection } from './Search/index.js'\n\nexport const searchPlugin =\n  (incomingPluginConfig: SearchPluginConfig) =>\n  (config: Config): Config => {\n    const { collections } = config\n\n    if (collections) {\n      const pluginConfig: SearchPluginConfig = {\n        ...incomingPluginConfig,\n        deleteDrafts: true,\n        syncDrafts: false,\n        // write any config defaults here\n      }\n\n      // add afterChange and afterDelete hooks to every search-enabled collection\n      const collectionsWithSearchHooks = config?.collections\n        ?.map((collection) => {\n          const { hooks: existingHooks } = collection\n\n          const enabledCollections = pluginConfig.collections || []\n          const isEnabled = enabledCollections.indexOf(collection.slug) > -1\n          if (isEnabled) {\n            return {\n              ...collection,\n              hooks: {\n                ...collection.hooks,\n                afterChange: [\n                  ...(existingHooks?.afterChange || []),\n                  async (args: any) => {\n                    await syncWithSearch({\n                      ...args,\n                      collection: collection.slug,\n                      pluginConfig,\n                    })\n                  },\n                ],\n                afterDelete: [...(existingHooks?.afterDelete || []), deleteFromSearch],\n              },\n            }\n          }\n\n          return collection\n        })\n        .filter(Boolean)\n\n      return {\n        ...config,\n        collections: [\n          ...(collectionsWithSearchHooks || []),\n          generateSearchCollection(pluginConfig),\n        ],\n      }\n    }\n\n    return config\n  }\n"],"names":["deleteFromSearch","syncWithSearch","generateSearchCollection","searchPlugin","incomingPluginConfig","config","collections","pluginConfig","deleteDrafts","syncDrafts","collectionsWithSearchHooks","map","collection","hooks","existingHooks","enabledCollections","isEnabled","indexOf","slug","afterChange","args","afterDelete","filter","Boolean"],"mappings":"AAIA,SAASA,gBAAgB,QAAQ,qCAAoC;AACrE,SAASC,cAAc,QAAQ,mCAAkC;AACjE,SAASC,wBAAwB,QAAQ,oBAAmB;AAE5D,OAAO,MAAMC,eACX,CAACC,uBACD,CAACC;QACC,MAAM,EAAEC,WAAW,EAAE,GAAGD;QAExB,IAAIC,aAAa;YACf,MAAMC,eAAmC;gBACvC,GAAGH,oBAAoB;gBACvBI,cAAc;gBACdC,YAAY;YAEd;YAEA,2EAA2E;YAC3E,MAAMC,6BAA6BL,QAAQC,aACvCK,IAAI,CAACC;gBACL,MAAM,EAAEC,OAAOC,aAAa,EAAE,GAAGF;gBAEjC,MAAMG,qBAAqBR,aAAaD,WAAW,IAAI,EAAE;gBACzD,MAAMU,YAAYD,mBAAmBE,OAAO,CAACL,WAAWM,IAAI,IAAI,CAAC;gBACjE,IAAIF,WAAW;oBACb,OAAO;wBACL,GAAGJ,UAAU;wBACbC,OAAO;4BACL,GAAGD,WAAWC,KAAK;4BACnBM,aAAa;mCACPL,eAAeK,eAAe,EAAE;gCACpC,OAAOC;oCACL,MAAMnB,eAAe;wCACnB,GAAGmB,IAAI;wCACPR,YAAYA,WAAWM,IAAI;wCAC3BX;oCACF;gCACF;6BACD;4BACDc,aAAa;mCAAKP,eAAeO,eAAe,EAAE;gCAAGrB;6BAAiB;wBACxE;oBACF;gBACF;gBAEA,OAAOY;YACT,GACCU,OAAOC;YAEV,OAAO;gBACL,GAAGlB,MAAM;gBACTC,aAAa;uBACPI,8BAA8B,EAAE;oBACpCR,yBAAyBK;iBAC1B;YACH;QACF;QAEA,OAAOF;IACT,EAAC"}