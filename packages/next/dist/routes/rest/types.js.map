{"version":3,"sources":["../../../src/routes/rest/types.ts"],"sourcesContent":["import type { Collection, PayloadRequest, SanitizedGlobalConfig } from 'payload'\n\nexport type BaseRouteHandler = ({ req }: { req: PayloadRequest }) => Promise<Response> | Response\n\nexport type CollectionRouteHandler = ({\n  collection,\n  req,\n}: {\n  collection: Collection\n  req: PayloadRequest\n}) => Promise<Response> | Response\n\nexport type CollectionRouteHandlerWithID = ({\n  id,\n  collection,\n  req,\n}: {\n  collection: Collection\n  id: string\n  req: PayloadRequest\n}) => Promise<Response> | Response\n\nexport type GlobalRouteHandler = ({\n  globalConfig,\n  req,\n}: {\n  globalConfig: SanitizedGlobalConfig\n  req: PayloadRequest\n}) => Promise<Response> | Response\n\nexport type GlobalRouteHandlerWithID = ({\n  id,\n  globalConfig,\n  req,\n}: {\n  globalConfig: SanitizedGlobalConfig\n  id: string\n  req: PayloadRequest\n}) => Promise<Response> | Response\n"],"names":[],"mappings":"AA8BA,WAQkC"}