{"version":3,"sources":["../../../../src/routes/rest/utilities/sanitizeCollectionID.ts"],"sourcesContent":["import type { Payload } from 'payload'\n\ntype Args = {\n  collectionSlug: string\n  id: string\n  payload: Payload\n}\n\nexport const sanitizeCollectionID = ({ id, collectionSlug, payload }: Args): number | string => {\n  let sanitizedID: number | string = id\n  const collection = payload.collections[collectionSlug]\n\n  // If default db ID type is a number, we should sanitize\n  let shouldSanitize = Boolean(payload.db.defaultIDType === 'number')\n\n  // UNLESS the customIDType for this collection is text.... then we leave it\n  if (shouldSanitize && collection.customIDType === 'text') shouldSanitize = false\n\n  // If we still should sanitize, parse float\n  if (shouldSanitize) sanitizedID = parseFloat(sanitizedID)\n\n  return sanitizedID\n}\n"],"names":["sanitizeCollectionID","id","collectionSlug","payload","sanitizedID","collection","collections","shouldSanitize","Boolean","db","defaultIDType","customIDType","parseFloat"],"mappings":"AAQA,OAAO,MAAMA,uBAAuB,CAAC,EAAEC,EAAE,EAAEC,cAAc,EAAEC,OAAO,EAAQ;IACxE,IAAIC,cAA+BH;IACnC,MAAMI,aAAaF,QAAQG,WAAW,CAACJ,eAAe;IAEtD,wDAAwD;IACxD,IAAIK,iBAAiBC,QAAQL,QAAQM,EAAE,CAACC,aAAa,KAAK;IAE1D,2EAA2E;IAC3E,IAAIH,kBAAkBF,WAAWM,YAAY,KAAK,QAAQJ,iBAAiB;IAE3E,2CAA2C;IAC3C,IAAIA,gBAAgBH,cAAcQ,WAAWR;IAE7C,OAAOA;AACT,EAAC"}