{"version":3,"sources":["../../../src/routes/rest/index.ts"],"sourcesContent":["import type { Collection, Endpoint, GlobalConfig, PayloadRequest, SanitizedConfig } from 'payload'\n\nimport httpStatus from 'http-status'\nimport { match } from 'path-to-regexp'\n\nimport type {\n  CollectionRouteHandler,\n  CollectionRouteHandlerWithID,\n  GlobalRouteHandler,\n  GlobalRouteHandlerWithID,\n} from './types.js'\n\nimport { addDataAndFileToRequest } from '../../utilities/addDataAndFileToRequest.js'\nimport { addLocalesToRequestFromData } from '../../utilities/addLocalesToRequest.js'\nimport { createPayloadRequest } from '../../utilities/createPayloadRequest.js'\nimport { headersWithCors } from '../../utilities/headersWithCors.js'\nimport { mergeHeaders } from '../../utilities/mergeHeaders.js'\nimport { access } from './auth/access.js'\nimport { forgotPassword } from './auth/forgotPassword.js'\nimport { init } from './auth/init.js'\nimport { login } from './auth/login.js'\nimport { logout } from './auth/logout.js'\nimport { me } from './auth/me.js'\nimport { refresh } from './auth/refresh.js'\nimport { registerFirstUser } from './auth/registerFirstUser.js'\nimport { resetPassword } from './auth/resetPassword.js'\nimport { unlock } from './auth/unlock.js'\nimport { verifyEmail } from './auth/verifyEmail.js'\nimport { buildFormState } from './buildFormState.js'\nimport { endpointsAreDisabled } from './checkEndpoints.js'\nimport { count } from './collections/count.js'\nimport { create } from './collections/create.js'\nimport { deleteDoc } from './collections/delete.js'\nimport { deleteByID } from './collections/deleteByID.js'\nimport { docAccess } from './collections/docAccess.js'\nimport { duplicate } from './collections/duplicate.js'\nimport { find } from './collections/find.js'\nimport { findByID } from './collections/findByID.js'\nimport { findVersionByID } from './collections/findVersionByID.js'\nimport { findVersions } from './collections/findVersions.js'\nimport { preview as previewCollection } from './collections/preview.js'\nimport { restoreVersion } from './collections/restoreVersion.js'\nimport { update } from './collections/update.js'\nimport { updateByID } from './collections/updateByID.js'\nimport { getFile } from './files/getFile.js'\nimport { docAccess as docAccessGlobal } from './globals/docAccess.js'\nimport { findOne } from './globals/findOne.js'\nimport { findVersionByID as findVersionByIdGlobal } from './globals/findVersionByID.js'\nimport { findVersions as findVersionsGlobal } from './globals/findVersions.js'\nimport { preview as previewGlobal } from './globals/preview.js'\nimport { restoreVersion as restoreVersionGlobal } from './globals/restoreVersion.js'\nimport { update as updateGlobal } from './globals/update.js'\nimport { generateOGImage } from './og/index.js'\nimport { routeError } from './routeError.js'\n\nconst endpoints = {\n  collection: {\n    DELETE: {\n      delete: deleteDoc,\n      deleteByID,\n    },\n    GET: {\n      count,\n      'doc-access-by-id': docAccess,\n      'doc-versions-by-id': findVersionByID,\n      find,\n      findByID,\n      getFile,\n      init,\n      me,\n      preview: previewCollection,\n      versions: findVersions,\n    },\n    PATCH: {\n      update,\n      updateByID,\n    },\n    POST: {\n      access: docAccess,\n      create,\n      'doc-access-by-id': docAccess,\n      'doc-verify-by-id': verifyEmail,\n      'doc-versions-by-id': restoreVersion,\n      duplicate,\n      'first-register': registerFirstUser,\n      'forgot-password': forgotPassword,\n      login,\n      logout,\n      'refresh-token': refresh,\n      'reset-password': resetPassword,\n      unlock,\n    },\n  },\n  global: {\n    GET: {\n      'doc-access': docAccessGlobal,\n      'doc-versions': findVersionsGlobal,\n      'doc-versions-by-id': findVersionByIdGlobal,\n      findOne,\n      preview: previewGlobal,\n    },\n    POST: {\n      'doc-access': docAccessGlobal,\n      'doc-versions-by-id': restoreVersionGlobal,\n      update: updateGlobal,\n    },\n  },\n  root: {\n    GET: {\n      access,\n      og: generateOGImage,\n    },\n    POST: {\n      'form-state': buildFormState,\n    },\n  },\n}\n\nconst handleCustomEndpoints = async ({\n  endpoints,\n  entitySlug,\n  req,\n}: {\n  endpoints: Endpoint[] | GlobalConfig['endpoints']\n  entitySlug?: string\n  req: PayloadRequest\n}): Promise<Response> => {\n  if (endpoints && endpoints.length > 0) {\n    let handlerParams = {}\n    const { pathname } = req\n\n    /*\n     * This makes sure the next.js basePath property is supported. If basePath is used, payload config.routes.api should include it. This makes all outgoing frontend request\n     * target the correct API endpoint starting with basePath, which is good!\n     *\n     * The incoming request (here) will not include the basePath though, as it's automatically stripped by Next.js. Since we are adding the basePath to the pathPrefix below though\n     * (from req.payload.config.routes.api) we need to add it to pathname, which does not contain the basePath. Otherwise, no endpoint will be matched if basePath is set.\n     */\n    let adjustedPathname = pathname\n\n    if (process.env.NEXT_BASE_PATH) {\n      adjustedPathname = process.env.NEXT_BASE_PATH + pathname\n    }\n\n    const pathPrefix = req.payload.config.routes.api + (entitySlug ? `/${entitySlug}` : '')\n\n    const customEndpoint = endpoints.find((endpoint) => {\n      if (endpoint.method === req.method.toLowerCase()) {\n        const pathMatchFn = match(`${pathPrefix}${endpoint.path}`, {\n          decode: decodeURIComponent,\n        })\n\n        const tempParams = pathMatchFn(adjustedPathname)\n        if (tempParams) {\n          handlerParams = tempParams.params\n          return true\n        }\n      }\n    })\n\n    if (customEndpoint) {\n      req.routeParams = {\n        ...req.routeParams,\n        ...handlerParams,\n      }\n      const res = await customEndpoint.handler(req)\n\n      if (res instanceof Response) {\n        if (req.responseHeaders) {\n          mergeHeaders(req.responseHeaders, res.headers)\n        }\n\n        return res\n      }\n    }\n  }\n\n  return null\n}\n\nconst RouteNotFoundResponse = ({ slug, req }: { req: PayloadRequest; slug: string[] }) =>\n  Response.json(\n    {\n      message: `Route Not Found: \"${slug.join('/')}\"`,\n    },\n    {\n      headers: headersWithCors({\n        headers: new Headers(),\n        req,\n      }),\n      status: httpStatus.NOT_FOUND,\n    },\n  )\n\nexport const OPTIONS =\n  (config: Promise<SanitizedConfig> | SanitizedConfig) => async (request: Request) => {\n    let req: PayloadRequest\n\n    try {\n      req = await createPayloadRequest({\n        config,\n        request,\n      })\n\n      return Response.json(\n        {},\n        {\n          headers: headersWithCors({\n            headers: new Headers(),\n            req,\n          }),\n          status: 200,\n        },\n      )\n    } catch (error) {\n      return routeError({\n        config,\n        err: error,\n        req: req || request,\n      })\n    }\n  }\n\nexport const GET =\n  (config: Promise<SanitizedConfig> | SanitizedConfig) =>\n  async (request: Request, { params: { slug } }: { params: { slug: string[] } }) => {\n    const [slug1, slug2, slug3, slug4] = slug\n    let req: PayloadRequest\n    let res: Response\n    let collection: Collection\n\n    try {\n      req = await createPayloadRequest({\n        config,\n        request,\n      })\n\n      const disableEndpoints = endpointsAreDisabled({\n        endpoints: req.payload.config.endpoints,\n        request,\n      })\n\n      if (disableEndpoints) return disableEndpoints\n\n      collection = req.payload.collections?.[slug1]\n\n      if (collection) {\n        req.routeParams.collection = slug1\n        const disableEndpoints = endpointsAreDisabled({\n          endpoints: collection.config.endpoints,\n          request,\n        })\n        if (disableEndpoints) return disableEndpoints\n\n        const customEndpointResponse = await handleCustomEndpoints({\n          endpoints: collection.config.endpoints,\n          entitySlug: slug1,\n          req,\n        })\n\n        if (customEndpointResponse) {\n          return customEndpointResponse\n        } else {\n          await addDataAndFileToRequest(req)\n          addLocalesToRequestFromData(req)\n\n          switch (slug.length) {\n            case 1:\n              // /:collection\n              res = await endpoints.collection.GET.find({ collection, req })\n              break\n            case 2:\n              if (slug2 in endpoints.collection.GET) {\n                // /:collection/init\n                // /:collection/me\n                // /:collection/versions\n                // /:collection/count\n                res = await (endpoints.collection.GET[slug2] as CollectionRouteHandler)({\n                  collection,\n                  req,\n                })\n              } else {\n                // /:collection/:id\n                res = await endpoints.collection.GET.findByID({\n                  id: slug2,\n                  collection,\n                  req,\n                })\n              }\n              break\n            case 3:\n              if (slug2 === 'file') {\n                // /:collection/file/:filename\n                res = await endpoints.collection.GET.getFile({\n                  collection,\n                  filename: slug3,\n                  req,\n                })\n              } else if (slug3 in endpoints.collection.GET) {\n                // /:collection/:id/preview\n                res = await (endpoints.collection.GET[slug3] as CollectionRouteHandlerWithID)({\n                  id: slug2,\n                  collection,\n                  req,\n                })\n              } else if (`doc-${slug2}-by-id` in endpoints.collection.GET) {\n                // /:collection/access/:id\n                // /:collection/versions/:id\n                res = await (\n                  endpoints.collection.GET[`doc-${slug2}-by-id`] as CollectionRouteHandlerWithID\n                )({ id: slug3, collection, req })\n              }\n              break\n          }\n        }\n      } else if (slug1 === 'globals') {\n        const globalConfig = req.payload.config.globals.find((global) => global.slug === slug2)\n        req.routeParams.global = globalConfig.slug\n\n        const disableEndpoints = endpointsAreDisabled({\n          endpoints: globalConfig.endpoints,\n          request,\n        })\n        if (disableEndpoints) return disableEndpoints\n\n        const customEndpointResponse = await handleCustomEndpoints({\n          endpoints: globalConfig.endpoints,\n          entitySlug: `${slug1}/${slug2}`,\n          req,\n        })\n\n        if (customEndpointResponse) {\n          return customEndpointResponse\n        } else {\n          await addDataAndFileToRequest(req)\n          addLocalesToRequestFromData(req)\n\n          switch (slug.length) {\n            case 2:\n              // /globals/:slug\n              res = await endpoints.global.GET.findOne({ globalConfig, req })\n              break\n            case 3:\n              if (slug3 in endpoints.global.GET) {\n                // /globals/:slug/preview\n                res = await (endpoints.global.GET[slug3] as GlobalRouteHandler)({\n                  globalConfig,\n                  req,\n                })\n              } else if (`doc-${slug3}` in endpoints.global.GET) {\n                // /globals/:slug/access\n                // /globals/:slug/versions\n                // /globals/:slug/preview\n                res = await (endpoints.global.GET?.[`doc-${slug3}`] as GlobalRouteHandler)({\n                  globalConfig,\n                  req,\n                })\n              }\n              break\n            case 4:\n              if (`doc-${slug3}-by-id` in endpoints.global.GET) {\n                // /globals/:slug/versions/:id\n                res = await (\n                  endpoints.global.GET?.[`doc-${slug3}-by-id`] as GlobalRouteHandlerWithID\n                )({\n                  id: slug4,\n                  globalConfig,\n                  req,\n                })\n              }\n              break\n          }\n        }\n      } else if (slug.length === 1 && slug1 in endpoints.root.GET) {\n        await addDataAndFileToRequest(req)\n        addLocalesToRequestFromData(req)\n        res = await endpoints.root.GET[slug1]({ req })\n      }\n\n      if (res instanceof Response) {\n        if (req.responseHeaders) {\n          mergeHeaders(req.responseHeaders, res.headers)\n        }\n\n        return res\n      }\n\n      // root routes\n      const customEndpointResponse = await handleCustomEndpoints({\n        endpoints: req.payload.config.endpoints,\n        req,\n      })\n\n      if (customEndpointResponse) return customEndpointResponse\n\n      return RouteNotFoundResponse({\n        slug,\n        req,\n      })\n    } catch (error) {\n      return routeError({\n        collection,\n        config,\n        err: error,\n        req: req || request,\n      })\n    }\n  }\n\nexport const POST =\n  (config: Promise<SanitizedConfig> | SanitizedConfig) =>\n  async (request: Request, { params: { slug } }: { params: { slug: string[] } }) => {\n    const [slug1, slug2, slug3, slug4] = slug\n    let req: PayloadRequest\n    let res: Response\n    let collection: Collection\n\n    const overrideHttpMethod = request.headers.get('X-HTTP-Method-Override')\n    if (overrideHttpMethod === 'GET') {\n      return await GET(config)(request, { params: { slug } })\n    }\n\n    try {\n      req = await createPayloadRequest({\n        config,\n        request,\n      })\n\n      collection = req.payload.collections?.[slug1]\n\n      const disableEndpoints = endpointsAreDisabled({\n        endpoints: req.payload.config.endpoints,\n        request,\n      })\n\n      if (disableEndpoints) return disableEndpoints\n\n      if (collection) {\n        req.routeParams.collection = slug1\n        const disableEndpoints = endpointsAreDisabled({\n          endpoints: collection.config.endpoints,\n          request,\n        })\n        if (disableEndpoints) return disableEndpoints\n\n        const customEndpointResponse = await handleCustomEndpoints({\n          endpoints: collection.config.endpoints,\n          entitySlug: slug1,\n          req,\n        })\n\n        if (customEndpointResponse) {\n          return customEndpointResponse\n        } else {\n          await addDataAndFileToRequest(req)\n          addLocalesToRequestFromData(req)\n\n          switch (slug.length) {\n            case 1:\n              // /:collection\n              res = await endpoints.collection.POST.create({ collection, req })\n              break\n            case 2:\n              if (slug2 in endpoints.collection.POST) {\n                // /:collection/login\n                // /:collection/logout\n                // /:collection/unlock\n                // /:collection/access\n                // /:collection/first-register\n                // /:collection/forgot-password\n                // /:collection/reset-password\n                // /:collection/refresh-token\n\n                res = await (endpoints.collection.POST?.[slug2] as CollectionRouteHandler)({\n                  collection,\n                  req,\n                })\n              }\n              break\n            case 3:\n              if (`doc-${slug2}-by-id` in endpoints.collection.POST) {\n                // /:collection/access/:id\n                // /:collection/versions/:id\n                // /:collection/verify/:token (\"doc-verify-by-id\" uses id as token internally)\n                res = await (\n                  endpoints.collection.POST[`doc-${slug2}-by-id`] as CollectionRouteHandlerWithID\n                )({ id: slug3, collection, req })\n              } else if (slug3 === 'duplicate' && collection.config.disableDuplicate !== true) {\n                // /:collection/:id/duplicate\n                res = await endpoints.collection.POST.duplicate({\n                  id: slug2,\n                  collection,\n                  req,\n                })\n              }\n              break\n          }\n        }\n      } else if (slug1 === 'globals' && slug2) {\n        const globalConfig = req.payload.config.globals.find((global) => global.slug === slug2)\n        req.routeParams.global = globalConfig.slug\n\n        const disableEndpoints = endpointsAreDisabled({\n          endpoints: globalConfig.endpoints,\n          request,\n        })\n        if (disableEndpoints) return disableEndpoints\n\n        const customEndpointResponse = await handleCustomEndpoints({\n          endpoints: globalConfig.endpoints,\n          entitySlug: `${slug1}/${slug2}`,\n          req,\n        })\n\n        if (customEndpointResponse) {\n          return customEndpointResponse\n        } else {\n          await addDataAndFileToRequest(req)\n          addLocalesToRequestFromData(req)\n          switch (slug.length) {\n            case 2:\n              // /globals/:slug\n              res = await endpoints.global.POST.update({ globalConfig, req })\n              break\n            case 3:\n              if (`doc-${slug3}` in endpoints.global.POST) {\n                // /globals/:slug/access\n                res = await (endpoints.global.POST?.[`doc-${slug3}`] as GlobalRouteHandler)({\n                  globalConfig,\n                  req,\n                })\n              }\n              break\n            case 4:\n              if (`doc-${slug3}-by-id` in endpoints.global.POST) {\n                // /globals/:slug/versions/:id\n                res = await (\n                  endpoints.global.POST?.[`doc-${slug3}-by-id`] as GlobalRouteHandlerWithID\n                )({\n                  id: slug4,\n                  globalConfig,\n                  req,\n                })\n              }\n              break\n            default:\n              res = new Response('Route Not Found', { status: 404 })\n          }\n        }\n      } else if (slug.length === 1 && slug1 in endpoints.root.POST) {\n        await addDataAndFileToRequest(req)\n        addLocalesToRequestFromData(req)\n        res = await endpoints.root.POST[slug1]({ req })\n      }\n\n      if (res instanceof Response) {\n        if (req.responseHeaders) {\n          mergeHeaders(req.responseHeaders, res.headers)\n        }\n\n        return res\n      }\n\n      // root routes\n      const customEndpointResponse = await handleCustomEndpoints({\n        endpoints: req.payload.config.endpoints,\n        req,\n      })\n\n      if (customEndpointResponse) return customEndpointResponse\n\n      return RouteNotFoundResponse({\n        slug,\n        req,\n      })\n    } catch (error) {\n      return routeError({\n        collection,\n        config,\n        err: error,\n        req: req || request,\n      })\n    }\n  }\n\nexport const DELETE =\n  (config: Promise<SanitizedConfig> | SanitizedConfig) =>\n  async (request: Request, { params: { slug } }: { params: { slug: string[] } }) => {\n    const [slug1, slug2] = slug\n    let req: PayloadRequest\n    let res: Response\n    let collection: Collection\n\n    try {\n      req = await createPayloadRequest({\n        config,\n        request,\n      })\n      collection = req.payload.collections?.[slug1]\n\n      const disableEndpoints = endpointsAreDisabled({\n        endpoints: req.payload.config.endpoints,\n        request,\n      })\n      if (disableEndpoints) return disableEndpoints\n\n      if (collection) {\n        req.routeParams.collection = slug1\n\n        const disableEndpoints = endpointsAreDisabled({\n          endpoints: collection.config.endpoints,\n          request,\n        })\n        if (disableEndpoints) return disableEndpoints\n\n        const customEndpointResponse = await handleCustomEndpoints({\n          endpoints: collection.config.endpoints,\n          entitySlug: slug1,\n          req,\n        })\n        if (customEndpointResponse) {\n          return customEndpointResponse\n        } else {\n          await addDataAndFileToRequest(req)\n          addLocalesToRequestFromData(req)\n\n          switch (slug.length) {\n            case 1:\n              // /:collection\n              res = await endpoints.collection.DELETE.delete({ collection, req })\n              break\n            case 2:\n              // /:collection/:id\n              res = await endpoints.collection.DELETE.deleteByID({\n                id: slug2,\n                collection,\n                req,\n              })\n              break\n          }\n        }\n      }\n\n      if (res instanceof Response) {\n        if (req.responseHeaders) {\n          mergeHeaders(req.responseHeaders, res.headers)\n        }\n\n        return res\n      }\n\n      // root routes\n      const customEndpointResponse = await handleCustomEndpoints({\n        endpoints: req.payload.config.endpoints,\n        req,\n      })\n\n      if (customEndpointResponse) return customEndpointResponse\n\n      return RouteNotFoundResponse({\n        slug,\n        req,\n      })\n    } catch (error) {\n      return routeError({\n        collection,\n        config,\n        err: error,\n        req: req || request,\n      })\n    }\n  }\n\nexport const PATCH =\n  (config: Promise<SanitizedConfig> | SanitizedConfig) =>\n  async (request: Request, { params: { slug } }: { params: { slug: string[] } }) => {\n    const [slug1, slug2] = slug\n    let req: PayloadRequest\n    let res: Response\n    let collection: Collection\n\n    try {\n      req = await createPayloadRequest({\n        config,\n        request,\n      })\n      collection = req.payload.collections?.[slug1]\n\n      const disableEndpoints = endpointsAreDisabled({\n        endpoints: req.payload.config.endpoints,\n        request,\n      })\n      if (disableEndpoints) return disableEndpoints\n\n      if (collection) {\n        req.routeParams.collection = slug1\n\n        const disableEndpoints = endpointsAreDisabled({\n          endpoints: collection.config.endpoints,\n          request,\n        })\n        if (disableEndpoints) return disableEndpoints\n\n        const customEndpointResponse = await handleCustomEndpoints({\n          endpoints: collection.config.endpoints,\n          entitySlug: slug1,\n          req,\n        })\n\n        if (customEndpointResponse) {\n          return customEndpointResponse\n        } else {\n          await addDataAndFileToRequest(req)\n          addLocalesToRequestFromData(req)\n\n          switch (slug.length) {\n            case 1:\n              // /:collection\n              res = await endpoints.collection.PATCH.update({ collection, req })\n              break\n            case 2:\n              // /:collection/:id\n              res = await endpoints.collection.PATCH.updateByID({\n                id: slug2,\n                collection,\n                req,\n              })\n              break\n          }\n        }\n      }\n\n      if (res instanceof Response) {\n        if (req.responseHeaders) {\n          mergeHeaders(req.responseHeaders, res.headers)\n        }\n\n        return res\n      }\n\n      // root routes\n      const customEndpointResponse = await handleCustomEndpoints({\n        endpoints: req.payload.config.endpoints,\n        req,\n      })\n\n      if (customEndpointResponse) return customEndpointResponse\n\n      return RouteNotFoundResponse({\n        slug,\n        req,\n      })\n    } catch (error) {\n      return routeError({\n        collection,\n        config,\n        err: error,\n        req: req || request,\n      })\n    }\n  }\n"],"names":["httpStatus","match","addDataAndFileToRequest","addLocalesToRequestFromData","createPayloadRequest","headersWithCors","mergeHeaders","access","forgotPassword","init","login","logout","me","refresh","registerFirstUser","resetPassword","unlock","verifyEmail","buildFormState","endpointsAreDisabled","count","create","deleteDoc","deleteByID","docAccess","duplicate","find","findByID","findVersionByID","findVersions","preview","previewCollection","restoreVersion","update","updateByID","getFile","docAccessGlobal","findOne","findVersionByIdGlobal","findVersionsGlobal","previewGlobal","restoreVersionGlobal","updateGlobal","generateOGImage","routeError","endpoints","collection","DELETE","delete","GET","versions","PATCH","POST","global","root","og","handleCustomEndpoints","entitySlug","req","length","handlerParams","pathname","adjustedPathname","process","env","NEXT_BASE_PATH","pathPrefix","payload","config","routes","api","customEndpoint","endpoint","method","toLowerCase","pathMatchFn","path","decode","decodeURIComponent","tempParams","params","routeParams","res","handler","Response","responseHeaders","headers","RouteNotFoundResponse","slug","json","message","join","Headers","status","NOT_FOUND","OPTIONS","request","error","err","slug1","slug2","slug3","slug4","disableEndpoints","collections","customEndpointResponse","id","filename","globalConfig","globals","overrideHttpMethod","get","disableDuplicate"],"mappings":"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"}