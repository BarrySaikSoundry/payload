{"version":3,"sources":["../../../../src/routes/rest/collections/update.ts"],"sourcesContent":["import type { Where } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport httpStatus from 'http-status'\nimport { updateOperation } from 'payload'\nimport { isNumber } from 'payload/shared'\n\nimport type { CollectionRouteHandler } from '../types.js'\n\nimport { headersWithCors } from '../../../utilities/headersWithCors.js'\n\nexport const update: CollectionRouteHandler = async ({ collection, req }) => {\n  const { depth, draft, where } = req.query as {\n    depth?: string\n    draft?: string\n    where?: Where\n  }\n\n  const result = await updateOperation({\n    collection,\n    data: req.data,\n    depth: isNumber(depth) ? Number(depth) : undefined,\n    draft: draft === 'true',\n    req,\n    where,\n  })\n\n  const headers = headersWithCors({\n    headers: new Headers(),\n    req,\n  })\n\n  if (result.errors.length === 0) {\n    const message = req.t('general:updatedCountSuccessfully', {\n      count: result.docs.length,\n      label: getTranslation(\n        collection.config.labels[result.docs.length > 1 ? 'plural' : 'singular'],\n        req.i18n,\n      ),\n    })\n\n    return Response.json(\n      {\n        ...result,\n        message,\n      },\n      {\n        headers,\n        status: httpStatus.OK,\n      },\n    )\n  }\n\n  const total = result.docs.length + result.errors.length\n  const message = req.t('error:unableToUpdateCount', {\n    count: result.errors.length,\n    label: getTranslation(collection.config.labels[total > 1 ? 'plural' : 'singular'], req.i18n),\n    total,\n  })\n\n  return Response.json(\n    {\n      ...result,\n      message,\n    },\n    {\n      headers,\n      status: httpStatus.BAD_REQUEST,\n    },\n  )\n}\n"],"names":["getTranslation","httpStatus","updateOperation","isNumber","headersWithCors","update","collection","req","depth","draft","where","query","result","data","Number","undefined","headers","Headers","errors","length","message","t","count","docs","label","config","labels","i18n","Response","json","status","OK","total","BAD_REQUEST"],"mappings":"AAEA,SAASA,cAAc,QAAQ,2BAA0B;AACzD,OAAOC,gBAAgB,cAAa;AACpC,SAASC,eAAe,QAAQ,UAAS;AACzC,SAASC,QAAQ,QAAQ,iBAAgB;AAIzC,SAASC,eAAe,QAAQ,wCAAuC;AAEvE,OAAO,MAAMC,SAAiC,OAAO,EAAEC,UAAU,EAAEC,GAAG,EAAE;IACtE,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAE,GAAGH,IAAII,KAAK;IAMzC,MAAMC,SAAS,MAAMV,gBAAgB;QACnCI;QACAO,MAAMN,IAAIM,IAAI;QACdL,OAAOL,SAASK,SAASM,OAAON,SAASO;QACzCN,OAAOA,UAAU;QACjBF;QACAG;IACF;IAEA,MAAMM,UAAUZ,gBAAgB;QAC9BY,SAAS,IAAIC;QACbV;IACF;IAEA,IAAIK,OAAOM,MAAM,CAACC,MAAM,KAAK,GAAG;QAC9B,MAAMC,UAAUb,IAAIc,CAAC,CAAC,oCAAoC;YACxDC,OAAOV,OAAOW,IAAI,CAACJ,MAAM;YACzBK,OAAOxB,eACLM,WAAWmB,MAAM,CAACC,MAAM,CAACd,OAAOW,IAAI,CAACJ,MAAM,GAAG,IAAI,WAAW,WAAW,EACxEZ,IAAIoB,IAAI;QAEZ;QAEA,OAAOC,SAASC,IAAI,CAClB;YACE,GAAGjB,MAAM;YACTQ;QACF,GACA;YACEJ;YACAc,QAAQ7B,WAAW8B,EAAE;QACvB;IAEJ;IAEA,MAAMC,QAAQpB,OAAOW,IAAI,CAACJ,MAAM,GAAGP,OAAOM,MAAM,CAACC,MAAM;IACvD,MAAMC,UAAUb,IAAIc,CAAC,CAAC,6BAA6B;QACjDC,OAAOV,OAAOM,MAAM,CAACC,MAAM;QAC3BK,OAAOxB,eAAeM,WAAWmB,MAAM,CAACC,MAAM,CAACM,QAAQ,IAAI,WAAW,WAAW,EAAEzB,IAAIoB,IAAI;QAC3FK;IACF;IAEA,OAAOJ,SAASC,IAAI,CAClB;QACE,GAAGjB,MAAM;QACTQ;IACF,GACA;QACEJ;QACAc,QAAQ7B,WAAWgC,WAAW;IAChC;AAEJ,EAAC"}