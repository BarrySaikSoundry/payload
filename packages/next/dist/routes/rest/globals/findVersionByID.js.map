{"version":3,"sources":["../../../../src/routes/rest/globals/findVersionByID.ts"],"sourcesContent":["import httpStatus from 'http-status'\nimport { findVersionByIDOperationGlobal } from 'payload'\nimport { isNumber } from 'payload/shared'\n\nimport type { GlobalRouteHandlerWithID } from '../types.js'\n\nimport { headersWithCors } from '../../../utilities/headersWithCors.js'\n\nexport const findVersionByID: GlobalRouteHandlerWithID = async ({ id, globalConfig, req }) => {\n  const { searchParams } = req\n  const depth = searchParams.get('depth')\n\n  const result = await findVersionByIDOperationGlobal({\n    id,\n    depth: isNumber(depth) ? Number(depth) : undefined,\n    globalConfig,\n    req,\n  })\n\n  return Response.json(result, {\n    headers: headersWithCors({\n      headers: new Headers(),\n      req,\n    }),\n    status: httpStatus.OK,\n  })\n}\n"],"names":["httpStatus","findVersionByIDOperationGlobal","isNumber","headersWithCors","findVersionByID","id","globalConfig","req","searchParams","depth","get","result","Number","undefined","Response","json","headers","Headers","status","OK"],"mappings":"AAAA,OAAOA,gBAAgB,cAAa;AACpC,SAASC,8BAA8B,QAAQ,UAAS;AACxD,SAASC,QAAQ,QAAQ,iBAAgB;AAIzC,SAASC,eAAe,QAAQ,wCAAuC;AAEvE,OAAO,MAAMC,kBAA4C,OAAO,EAAEC,EAAE,EAAEC,YAAY,EAAEC,GAAG,EAAE;IACvF,MAAM,EAAEC,YAAY,EAAE,GAAGD;IACzB,MAAME,QAAQD,aAAaE,GAAG,CAAC;IAE/B,MAAMC,SAAS,MAAMV,+BAA+B;QAClDI;QACAI,OAAOP,SAASO,SAASG,OAAOH,SAASI;QACzCP;QACAC;IACF;IAEA,OAAOO,SAASC,IAAI,CAACJ,QAAQ;QAC3BK,SAASb,gBAAgB;YACvBa,SAAS,IAAIC;YACbV;QACF;QACAW,QAAQlB,WAAWmB,EAAE;IACvB;AACF,EAAC"}