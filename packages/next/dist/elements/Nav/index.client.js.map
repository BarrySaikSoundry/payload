{"version":3,"sources":["../../../src/elements/Nav/index.client.tsx"],"sourcesContent":["'use client'\n\nimport type { EntityToGroup } from '@payloadcms/ui/shared'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport {\n  ChevronIcon,\n  NavGroup,\n  useAuth,\n  useConfig,\n  useEntityVisibility,\n  useNav,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { EntityType, groupNavItems } from '@payloadcms/ui/shared'\nimport LinkWithDefault from 'next/link.js'\nimport React, { Fragment } from 'react'\n\nconst baseClass = 'nav'\n\nexport const DefaultNavClient: React.FC = () => {\n  const { permissions } = useAuth()\n  const { isEntityVisible } = useEntityVisibility()\n\n  const {\n    collections,\n    globals,\n    routes: { admin },\n  } = useConfig()\n\n  const { i18n } = useTranslation()\n  const { navOpen } = useNav()\n\n  const groups = groupNavItems(\n    [\n      ...collections\n        .filter(({ slug }) => isEntityVisible({ collectionSlug: slug }))\n        .map((collection) => {\n          const entityToGroup: EntityToGroup = {\n            type: EntityType.collection,\n            entity: collection,\n          }\n\n          return entityToGroup\n        }),\n      ...globals\n        .filter(({ slug }) => isEntityVisible({ globalSlug: slug }))\n        .map((global) => {\n          const entityToGroup: EntityToGroup = {\n            type: EntityType.global,\n            entity: global,\n          }\n\n          return entityToGroup\n        }),\n    ],\n    permissions,\n    i18n,\n  )\n\n  return (\n    <Fragment>\n      {groups.map(({ entities, label }, key) => {\n        return (\n          <NavGroup key={key} label={label}>\n            {entities.map(({ type, entity }, i) => {\n              let entityLabel: string\n              let href: string\n              let id: string\n\n              if (type === EntityType.collection) {\n                href = `${admin}/collections/${entity.slug}`\n                entityLabel = getTranslation(entity.labels.plural, i18n)\n                id = `nav-${entity.slug}`\n              }\n\n              if (type === EntityType.global) {\n                href = `${admin}/globals/${entity.slug}`\n                entityLabel = getTranslation(entity.label, i18n)\n                id = `nav-global-${entity.slug}`\n              }\n\n              const Link = (LinkWithDefault.default ||\n                LinkWithDefault) as typeof LinkWithDefault.default\n\n              const LinkElement = Link || 'a'\n\n              return (\n                <LinkElement\n                  className={`${baseClass}__link`}\n                  href={href}\n                  id={id}\n                  key={i}\n                  tabIndex={!navOpen ? -1 : undefined}\n                >\n                  <span className={`${baseClass}__link-icon`}>\n                    <ChevronIcon direction=\"right\" />\n                  </span>\n                  <span className={`${baseClass}__link-label`}>{entityLabel}</span>\n                </LinkElement>\n              )\n            })}\n          </NavGroup>\n        )\n      })}\n    </Fragment>\n  )\n}\n"],"names":["getTranslation","ChevronIcon","NavGroup","useAuth","useConfig","useEntityVisibility","useNav","useTranslation","EntityType","groupNavItems","LinkWithDefault","React","Fragment","baseClass","DefaultNavClient","permissions","isEntityVisible","collections","globals","routes","admin","i18n","navOpen","groups","filter","slug","collectionSlug","map","collection","entityToGroup","type","entity","globalSlug","global","entities","label","key","i","entityLabel","href","id","labels","plural","Link","default","LinkElement","className","tabIndex","undefined","span","direction"],"mappings":"AAAA;;AAIA,SAASA,cAAc,QAAQ,2BAA0B;AACzD,SACEC,WAAW,EACXC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,mBAAmB,EACnBC,MAAM,EACNC,cAAc,QACT,iBAAgB;AACvB,SAASC,UAAU,EAAEC,aAAa,QAAQ,wBAAuB;AACjE,OAAOC,qBAAqB,eAAc;AAC1C,OAAOC,SAASC,QAAQ,QAAQ,QAAO;AAEvC,MAAMC,YAAY;AAElB,OAAO,MAAMC,mBAA6B;IACxC,MAAM,EAAEC,WAAW,EAAE,GAAGZ;IACxB,MAAM,EAAEa,eAAe,EAAE,GAAGX;IAE5B,MAAM,EACJY,WAAW,EACXC,OAAO,EACPC,QAAQ,EAAEC,KAAK,EAAE,EAClB,GAAGhB;IAEJ,MAAM,EAAEiB,IAAI,EAAE,GAAGd;IACjB,MAAM,EAAEe,OAAO,EAAE,GAAGhB;IAEpB,MAAMiB,SAASd,cACb;WACKQ,YACAO,MAAM,CAAC,CAAC,EAAEC,IAAI,EAAE,GAAKT,gBAAgB;gBAAEU,gBAAgBD;YAAK,IAC5DE,GAAG,CAAC,CAACC;YACJ,MAAMC,gBAA+B;gBACnCC,MAAMtB,WAAWoB,UAAU;gBAC3BG,QAAQH;YACV;YAEA,OAAOC;QACT;WACCX,QACAM,MAAM,CAAC,CAAC,EAAEC,IAAI,EAAE,GAAKT,gBAAgB;gBAAEgB,YAAYP;YAAK,IACxDE,GAAG,CAAC,CAACM;YACJ,MAAMJ,gBAA+B;gBACnCC,MAAMtB,WAAWyB,MAAM;gBACvBF,QAAQE;YACV;YAEA,OAAOJ;QACT;KACH,EACDd,aACAM;IAGF,qBACE,KAACT;kBACEW,OAAOI,GAAG,CAAC,CAAC,EAAEO,QAAQ,EAAEC,KAAK,EAAE,EAAEC;YAChC,qBACE,KAAClC;gBAAmBiC,OAAOA;0BACxBD,SAASP,GAAG,CAAC,CAAC,EAAEG,IAAI,EAAEC,MAAM,EAAE,EAAEM;oBAC/B,IAAIC;oBACJ,IAAIC;oBACJ,IAAIC;oBAEJ,IAAIV,SAAStB,WAAWoB,UAAU,EAAE;wBAClCW,OAAO,CAAC,EAAEnB,MAAM,aAAa,EAAEW,OAAON,IAAI,CAAC,CAAC;wBAC5Ca,cAActC,eAAe+B,OAAOU,MAAM,CAACC,MAAM,EAAErB;wBACnDmB,KAAK,CAAC,IAAI,EAAET,OAAON,IAAI,CAAC,CAAC;oBAC3B;oBAEA,IAAIK,SAAStB,WAAWyB,MAAM,EAAE;wBAC9BM,OAAO,CAAC,EAAEnB,MAAM,SAAS,EAAEW,OAAON,IAAI,CAAC,CAAC;wBACxCa,cAActC,eAAe+B,OAAOI,KAAK,EAAEd;wBAC3CmB,KAAK,CAAC,WAAW,EAAET,OAAON,IAAI,CAAC,CAAC;oBAClC;oBAEA,MAAMkB,OAAQjC,gBAAgBkC,OAAO,IACnClC;oBAEF,MAAMmC,cAAcF,QAAQ;oBAE5B,qBACE,MAACE;wBACCC,WAAW,CAAC,EAAEjC,UAAU,MAAM,CAAC;wBAC/B0B,MAAMA;wBACNC,IAAIA;wBAEJO,UAAU,CAACzB,UAAU,CAAC,IAAI0B;;0CAE1B,KAACC;gCAAKH,WAAW,CAAC,EAAEjC,UAAU,WAAW,CAAC;0CACxC,cAAA,KAACZ;oCAAYiD,WAAU;;;0CAEzB,KAACD;gCAAKH,WAAW,CAAC,EAAEjC,UAAU,YAAY,CAAC;0CAAGyB;;;uBANzCD;gBASX;eArCaD;QAwCnB;;AAGN,EAAC"}