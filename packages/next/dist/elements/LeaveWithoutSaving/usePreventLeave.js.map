{"version":3,"sources":["../../../src/elements/LeaveWithoutSaving/usePreventLeave.tsx"],"sourcesContent":["// Credit: @Taiki92777\n//    - Source: https://github.com/vercel/next.js/discussions/32231#discussioncomment-7284386\n// Credit: `react-use` maintainers\n//    -  Source: https://github.com/streamich/react-use/blob/ade8d3905f544305515d010737b4ae604cc51024/src/useBeforeUnload.ts#L2\nimport { useRouter } from 'next/navigation.js'\nimport { useCallback, useEffect, useRef } from 'react'\n\nfunction on<T extends Document | EventTarget | HTMLElement | Window>(\n  obj: T | null,\n  ...args: [string, Function | null, ...any] | Parameters<T['addEventListener']>\n): void {\n  if (obj && obj.addEventListener) {\n    obj.addEventListener(...(args as Parameters<HTMLElement['addEventListener']>))\n  }\n}\n\nfunction off<T extends Document | EventTarget | HTMLElement | Window>(\n  obj: T | null,\n  ...args: [string, Function | null, ...any] | Parameters<T['removeEventListener']>\n): void {\n  if (obj && obj.removeEventListener) {\n    obj.removeEventListener(...(args as Parameters<HTMLElement['removeEventListener']>))\n  }\n}\n\nexport const useBeforeUnload = (enabled: (() => boolean) | boolean = true, message?: string) => {\n  const handler = useCallback(\n    (event: BeforeUnloadEvent) => {\n      const finalEnabled = typeof enabled === 'function' ? enabled() : true\n\n      if (!finalEnabled) {\n        return\n      }\n\n      event.preventDefault()\n\n      if (message) {\n        event.returnValue = message\n      }\n\n      return message\n    },\n    [enabled, message],\n  )\n\n  useEffect(() => {\n    if (!enabled) {\n      return\n    }\n\n    on(window, 'beforeunload', handler)\n\n    return () => off(window, 'beforeunload', handler)\n  }, [enabled, handler])\n}\n\nexport const usePreventLeave = ({\n  hasAccepted = false,\n  message = 'Are you sure want to leave this page?',\n  onPrevent,\n  prevent = true,\n}: {\n  hasAccepted: boolean\n  // if no `onPrevent` is provided, the message will be displayed in a confirm dialog\n  message?: string\n  // to use a custom confirmation dialog, provide a function that returns a boolean\n  onPrevent?: () => void\n  prevent: boolean\n}) => {\n  // check when page is about to be reloaded\n  useBeforeUnload(prevent, message)\n\n  const router = useRouter()\n  const cancelledURL = useRef<string>('')\n\n  // check when page is about to be changed\n  useEffect(() => {\n    function isAnchorOfCurrentUrl(currentUrl: string, newUrl: string) {\n      const currentUrlObj = new URL(currentUrl)\n      const newUrlObj = new URL(newUrl)\n      // Compare hostname, pathname, and search parameters\n      if (\n        currentUrlObj.hostname === newUrlObj.hostname &&\n        currentUrlObj.pathname === newUrlObj.pathname &&\n        currentUrlObj.search === newUrlObj.search\n      ) {\n        // Check if the new URL is just an anchor of the current URL page\n        const currentHash = currentUrlObj.hash\n        const newHash = newUrlObj.hash\n        return (\n          currentHash !== newHash &&\n          currentUrlObj.href.replace(currentHash, '') === newUrlObj.href.replace(newHash, '')\n        )\n      }\n      return false\n    }\n\n    function findClosestAnchor(element: HTMLElement | null): HTMLAnchorElement | null {\n      while (element && element.tagName.toLowerCase() !== 'a') {\n        element = element.parentElement\n      }\n      return element as HTMLAnchorElement\n    }\n    function handleClick(event: MouseEvent) {\n      try {\n        const target = event.target as HTMLElement\n        const anchor = findClosestAnchor(target)\n        if (anchor) {\n          const currentUrl = window.location.href\n          const newUrl = anchor.href\n          const isAnchor = isAnchorOfCurrentUrl(currentUrl, newUrl)\n          const isDownloadLink = anchor.download !== ''\n\n          const isPageLeaving = !(newUrl === currentUrl || isAnchor || isDownloadLink)\n\n          if (isPageLeaving && prevent && (!onPrevent ? !window.confirm(message) : true)) {\n            // Keep a reference of the href\n            cancelledURL.current = newUrl\n\n            // Cancel the route change\n            event.preventDefault()\n            event.stopPropagation()\n\n            if (typeof onPrevent === 'function') {\n              onPrevent()\n            }\n          }\n        }\n      } catch (err) {\n        alert(err)\n      }\n    }\n\n    // Add the global click event listener\n    document.addEventListener('click', handleClick, true)\n\n    // Clean up the global click event listener when the component is unmounted\n    return () => {\n      document.removeEventListener('click', handleClick, true)\n    }\n  }, [onPrevent, prevent, message])\n\n  useEffect(() => {\n    if (hasAccepted && cancelledURL.current) {\n      router.push(cancelledURL.current)\n    }\n  }, [hasAccepted, router])\n}\n"],"names":["useRouter","useCallback","useEffect","useRef","on","obj","args","addEventListener","off","removeEventListener","useBeforeUnload","enabled","message","handler","event","finalEnabled","preventDefault","returnValue","window","usePreventLeave","hasAccepted","onPrevent","prevent","router","cancelledURL","isAnchorOfCurrentUrl","currentUrl","newUrl","currentUrlObj","URL","newUrlObj","hostname","pathname","search","currentHash","hash","newHash","href","replace","findClosestAnchor","element","tagName","toLowerCase","parentElement","handleClick","target","anchor","location","isAnchor","isDownloadLink","download","isPageLeaving","confirm","current","stopPropagation","err","alert","document","push"],"mappings":"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"}