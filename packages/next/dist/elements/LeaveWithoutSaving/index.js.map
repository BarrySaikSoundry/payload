{"version":3,"sources":["../../../src/elements/LeaveWithoutSaving/index.tsx"],"sourcesContent":["'use client'\nimport { Button, Modal, useAuth, useFormModified, useModal, useTranslation } from '@payloadcms/ui'\nimport React, { useCallback, useEffect } from 'react'\n\nimport './index.scss'\nimport { usePreventLeave } from './usePreventLeave.js'\n\nconst modalSlug = 'leave-without-saving'\n\nconst baseClass = 'leave-without-saving'\n\nconst Component: React.FC<{\n  isActive: boolean\n  onCancel: () => void\n  onConfirm: () => void\n}> = ({ isActive, onCancel, onConfirm }) => {\n  const { closeModal, modalState, openModal } = useModal()\n  const { t } = useTranslation()\n\n  // Manually check for modal state as 'esc' key will not trigger the nav inactivity\n  // useEffect(() => {\n  //   if (!modalState?.[modalSlug]?.isOpen && isActive) {\n  //     onCancel()\n  //   }\n  // }, [modalState, isActive, onCancel])\n\n  useEffect(() => {\n    if (isActive) openModal(modalSlug)\n    else closeModal(modalSlug)\n  }, [isActive, openModal, closeModal])\n\n  return (\n    <Modal className={baseClass} onClose={onCancel} slug={modalSlug}>\n      <div className={`${baseClass}__wrapper`}>\n        <div className={`${baseClass}__content`}>\n          <h1>{t('general:leaveWithoutSaving')}</h1>\n          <p>{t('general:changesNotSaved')}</p>\n        </div>\n        <div className={`${baseClass}__controls`}>\n          <Button buttonStyle=\"secondary\" onClick={onCancel}>\n            {t('general:stayOnThisPage')}\n          </Button>\n          <Button onClick={onConfirm}>{t('general:leaveAnyway')}</Button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport const LeaveWithoutSaving: React.FC = () => {\n  const modified = useFormModified()\n  const { user } = useAuth()\n  const [show, setShow] = React.useState(false)\n  const [hasAccepted, setHasAccepted] = React.useState(false)\n\n  const prevent = Boolean(modified && user)\n\n  const onPrevent = useCallback(() => {\n    setShow(true)\n  }, [])\n\n  usePreventLeave({ hasAccepted, onPrevent, prevent })\n\n  return (\n    <Component\n      isActive={show}\n      onCancel={() => {\n        setShow(false)\n      }}\n      onConfirm={() => {\n        setHasAccepted(true)\n      }}\n    />\n  )\n}\n"],"names":["Button","Modal","useAuth","useFormModified","useModal","useTranslation","React","useCallback","useEffect","usePreventLeave","modalSlug","baseClass","Component","isActive","onCancel","onConfirm","closeModal","modalState","openModal","t","className","onClose","slug","div","h1","p","buttonStyle","onClick","LeaveWithoutSaving","modified","user","show","setShow","useState","hasAccepted","setHasAccepted","prevent","Boolean","onPrevent"],"mappings":"AAAA;;AACA,SAASA,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,eAAe,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,iBAAgB;AAClG,OAAOC,SAASC,WAAW,EAAEC,SAAS,QAAQ,QAAO;AAGrD,SAASC,eAAe,QAAQ,uBAAsB;AAEtD,MAAMC,YAAY;AAElB,MAAMC,YAAY;AAElB,MAAMC,YAID,CAAC,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,EAAE;IACrC,MAAM,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,EAAE,GAAGd;IAC9C,MAAM,EAAEe,CAAC,EAAE,GAAGd;IAEd,kFAAkF;IAClF,oBAAoB;IACpB,wDAAwD;IACxD,iBAAiB;IACjB,MAAM;IACN,uCAAuC;IAEvCG,UAAU;QACR,IAAIK,UAAUK,UAAUR;aACnBM,WAAWN;IAClB,GAAG;QAACG;QAAUK;QAAWF;KAAW;IAEpC,qBACE,KAACf;QAAMmB,WAAWT;QAAWU,SAASP;QAAUQ,MAAMZ;kBACpD,cAAA,MAACa;YAAIH,WAAW,CAAC,EAAET,UAAU,SAAS,CAAC;;8BACrC,MAACY;oBAAIH,WAAW,CAAC,EAAET,UAAU,SAAS,CAAC;;sCACrC,KAACa;sCAAIL,EAAE;;sCACP,KAACM;sCAAGN,EAAE;;;;8BAER,MAACI;oBAAIH,WAAW,CAAC,EAAET,UAAU,UAAU,CAAC;;sCACtC,KAACX;4BAAO0B,aAAY;4BAAYC,SAASb;sCACtCK,EAAE;;sCAEL,KAACnB;4BAAO2B,SAASZ;sCAAYI,EAAE;;;;;;;AAKzC;AAEA,OAAO,MAAMS,qBAA+B;IAC1C,MAAMC,WAAW1B;IACjB,MAAM,EAAE2B,IAAI,EAAE,GAAG5B;IACjB,MAAM,CAAC6B,MAAMC,QAAQ,GAAG1B,MAAM2B,QAAQ,CAAC;IACvC,MAAM,CAACC,aAAaC,eAAe,GAAG7B,MAAM2B,QAAQ,CAAC;IAErD,MAAMG,UAAUC,QAAQR,YAAYC;IAEpC,MAAMQ,YAAY/B,YAAY;QAC5ByB,QAAQ;IACV,GAAG,EAAE;IAELvB,gBAAgB;QAAEyB;QAAaI;QAAWF;IAAQ;IAElD,qBACE,KAACxB;QACCC,UAAUkB;QACVjB,UAAU;YACRkB,QAAQ;QACV;QACAjB,WAAW;YACToB,eAAe;QACjB;;AAGN,EAAC"}