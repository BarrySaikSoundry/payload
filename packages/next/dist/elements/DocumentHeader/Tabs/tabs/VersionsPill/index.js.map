{"version":3,"sources":["../../../../../../src/elements/DocumentHeader/Tabs/tabs/VersionsPill/index.tsx"],"sourcesContent":["'use client'\nimport { useDocumentInfo } from '@payloadcms/ui'\nimport React, { Fragment } from 'react'\n\nimport { baseClass } from '../../Tab/index.js'\n\nexport const VersionsPill: React.FC = () => {\n  const { versions } = useDocumentInfo()\n\n  // To prevent CLS (versions are currently loaded client-side), render non-breaking space if there are no versions\n  // The pill is already conditionally rendered to begin with based on whether the document is version-enabled\n  // documents that are version enabled _always_ have at least one version\n  const hasVersions = versions?.totalDocs > 0\n\n  return (\n    <span\n      className={[`${baseClass}__count`, hasVersions ? `${baseClass}__count--has-count` : '']\n        .filter(Boolean)\n        .join(' ')}\n    >\n      {hasVersions ? versions.totalDocs.toString() : <Fragment>&nbsp;</Fragment>}\n    </span>\n  )\n}\n"],"names":["useDocumentInfo","React","Fragment","baseClass","VersionsPill","versions","hasVersions","totalDocs","span","className","filter","Boolean","join","toString"],"mappings":"AAAA;;AACA,SAASA,eAAe,QAAQ,iBAAgB;AAChD,OAAOC,SAASC,QAAQ,QAAQ,QAAO;AAEvC,SAASC,SAAS,QAAQ,qBAAoB;AAE9C,OAAO,MAAMC,eAAyB;IACpC,MAAM,EAAEC,QAAQ,EAAE,GAAGL;IAErB,iHAAiH;IACjH,4GAA4G;IAC5G,wEAAwE;IACxE,MAAMM,cAAcD,UAAUE,YAAY;IAE1C,qBACE,KAACC;QACCC,WAAW;YAAC,CAAC,EAAEN,UAAU,OAAO,CAAC;YAAEG,cAAc,CAAC,EAAEH,UAAU,kBAAkB,CAAC,GAAG;SAAG,CACpFO,MAAM,CAACC,SACPC,IAAI,CAAC;kBAEPN,cAAcD,SAASE,SAAS,CAACM,QAAQ,mBAAK,KAACX;sBAAS;;;AAG/D,EAAC"}