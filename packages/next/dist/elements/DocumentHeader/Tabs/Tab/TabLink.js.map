{"version":3,"sources":["../../../../../src/elements/DocumentHeader/Tabs/Tab/TabLink.tsx"],"sourcesContent":["'use client'\nimport type { SanitizedConfig } from 'payload'\n\nimport { useSearchParams } from '@payloadcms/ui'\nimport LinkImport from 'next/link.js'\nimport { useParams, usePathname } from 'next/navigation.js'\nimport React from 'react'\n\nconst Link = (LinkImport.default || LinkImport) as unknown as typeof LinkImport.default\n\nexport const DocumentTabLink: React.FC<{\n  adminRoute: SanitizedConfig['routes']['admin']\n  ariaLabel?: string\n  baseClass: string\n  children?: React.ReactNode\n  href: string\n  isActive?: boolean\n  isCollection?: boolean\n  newTab?: boolean\n}> = ({\n  adminRoute,\n  ariaLabel,\n  baseClass,\n  children,\n  href: hrefFromProps,\n  isActive: isActiveFromProps,\n  newTab,\n}) => {\n  const pathname = usePathname()\n  const params = useParams()\n\n  const { searchParams } = useSearchParams()\n\n  const locale =\n    'locale' in searchParams && typeof searchParams.locale === 'string'\n      ? searchParams.locale\n      : undefined\n\n  const [entityType, entitySlug, segmentThree, segmentFour, ...rest] = params.segments || []\n  const isCollection = entityType === 'collections'\n  let docPath = `${adminRoute}/${isCollection ? 'collections' : 'globals'}/${entitySlug}`\n  if (isCollection && segmentThree) {\n    // doc ID\n    docPath += `/${segmentThree}`\n  }\n\n  const href = `${docPath}${hrefFromProps}`\n  // separated the two so it doesn't break checks against pathname\n  const hrefWithLocale = `${href}${locale ? `?locale=${locale}` : ''}`\n\n  const isActive =\n    (href === docPath && pathname === docPath) ||\n    (href !== docPath && pathname.startsWith(href)) ||\n    isActiveFromProps\n\n  return (\n    <li\n      aria-label={ariaLabel}\n      className={[baseClass, isActive && `${baseClass}--active`].filter(Boolean).join(' ')}\n    >\n      <Link\n        className={`${baseClass}__link`}\n        href={!isActive || href !== pathname ? hrefWithLocale : ''}\n        {...(newTab && { rel: 'noopener noreferrer', target: '_blank' })}\n        tabIndex={isActive ? -1 : 0}\n      >\n        {children}\n      </Link>\n    </li>\n  )\n}\n"],"names":["useSearchParams","LinkImport","useParams","usePathname","React","Link","default","DocumentTabLink","adminRoute","ariaLabel","baseClass","children","href","hrefFromProps","isActive","isActiveFromProps","newTab","pathname","params","searchParams","locale","undefined","entityType","entitySlug","segmentThree","segmentFour","rest","segments","isCollection","docPath","hrefWithLocale","startsWith","li","aria-label","className","filter","Boolean","join","rel","target","tabIndex"],"mappings":"AAAA;;AAGA,SAASA,eAAe,QAAQ,iBAAgB;AAChD,OAAOC,gBAAgB,eAAc;AACrC,SAASC,SAAS,EAAEC,WAAW,QAAQ,qBAAoB;AAC3D,OAAOC,WAAW,QAAO;AAEzB,MAAMC,OAAQJ,WAAWK,OAAO,IAAIL;AAEpC,OAAO,MAAMM,kBASR,CAAC,EACJC,UAAU,EACVC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,MAAMC,aAAa,EACnBC,UAAUC,iBAAiB,EAC3BC,MAAM,EACP;IACC,MAAMC,WAAWd;IACjB,MAAMe,SAAShB;IAEf,MAAM,EAAEiB,YAAY,EAAE,GAAGnB;IAEzB,MAAMoB,SACJ,YAAYD,gBAAgB,OAAOA,aAAaC,MAAM,KAAK,WACvDD,aAAaC,MAAM,GACnBC;IAEN,MAAM,CAACC,YAAYC,YAAYC,cAAcC,aAAa,GAAGC,KAAK,GAAGR,OAAOS,QAAQ,IAAI,EAAE;IAC1F,MAAMC,eAAeN,eAAe;IACpC,IAAIO,UAAU,CAAC,EAAErB,WAAW,CAAC,EAAEoB,eAAe,gBAAgB,UAAU,CAAC,EAAEL,WAAW,CAAC;IACvF,IAAIK,gBAAgBJ,cAAc;QAChC,SAAS;QACTK,WAAW,CAAC,CAAC,EAAEL,aAAa,CAAC;IAC/B;IAEA,MAAMZ,OAAO,CAAC,EAAEiB,QAAQ,EAAEhB,cAAc,CAAC;IACzC,gEAAgE;IAChE,MAAMiB,iBAAiB,CAAC,EAAElB,KAAK,EAAEQ,SAAS,CAAC,QAAQ,EAAEA,OAAO,CAAC,GAAG,GAAG,CAAC;IAEpE,MAAMN,WACJ,AAACF,SAASiB,WAAWZ,aAAaY,WACjCjB,SAASiB,WAAWZ,SAASc,UAAU,CAACnB,SACzCG;IAEF,qBACE,KAACiB;QACCC,cAAYxB;QACZyB,WAAW;YAACxB;YAAWI,YAAY,CAAC,EAAEJ,UAAU,QAAQ,CAAC;SAAC,CAACyB,MAAM,CAACC,SAASC,IAAI,CAAC;kBAEhF,cAAA,KAAChC;YACC6B,WAAW,CAAC,EAAExB,UAAU,MAAM,CAAC;YAC/BE,MAAM,CAACE,YAAYF,SAASK,WAAWa,iBAAiB;YACvD,GAAId,UAAU;gBAAEsB,KAAK;gBAAuBC,QAAQ;YAAS,CAAC;YAC/DC,UAAU1B,WAAW,CAAC,IAAI;sBAEzBH;;;AAIT,EAAC"}