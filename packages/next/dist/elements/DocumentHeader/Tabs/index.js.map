{"version":3,"sources":["../../../../src/elements/DocumentHeader/Tabs/index.tsx"],"sourcesContent":["import type { I18n } from '@payloadcms/translations'\nimport type {\n  Permissions,\n  SanitizedCollectionConfig,\n  SanitizedConfig,\n  SanitizedGlobalConfig,\n} from 'payload'\n\nimport { isPlainObject } from 'payload'\nimport React from 'react'\n\nimport { ShouldRenderTabs } from './ShouldRenderTabs.js'\nimport { DocumentTab } from './Tab/index.js'\nimport { getCustomViews } from './getCustomViews.js'\nimport { getViewConfig } from './getViewConfig.js'\nimport './index.scss'\nimport { tabs as defaultTabs } from './tabs/index.js'\n\nconst baseClass = 'doc-tabs'\n\nexport const DocumentTabs: React.FC<{\n  collectionConfig: SanitizedCollectionConfig\n  config: SanitizedConfig\n  globalConfig: SanitizedGlobalConfig\n  i18n: I18n\n  permissions: Permissions\n}> = (props) => {\n  const { collectionConfig, config, globalConfig, permissions } = props\n\n  const customViews = getCustomViews({ collectionConfig, globalConfig })\n\n  return (\n    <ShouldRenderTabs>\n      <div className={baseClass}>\n        <div className={`${baseClass}__tabs-container`}>\n          <ul className={`${baseClass}__tabs`}>\n            {Object.entries(defaultTabs)\n              // sort `defaultViews` based on `order` property from smallest to largest\n              // if no `order`, append the view to the end\n              // TODO: open `order` to the config and merge `defaultViews` with `customViews`\n              ?.sort(([, a], [, b]) => {\n                if (a.order === undefined && b.order === undefined) return 0\n                else if (a.order === undefined) return 1\n                else if (b.order === undefined) return -1\n                return a.order - b.order\n              })\n              ?.map(([name, tab], index) => {\n                const viewConfig = getViewConfig({ name, collectionConfig, globalConfig })\n                const tabFromConfig = viewConfig && 'Tab' in viewConfig ? viewConfig.Tab : undefined\n                const tabConfig = typeof tabFromConfig === 'object' ? tabFromConfig : undefined\n\n                const { condition } = tabConfig || {}\n\n                const meetsCondition =\n                  !condition ||\n                  (condition &&\n                    Boolean(condition({ collectionConfig, config, globalConfig, permissions })))\n\n                if (meetsCondition) {\n                  return (\n                    <DocumentTab\n                      key={`tab-${index}`}\n                      {...{\n                        ...props,\n                        ...(tab || {}),\n                        ...(tabFromConfig || {}),\n                      }}\n                    />\n                  )\n                }\n\n                return null\n              })}\n            {customViews?.map((CustomView, index) => {\n              if ('Tab' in CustomView) {\n                const { Tab, path } = CustomView\n\n                if (typeof Tab === 'object' && !isPlainObject(Tab)) {\n                  throw new Error(\n                    `Custom 'Tab' Component for path: \"${path}\" must be a React Server Component. To use client-side functionality, render your Client Component within a Server Component and pass it only props that are serializable. More info: https://react.dev/reference/react/use-server#serializable-parameters-and-return-values`,\n                  )\n                }\n\n                if (typeof Tab === 'function') {\n                  return <Tab path={path} {...props} key={`tab-custom-${index}`} />\n                }\n\n                return (\n                  <DocumentTab\n                    key={`tab-custom-${index}`}\n                    {...{\n                      ...props,\n                      ...Tab,\n                    }}\n                  />\n                )\n              }\n              return null\n            })}\n          </ul>\n        </div>\n      </div>\n    </ShouldRenderTabs>\n  )\n}\n"],"names":["isPlainObject","React","ShouldRenderTabs","DocumentTab","getCustomViews","getViewConfig","tabs","defaultTabs","baseClass","DocumentTabs","props","collectionConfig","config","globalConfig","permissions","customViews","div","className","ul","Object","entries","sort","a","b","order","undefined","map","name","tab","index","viewConfig","tabFromConfig","Tab","tabConfig","condition","meetsCondition","Boolean","CustomView","path","Error","key"],"mappings":";;AAQA,SAASA,aAAa,QAAQ,UAAS;AACvC,OAAOC,WAAW,QAAO;AAEzB,SAASC,gBAAgB,QAAQ,wBAAuB;AACxD,SAASC,WAAW,QAAQ,iBAAgB;AAC5C,SAASC,cAAc,QAAQ,sBAAqB;AACpD,SAASC,aAAa,QAAQ,qBAAoB;AAElD,SAASC,QAAQC,WAAW,QAAQ,kBAAiB;AAErD,MAAMC,YAAY;AAElB,OAAO,MAAMC,eAMR,CAACC;IACJ,MAAM,EAAEC,gBAAgB,EAAEC,MAAM,EAAEC,YAAY,EAAEC,WAAW,EAAE,GAAGJ;IAEhE,MAAMK,cAAcX,eAAe;QAAEO;QAAkBE;IAAa;IAEpE,qBACE,KAACX;kBACC,cAAA,KAACc;YAAIC,WAAWT;sBACd,cAAA,KAACQ;gBAAIC,WAAW,CAAC,EAAET,UAAU,gBAAgB,CAAC;0BAC5C,cAAA,MAACU;oBAAGD,WAAW,CAAC,EAAET,UAAU,MAAM,CAAC;;wBAChCW,OAAOC,OAAO,CAACb,cAIZc,KAAK,CAAC,GAAGC,EAAE,EAAE,GAAGC,EAAE;4BAClB,IAAID,EAAEE,KAAK,KAAKC,aAAaF,EAAEC,KAAK,KAAKC,WAAW,OAAO;iCACtD,IAAIH,EAAEE,KAAK,KAAKC,WAAW,OAAO;iCAClC,IAAIF,EAAEC,KAAK,KAAKC,WAAW,OAAO,CAAC;4BACxC,OAAOH,EAAEE,KAAK,GAAGD,EAAEC,KAAK;wBAC1B,IACEE,IAAI,CAAC,CAACC,MAAMC,IAAI,EAAEC;4BAClB,MAAMC,aAAazB,cAAc;gCAAEsB;gCAAMhB;gCAAkBE;4BAAa;4BACxE,MAAMkB,gBAAgBD,cAAc,SAASA,aAAaA,WAAWE,GAAG,GAAGP;4BAC3E,MAAMQ,YAAY,OAAOF,kBAAkB,WAAWA,gBAAgBN;4BAEtE,MAAM,EAAES,SAAS,EAAE,GAAGD,aAAa,CAAC;4BAEpC,MAAME,iBACJ,CAACD,aACAA,aACCE,QAAQF,UAAU;gCAAEvB;gCAAkBC;gCAAQC;gCAAcC;4BAAY;4BAE5E,IAAIqB,gBAAgB;gCAClB,qBACE,KAAChC;oCAGG,GAAGO,KAAK;oCACR,GAAIkB,OAAO,CAAC,CAAC;oCACb,GAAIG,iBAAiB,CAAC,CAAC;mCAJpB,CAAC,IAAI,EAAEF,MAAM,CAAC;4BAQzB;4BAEA,OAAO;wBACT;wBACDd,aAAaW,IAAI,CAACW,YAAYR;4BAC7B,IAAI,SAASQ,YAAY;gCACvB,MAAM,EAAEL,GAAG,EAAEM,IAAI,EAAE,GAAGD;gCAEtB,IAAI,OAAOL,QAAQ,YAAY,CAAChC,cAAcgC,MAAM;oCAClD,MAAM,IAAIO,MACR,CAAC,kCAAkC,EAAED,KAAK,4QAA4Q,CAAC;gCAE3T;gCAEA,IAAI,OAAON,QAAQ,YAAY;oCAC7B,qBAAO,eAACA;wCAAIM,MAAMA;wCAAO,GAAG5B,KAAK;wCAAE8B,KAAK,CAAC,WAAW,EAAEX,MAAM,CAAC;;gCAC/D;gCAEA,qBACE,KAAC1B;oCAGG,GAAGO,KAAK;oCACR,GAAGsB,GAAG;mCAHH,CAAC,WAAW,EAAEH,MAAM,CAAC;4BAOhC;4BACA,OAAO;wBACT;;;;;;AAMZ,EAAC"}