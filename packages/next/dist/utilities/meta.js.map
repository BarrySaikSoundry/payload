{"version":3,"sources":["../../src/utilities/meta.ts"],"sourcesContent":["import type { Metadata } from 'next'\nimport type { Icon } from 'next/dist/lib/metadata/types/metadata-types.js'\nimport type { MetaConfig } from 'payload'\n\nimport { payloadFaviconDark, payloadFaviconLight, staticOGImage } from '@payloadcms/ui/assets'\nimport * as qs from 'qs-esm'\n\nconst defaultOpenGraph = {\n  description:\n    'Payload is a headless CMS and application framework built with TypeScript, Node.js, and React.',\n  siteName: 'Payload App',\n  title: 'Payload App',\n}\n\nexport const meta = async (args: { serverURL: string } & MetaConfig): Promise<any> => {\n  const {\n    defaultOGImageType,\n    description,\n    icons: customIcons,\n    keywords,\n    openGraph: openGraphFromProps,\n    serverURL,\n    title,\n    titleSuffix,\n  } = args\n\n  const payloadIcons: Icon[] = [\n    {\n      type: 'image/png',\n      rel: 'icon',\n      sizes: '32x32',\n      url: typeof payloadFaviconDark === 'object' ? payloadFaviconDark?.src : payloadFaviconDark,\n    },\n    {\n      type: 'image/png',\n      media: '(prefers-color-scheme: dark)',\n      rel: 'icon',\n      sizes: '32x32',\n      url: typeof payloadFaviconLight === 'object' ? payloadFaviconLight?.src : payloadFaviconLight,\n    },\n  ]\n\n  let icons = customIcons ?? payloadIcons // TODO: fix this type assertion\n\n  if (customIcons && typeof customIcons === 'object' && Array.isArray(customIcons)) {\n    icons = payloadIcons.concat(customIcons) // TODO: fix this type assertion\n  }\n\n  const metaTitle = `${title} ${titleSuffix}`\n\n  const ogTitle = `${typeof openGraphFromProps?.title === 'string' ? openGraphFromProps.title : title} ${titleSuffix}`\n\n  const mergedOpenGraph: Metadata['openGraph'] = {\n    ...(defaultOpenGraph || {}),\n    ...(defaultOGImageType === 'dynamic'\n      ? {\n          images: [\n            {\n              alt: ogTitle,\n              height: 630,\n              url: `/api/og${qs.stringify(\n                {\n                  description: openGraphFromProps?.description || defaultOpenGraph.description,\n                  title: ogTitle,\n                },\n                {\n                  addQueryPrefix: true,\n                },\n              )}`,\n              width: 1200,\n            },\n          ],\n        }\n      : {}),\n    ...(defaultOGImageType === 'static'\n      ? {\n          images: [\n            {\n              alt: ogTitle,\n              height: 480,\n              url: typeof staticOGImage === 'object' ? staticOGImage?.src : staticOGImage,\n              width: 640,\n            },\n          ],\n        }\n      : {}),\n    title: ogTitle,\n    ...(openGraphFromProps || {}),\n  }\n\n  return Promise.resolve({\n    description,\n    icons,\n    keywords,\n    metadataBase: new URL(\n      serverURL ||\n        process.env.PAYLOAD_PUBLIC_SERVER_URL ||\n        `http://localhost:${process.env.PORT || 3000}`,\n    ),\n    openGraph: mergedOpenGraph,\n    title: metaTitle,\n  })\n}\n"],"names":["payloadFaviconDark","payloadFaviconLight","staticOGImage","qs","defaultOpenGraph","description","siteName","title","meta","args","defaultOGImageType","icons","customIcons","keywords","openGraph","openGraphFromProps","serverURL","titleSuffix","payloadIcons","type","rel","sizes","url","src","media","Array","isArray","concat","metaTitle","ogTitle","mergedOpenGraph","images","alt","height","stringify","addQueryPrefix","width","Promise","resolve","metadataBase","URL","process","env","PAYLOAD_PUBLIC_SERVER_URL","PORT"],"mappings":"AAIA,SAASA,kBAAkB,EAAEC,mBAAmB,EAAEC,aAAa,QAAQ,wBAAuB;AAC9F,YAAYC,QAAQ,SAAQ;AAE5B,MAAMC,mBAAmB;IACvBC,aACE;IACFC,UAAU;IACVC,OAAO;AACT;AAEA,OAAO,MAAMC,OAAO,OAAOC;IACzB,MAAM,EACJC,kBAAkB,EAClBL,WAAW,EACXM,OAAOC,WAAW,EAClBC,QAAQ,EACRC,WAAWC,kBAAkB,EAC7BC,SAAS,EACTT,KAAK,EACLU,WAAW,EACZ,GAAGR;IAEJ,MAAMS,eAAuB;QAC3B;YACEC,MAAM;YACNC,KAAK;YACLC,OAAO;YACPC,KAAK,OAAOtB,uBAAuB,WAAWA,oBAAoBuB,MAAMvB;QAC1E;QACA;YACEmB,MAAM;YACNK,OAAO;YACPJ,KAAK;YACLC,OAAO;YACPC,KAAK,OAAOrB,wBAAwB,WAAWA,qBAAqBsB,MAAMtB;QAC5E;KACD;IAED,IAAIU,QAAQC,eAAeM,aAAa,gCAAgC;;IAExE,IAAIN,eAAe,OAAOA,gBAAgB,YAAYa,MAAMC,OAAO,CAACd,cAAc;QAChFD,QAAQO,aAAaS,MAAM,CAACf,aAAa,gCAAgC;;IAC3E;IAEA,MAAMgB,YAAY,CAAC,EAAErB,MAAM,CAAC,EAAEU,YAAY,CAAC;IAE3C,MAAMY,UAAU,CAAC,EAAE,OAAOd,oBAAoBR,UAAU,WAAWQ,mBAAmBR,KAAK,GAAGA,MAAM,CAAC,EAAEU,YAAY,CAAC;IAEpH,MAAMa,kBAAyC;QAC7C,GAAI1B,oBAAoB,CAAC,CAAC;QAC1B,GAAIM,uBAAuB,YACvB;YACEqB,QAAQ;gBACN;oBACEC,KAAKH;oBACLI,QAAQ;oBACRX,KAAK,CAAC,OAAO,EAAEnB,GAAG+B,SAAS,CACzB;wBACE7B,aAAaU,oBAAoBV,eAAeD,iBAAiBC,WAAW;wBAC5EE,OAAOsB;oBACT,GACA;wBACEM,gBAAgB;oBAClB,GACA,CAAC;oBACHC,OAAO;gBACT;aACD;QACH,IACA,CAAC,CAAC;QACN,GAAI1B,uBAAuB,WACvB;YACEqB,QAAQ;gBACN;oBACEC,KAAKH;oBACLI,QAAQ;oBACRX,KAAK,OAAOpB,kBAAkB,WAAWA,eAAeqB,MAAMrB;oBAC9DkC,OAAO;gBACT;aACD;QACH,IACA,CAAC,CAAC;QACN7B,OAAOsB;QACP,GAAId,sBAAsB,CAAC,CAAC;IAC9B;IAEA,OAAOsB,QAAQC,OAAO,CAAC;QACrBjC;QACAM;QACAE;QACA0B,cAAc,IAAIC,IAChBxB,aACEyB,QAAQC,GAAG,CAACC,yBAAyB,IACrC,CAAC,iBAAiB,EAAEF,QAAQC,GAAG,CAACE,IAAI,IAAI,KAAK,CAAC;QAElD9B,WAAWgB;QACXvB,OAAOqB;IACT;AACF,EAAC"}