{"version":3,"sources":["../../src/utilities/getPayloadHMR.ts"],"sourcesContent":["import type { InitOptions, Payload, SanitizedConfig } from 'payload'\n\nimport { BasePayload } from 'payload'\nimport WebSocket from 'ws'\n\nlet cached: {\n  payload: Payload | null\n  promise: Promise<Payload> | null\n  reload: Promise<void> | boolean\n} = global._payload\n\nif (!cached) {\n  cached = global._payload = { payload: null, promise: null, reload: false }\n}\n\nexport const reload = async (config: SanitizedConfig, payload: Payload): Promise<void> => {\n  if (typeof payload.db.destroy === 'function') {\n    await payload.db.destroy()\n  }\n\n  payload.config = config\n\n  payload.collections = config.collections.reduce((collections, collection) => {\n    collections[collection.slug] = {\n      config: collection,\n      customIDType: payload.collections[collection.slug]?.customIDType,\n    }\n    return collections\n  }, {})\n\n  payload.globals = {\n    config: config.globals,\n  }\n\n  // TODO: support HMR for other props in the future (see payload/src/index init()) hat may change on Payload singleton\n\n  // Generate types\n  if (config.typescript.autoGenerate !== false) {\n    // We cannot run it directly here, as generate-types imports json-schema-to-typescript, which breaks on turbopack.\n    // see: https://github.com/vercel/next.js/issues/66723\n    void payload.bin({\n      args: ['generate:types'],\n      log: false,\n    })\n  }\n\n  await payload.db.init()\n  if (payload.db.connect) {\n    await payload.db.connect({ hotReload: true })\n  }\n}\n\nexport const getPayloadHMR = async (options: InitOptions): Promise<Payload> => {\n  if (!options?.config) {\n    throw new Error('Error: the payload config is required for getPayloadHMR to work.')\n  }\n\n  if (cached.payload) {\n    if (cached.reload === true) {\n      let resolve: () => void\n\n      // getPayloadHMR is called multiple times, in parallel. However, we only want to run `await reload` once. By immediately setting cached.reload to a promise,\n      // we can ensure that all subsequent calls will wait for the first reload to finish. So if we set it here, the 2nd call of getPayloadHMR\n      // will reach `if (cached.reload instanceof Promise) {` which then waits for the first reload to finish.\n      cached.reload = new Promise((res) => (resolve = res))\n      const config = await options.config\n      await reload(config, cached.payload)\n\n      resolve()\n    }\n\n    if (cached.reload instanceof Promise) {\n      await cached.reload\n    }\n\n    return cached.payload\n  }\n\n  if (!cached.promise) {\n    // no need to await options.config here, as it's already awaited in the BasePayload.init\n    cached.promise = new BasePayload().init(options)\n  }\n\n  try {\n    cached.payload = await cached.promise\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      process.env.DISABLE_PAYLOAD_HMR !== 'true'\n    ) {\n      try {\n        const port = process.env.PORT || '3000'\n        const ws = new WebSocket(\n          `ws://localhost:${port}${process.env.NEXT_BASE_PATH ?? ''}/_next/webpack-hmr`,\n        )\n\n        ws.onmessage = (event) => {\n          if (typeof event.data === 'string') {\n            const data = JSON.parse(event.data)\n\n            if ('action' in data && data.action === 'serverComponentChanges') {\n              cached.reload = true\n            }\n          }\n        }\n      } catch (_) {\n        // swallow e\n      }\n    }\n  } catch (e) {\n    cached.promise = null\n    throw e\n  }\n\n  return cached.payload\n}\n"],"names":["BasePayload","WebSocket","cached","global","_payload","payload","promise","reload","config","db","destroy","collections","reduce","collection","slug","customIDType","globals","typescript","autoGenerate","bin","args","log","init","connect","hotReload","getPayloadHMR","options","Error","resolve","Promise","res","process","env","NODE_ENV","DISABLE_PAYLOAD_HMR","port","PORT","ws","NEXT_BASE_PATH","onmessage","event","data","JSON","parse","action","_","e"],"mappings":"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"}