{"version":3,"sources":["../../src/utilities/addDataAndFileToRequest.ts"],"sourcesContent":["import type { PayloadRequest } from 'payload'\n\nimport { APIError } from 'payload'\n\nimport type { FetchAPIFileUploadOptions } from '../fetchAPI-multipart/index.js'\n\nimport { fetchAPIFileUpload } from '../fetchAPI-multipart/index.js'\n\ntype AddDataAndFileToRequest = (req: PayloadRequest) => Promise<void>\n\n/**\n * Mutates the Request, appending 'data' and 'file' if found\n */\nexport const addDataAndFileToRequest: AddDataAndFileToRequest = async (req) => {\n  const { body, headers, method, payload } = req\n\n  if (method && ['PATCH', 'POST', 'PUT'].includes(method.toUpperCase()) && body) {\n    const [contentType] = (headers.get('Content-Type') || '').split(';')\n    const bodyByteSize = parseInt(req.headers.get('Content-Length') || '0', 10)\n\n    if (contentType === 'application/json') {\n      let data = {}\n      try {\n        data = await req.json()\n      } catch (error) {\n        req.payload.logger.error(error)\n      } finally {\n        req.data = data\n        req.json = () => Promise.resolve(data)\n      }\n    } else if (bodyByteSize && contentType.includes('multipart/')) {\n      const { error, fields, files } = await fetchAPIFileUpload({\n        options: payload.config.upload as FetchAPIFileUploadOptions,\n        request: req as Request,\n      })\n\n      if (error) {\n        throw new APIError(error.message)\n      }\n\n      if (files?.file) {\n        req.file = files.file\n      }\n\n      if (fields?._payload && typeof fields._payload === 'string') {\n        req.data = JSON.parse(fields._payload)\n      }\n    }\n  }\n}\n"],"names":["APIError","fetchAPIFileUpload","addDataAndFileToRequest","req","body","headers","method","payload","includes","toUpperCase","contentType","get","split","bodyByteSize","parseInt","data","json","error","logger","Promise","resolve","fields","files","options","config","upload","request","message","file","_payload","JSON","parse"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,UAAS;AAIlC,SAASC,kBAAkB,QAAQ,iCAAgC;AAInE;;CAEC,GACD,OAAO,MAAMC,0BAAmD,OAAOC;IACrE,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAE,GAAGJ;IAE3C,IAAIG,UAAU;QAAC;QAAS;QAAQ;KAAM,CAACE,QAAQ,CAACF,OAAOG,WAAW,OAAOL,MAAM;QAC7E,MAAM,CAACM,YAAY,GAAG,AAACL,CAAAA,QAAQM,GAAG,CAAC,mBAAmB,EAAC,EAAGC,KAAK,CAAC;QAChE,MAAMC,eAAeC,SAASX,IAAIE,OAAO,CAACM,GAAG,CAAC,qBAAqB,KAAK;QAExE,IAAID,gBAAgB,oBAAoB;YACtC,IAAIK,OAAO,CAAC;YACZ,IAAI;gBACFA,OAAO,MAAMZ,IAAIa,IAAI;YACvB,EAAE,OAAOC,OAAO;gBACdd,IAAII,OAAO,CAACW,MAAM,CAACD,KAAK,CAACA;YAC3B,SAAU;gBACRd,IAAIY,IAAI,GAAGA;gBACXZ,IAAIa,IAAI,GAAG,IAAMG,QAAQC,OAAO,CAACL;YACnC;QACF,OAAO,IAAIF,gBAAgBH,YAAYF,QAAQ,CAAC,eAAe;YAC7D,MAAM,EAAES,KAAK,EAAEI,MAAM,EAAEC,KAAK,EAAE,GAAG,MAAMrB,mBAAmB;gBACxDsB,SAAShB,QAAQiB,MAAM,CAACC,MAAM;gBAC9BC,SAASvB;YACX;YAEA,IAAIc,OAAO;gBACT,MAAM,IAAIjB,SAASiB,MAAMU,OAAO;YAClC;YAEA,IAAIL,OAAOM,MAAM;gBACfzB,IAAIyB,IAAI,GAAGN,MAAMM,IAAI;YACvB;YAEA,IAAIP,QAAQQ,YAAY,OAAOR,OAAOQ,QAAQ,KAAK,UAAU;gBAC3D1B,IAAIY,IAAI,GAAGe,KAAKC,KAAK,CAACV,OAAOQ,QAAQ;YACvC;QACF;IACF;AACF,EAAC"}