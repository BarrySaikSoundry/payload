{"version":3,"sources":["../../src/utilities/getRequestLocales.ts"],"sourcesContent":["import type { Payload } from 'payload'\n\ntype GetRequestLocalesArgs = {\n  data?: Record<string, any>\n  localization: Exclude<Payload['config']['localization'], false>\n  searchParams?: URLSearchParams\n}\nexport function getRequestLocales({ data, localization, searchParams }: GetRequestLocalesArgs): {\n  fallbackLocale: string\n  locale: string\n} {\n  let locale = searchParams.get('locale')\n  let fallbackLocale = searchParams.get('fallback-locale')\n\n  if (data) {\n    if (data?.locale) {\n      locale = data.locale\n    }\n    if (data?.['fallback-locale']) {\n      fallbackLocale = data['fallback-locale']\n    }\n  }\n\n  if (fallbackLocale === 'none') {\n    fallbackLocale = 'null'\n  } else if (!localization.localeCodes.includes(fallbackLocale)) {\n    fallbackLocale = localization.defaultLocale\n  }\n\n  if (locale === '*') {\n    locale = 'all'\n  } else if (!localization.localeCodes.includes(locale)) {\n    locale = localization.defaultLocale\n  }\n\n  return {\n    fallbackLocale,\n    locale,\n  }\n}\n"],"names":["getRequestLocales","data","localization","searchParams","locale","get","fallbackLocale","localeCodes","includes","defaultLocale"],"mappings":"AAOA,OAAO,SAASA,kBAAkB,EAAEC,IAAI,EAAEC,YAAY,EAAEC,YAAY,EAAyB;IAI3F,IAAIC,SAASD,aAAaE,GAAG,CAAC;IAC9B,IAAIC,iBAAiBH,aAAaE,GAAG,CAAC;IAEtC,IAAIJ,MAAM;QACR,IAAIA,MAAMG,QAAQ;YAChBA,SAASH,KAAKG,MAAM;QACtB;QACA,IAAIH,MAAM,CAAC,kBAAkB,EAAE;YAC7BK,iBAAiBL,IAAI,CAAC,kBAAkB;QAC1C;IACF;IAEA,IAAIK,mBAAmB,QAAQ;QAC7BA,iBAAiB;IACnB,OAAO,IAAI,CAACJ,aAAaK,WAAW,CAACC,QAAQ,CAACF,iBAAiB;QAC7DA,iBAAiBJ,aAAaO,aAAa;IAC7C;IAEA,IAAIL,WAAW,KAAK;QAClBA,SAAS;IACX,OAAO,IAAI,CAACF,aAAaK,WAAW,CAACC,QAAQ,CAACJ,SAAS;QACrDA,SAASF,aAAaO,aAAa;IACrC;IAEA,OAAO;QACLH;QACAF;IACF;AACF"}