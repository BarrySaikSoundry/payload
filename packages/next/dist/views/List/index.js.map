{"version":3,"sources":["../../../src/views/List/index.tsx"],"sourcesContent":["import type { AdminViewProps, Where } from 'payload'\n\nimport {\n  HydrateClientUser,\n  ListInfoProvider,\n  ListQueryProvider,\n  TableColumnsProvider,\n} from '@payloadcms/ui'\nimport { RenderCustomComponent } from '@payloadcms/ui/shared'\nimport { notFound } from 'next/navigation.js'\nimport { createClientCollectionConfig, mergeListSearchAndWhere } from 'payload'\nimport { isNumber, isReactComponentOrFunction } from 'payload/shared'\nimport React, { Fragment } from 'react'\n\nimport type { DefaultListViewProps, ListPreferences } from './Default/types.js'\n\nimport { DefaultListView } from './Default/index.js'\n\nexport { generateListMetadata } from './meta.js'\n\nexport const ListView: React.FC<AdminViewProps> = async ({\n  initPageResult,\n  params,\n  searchParams,\n}) => {\n  const {\n    collectionConfig,\n    locale: fullLocale,\n    permissions,\n    req,\n    req: {\n      i18n,\n      locale,\n      payload,\n      payload: { config },\n      query,\n      user,\n    },\n    visibleEntities,\n  } = initPageResult\n\n  const collectionSlug = collectionConfig?.slug\n\n  if (!permissions?.collections?.[collectionSlug]?.read?.permission) {\n    notFound()\n  }\n\n  let listPreferences: ListPreferences\n  const preferenceKey = `${collectionSlug}-list`\n\n  try {\n    listPreferences = (await payload\n      .find({\n        collection: 'payload-preferences',\n        depth: 0,\n        limit: 1,\n        req,\n        user,\n        where: {\n          key: {\n            equals: preferenceKey,\n          },\n        },\n      })\n      ?.then((res) => res?.docs?.[0]?.value)) as ListPreferences\n  } catch (error) {} // eslint-disable-line no-empty\n\n  const {\n    routes: { admin },\n  } = config\n\n  if (collectionConfig) {\n    const {\n      admin: { components: { views: { List: CustomList } = {} } = {} },\n    } = collectionConfig\n\n    if (!visibleEntities.collections.includes(collectionSlug)) {\n      return notFound()\n    }\n\n    let CustomListView = null\n\n    if (CustomList && typeof CustomList === 'function') {\n      CustomListView = CustomList\n    } else if (typeof CustomList === 'object' && isReactComponentOrFunction(CustomList.Component)) {\n      CustomListView = CustomList.Component\n    }\n\n    const page = isNumber(query?.page) ? Number(query.page) : 0\n    const whereQuery = mergeListSearchAndWhere({\n      collectionConfig,\n      query: {\n        search: typeof query?.search === 'string' ? query.search : undefined,\n        where: (query?.where as Where) || undefined,\n      },\n    })\n    const limit = isNumber(query?.limit)\n      ? Number(query.limit)\n      : listPreferences?.limit || collectionConfig.admin.pagination.defaultLimit\n    const sort =\n      query?.sort && typeof query.sort === 'string'\n        ? query.sort\n        : listPreferences?.sort || collectionConfig.defaultSort || undefined\n\n    const data = await payload.find({\n      collection: collectionSlug,\n      depth: 0,\n      draft: true,\n      fallbackLocale: null,\n      limit,\n      locale,\n      overrideAccess: false,\n      page,\n      req,\n      sort,\n      user,\n      where: whereQuery || {},\n    })\n\n    const viewComponentProps: DefaultListViewProps = {\n      collectionSlug,\n      listSearchableFields: collectionConfig.admin.listSearchableFields,\n    }\n\n    return (\n      <Fragment>\n        <HydrateClientUser permissions={permissions} user={user} />\n        <ListInfoProvider\n          collectionConfig={createClientCollectionConfig({\n            collection: collectionConfig,\n            t: initPageResult.req.i18n.t,\n          })}\n          collectionSlug={collectionSlug}\n          hasCreatePermission={permissions?.collections?.[collectionSlug]?.create?.permission}\n          newDocumentURL={`${admin}/collections/${collectionSlug}/create`}\n        >\n          <ListQueryProvider\n            data={data}\n            defaultLimit={limit || collectionConfig?.admin?.pagination?.defaultLimit}\n            defaultSort={sort}\n            modifySearchParams\n            preferenceKey={preferenceKey}\n          >\n            <TableColumnsProvider\n              collectionSlug={collectionSlug}\n              enableRowSelections\n              listPreferences={listPreferences}\n              preferenceKey={preferenceKey}\n            >\n              <RenderCustomComponent\n                CustomComponent={CustomListView}\n                DefaultComponent={DefaultListView}\n                componentProps={viewComponentProps}\n                serverOnlyProps={{\n                  collectionConfig,\n                  data,\n                  hasCreatePermission:\n                    permissions?.collections?.[collectionSlug]?.create?.permission,\n                  i18n,\n                  limit,\n                  listPreferences,\n                  locale: fullLocale,\n                  newDocumentURL: `${admin}/collections/${collectionSlug}/create`,\n                  params,\n                  payload,\n                  permissions,\n                  searchParams,\n                  user,\n                }}\n              />\n            </TableColumnsProvider>\n          </ListQueryProvider>\n        </ListInfoProvider>\n      </Fragment>\n    )\n  }\n\n  return notFound()\n}\n"],"names":["HydrateClientUser","ListInfoProvider","ListQueryProvider","TableColumnsProvider","RenderCustomComponent","notFound","createClientCollectionConfig","mergeListSearchAndWhere","isNumber","isReactComponentOrFunction","React","Fragment","DefaultListView","generateListMetadata","ListView","initPageResult","params","searchParams","collectionConfig","locale","fullLocale","permissions","req","i18n","payload","config","query","user","visibleEntities","collectionSlug","slug","collections","read","permission","listPreferences","preferenceKey","find","collection","depth","limit","where","key","equals","then","res","docs","value","error","routes","admin","components","views","List","CustomList","includes","CustomListView","Component","page","Number","whereQuery","search","undefined","pagination","defaultLimit","sort","defaultSort","data","draft","fallbackLocale","overrideAccess","viewComponentProps","listSearchableFields","t","hasCreatePermission","create","newDocumentURL","modifySearchParams","enableRowSelections","CustomComponent","DefaultComponent","componentProps","serverOnlyProps"],"mappings":"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"}