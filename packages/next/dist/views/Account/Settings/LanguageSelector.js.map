{"version":3,"sources":["../../../../src/views/Account/Settings/LanguageSelector.tsx"],"sourcesContent":["'use client'\nimport type { AcceptedLanguages } from '@payloadcms/translations'\nimport type { ReactSelectOption } from '@payloadcms/ui'\nimport type { LanguageOptions } from 'payload'\n\nimport { ReactSelect, useTranslation } from '@payloadcms/ui'\nimport React from 'react'\n\nexport const LanguageSelector: React.FC<{\n  languageOptions: LanguageOptions\n}> = (props) => {\n  const { languageOptions } = props\n\n  const { i18n, switchLanguage } = useTranslation()\n\n  return (\n    <ReactSelect\n      inputId=\"language-select\"\n      isClearable={false}\n      onChange={async (option: ReactSelectOption<AcceptedLanguages>) => {\n        await switchLanguage(option.value)\n      }}\n      options={languageOptions}\n      value={languageOptions.find((language) => language.value === i18n.language)}\n    />\n  )\n}\n"],"names":["ReactSelect","useTranslation","React","LanguageSelector","props","languageOptions","i18n","switchLanguage","inputId","isClearable","onChange","option","value","options","find","language"],"mappings":"AAAA;;AAKA,SAASA,WAAW,EAAEC,cAAc,QAAQ,iBAAgB;AAC5D,OAAOC,WAAW,QAAO;AAEzB,OAAO,MAAMC,mBAER,CAACC;IACJ,MAAM,EAAEC,eAAe,EAAE,GAAGD;IAE5B,MAAM,EAAEE,IAAI,EAAEC,cAAc,EAAE,GAAGN;IAEjC,qBACE,KAACD;QACCQ,SAAQ;QACRC,aAAa;QACbC,UAAU,OAAOC;YACf,MAAMJ,eAAeI,OAAOC,KAAK;QACnC;QACAC,SAASR;QACTO,OAAOP,gBAAgBS,IAAI,CAAC,CAACC,WAAaA,SAASH,KAAK,KAAKN,KAAKS,QAAQ;;AAGhF,EAAC"}