{"version":3,"sources":["../../../src/views/NotFound/index.tsx"],"sourcesContent":["import type { I18n } from '@payloadcms/translations'\nimport type { Metadata } from 'next'\nimport type { AdminViewComponent, SanitizedConfig } from 'payload'\n\nimport { HydrateClientUser } from '@payloadcms/ui'\nimport React, { Fragment } from 'react'\n\nimport { DefaultTemplate } from '../../templates/Default/index.js'\nimport { getNextRequestI18n } from '../../utilities/getNextRequestI18n.js'\nimport { initPage } from '../../utilities/initPage/index.js'\nimport { NotFoundClient } from './index.client.js'\n\nexport const generatePageMetadata = async ({\n  config: configPromise,\n}: {\n  config: Promise<SanitizedConfig> | SanitizedConfig\n  params?: { [key: string]: string | string[] }\n}): Promise<Metadata> => {\n  const config = await configPromise\n\n  const i18n = await getNextRequestI18n({\n    config,\n  })\n\n  return {\n    title: i18n.t('general:notFound'),\n  }\n}\n\nexport type GenerateViewMetadata = (args: {\n  config: SanitizedConfig\n  i18n: I18n\n  params?: { [key: string]: string | string[] }\n}) => Promise<Metadata>\n\nexport const NotFoundPage = async ({\n  config: configPromise,\n  params,\n  searchParams,\n}: {\n  config: Promise<SanitizedConfig>\n  params: {\n    segments: string[]\n  }\n  searchParams: {\n    [key: string]: string | string[]\n  }\n}) => {\n  const config = await configPromise\n  const { routes: { admin: adminRoute } = {} } = config\n\n  const initPageResult = await initPage({\n    config,\n    redirectUnauthenticatedUser: true,\n    route: `${adminRoute}/not-found`,\n    searchParams,\n  })\n\n  return (\n    <Fragment>\n      <HydrateClientUser permissions={initPageResult.permissions} user={initPageResult.req.user} />\n      <DefaultTemplate\n        i18n={initPageResult.req.i18n}\n        locale={initPageResult.locale}\n        params={params}\n        payload={initPageResult.req.payload}\n        permissions={initPageResult.permissions}\n        searchParams={searchParams}\n        user={initPageResult.req.user}\n        visibleEntities={initPageResult.visibleEntities}\n      >\n        <NotFoundClient />\n      </DefaultTemplate>\n    </Fragment>\n  )\n}\n\nexport const NotFoundView: AdminViewComponent = () => {\n  return <NotFoundClient marginTop=\"large\" />\n}\n"],"names":["HydrateClientUser","React","Fragment","DefaultTemplate","getNextRequestI18n","initPage","NotFoundClient","generatePageMetadata","config","configPromise","i18n","title","t","NotFoundPage","params","searchParams","routes","admin","adminRoute","initPageResult","redirectUnauthenticatedUser","route","permissions","user","req","locale","payload","visibleEntities","NotFoundView","marginTop"],"mappings":";AAIA,SAASA,iBAAiB,QAAQ,iBAAgB;AAClD,OAAOC,SAASC,QAAQ,QAAQ,QAAO;AAEvC,SAASC,eAAe,QAAQ,mCAAkC;AAClE,SAASC,kBAAkB,QAAQ,wCAAuC;AAC1E,SAASC,QAAQ,QAAQ,oCAAmC;AAC5D,SAASC,cAAc,QAAQ,oBAAmB;AAElD,OAAO,MAAMC,uBAAuB,OAAO,EACzCC,QAAQC,aAAa,EAItB;IACC,MAAMD,SAAS,MAAMC;IAErB,MAAMC,OAAO,MAAMN,mBAAmB;QACpCI;IACF;IAEA,OAAO;QACLG,OAAOD,KAAKE,CAAC,CAAC;IAChB;AACF,EAAC;AAQD,OAAO,MAAMC,eAAe,OAAO,EACjCL,QAAQC,aAAa,EACrBK,MAAM,EACNC,YAAY,EASb;IACC,MAAMP,SAAS,MAAMC;IACrB,MAAM,EAAEO,QAAQ,EAAEC,OAAOC,UAAU,EAAE,GAAG,CAAC,CAAC,EAAE,GAAGV;IAE/C,MAAMW,iBAAiB,MAAMd,SAAS;QACpCG;QACAY,6BAA6B;QAC7BC,OAAO,CAAC,EAAEH,WAAW,UAAU,CAAC;QAChCH;IACF;IAEA,qBACE,MAACb;;0BACC,KAACF;gBAAkBsB,aAAaH,eAAeG,WAAW;gBAAEC,MAAMJ,eAAeK,GAAG,CAACD,IAAI;;0BACzF,KAACpB;gBACCO,MAAMS,eAAeK,GAAG,CAACd,IAAI;gBAC7Be,QAAQN,eAAeM,MAAM;gBAC7BX,QAAQA;gBACRY,SAASP,eAAeK,GAAG,CAACE,OAAO;gBACnCJ,aAAaH,eAAeG,WAAW;gBACvCP,cAAcA;gBACdQ,MAAMJ,eAAeK,GAAG,CAACD,IAAI;gBAC7BI,iBAAiBR,eAAeQ,eAAe;0BAE/C,cAAA,KAACrB;;;;AAIT,EAAC;AAED,OAAO,MAAMsB,eAAmC;IAC9C,qBAAO,KAACtB;QAAeuB,WAAU;;AACnC,EAAC"}