{"version":3,"sources":["../../../../src/views/Login/LoginForm/index.tsx"],"sourcesContent":["'use client'\n\nimport LinkImport from 'next/link.js'\nimport React from 'react'\n\nconst baseClass = 'login__form'\nconst Link = (LinkImport.default || LinkImport) as unknown as typeof LinkImport.default\n\nimport type { FormState, PayloadRequest } from 'payload'\n\nimport {\n  EmailField,\n  Form,\n  FormSubmit,\n  PasswordField,\n  TextField,\n  useConfig,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { email, password, text } from 'payload/shared'\n\nimport './index.scss'\n\nexport const LoginForm: React.FC<{\n  searchParams: { [key: string]: string | string[] | undefined }\n}> = ({ searchParams }) => {\n  const config = useConfig()\n\n  const {\n    admin: {\n      autoLogin,\n      routes: { forgot: forgotRoute },\n      user: userSlug,\n    },\n    routes: { admin, api },\n  } = config\n\n  const collectionConfig = config.collections?.find((collection) => collection?.slug === userSlug)\n  const loginWithUsername = collectionConfig?.auth?.loginWithUsername\n\n  const { t } = useTranslation()\n\n  const prefillForm = autoLogin && autoLogin.prefillOnly\n\n  const initialState: FormState = {\n    password: {\n      initialValue: prefillForm ? autoLogin.password : undefined,\n      valid: true,\n      value: prefillForm ? autoLogin.password : undefined,\n    },\n  }\n\n  if (loginWithUsername) {\n    initialState.username = {\n      initialValue: prefillForm ? autoLogin.username : undefined,\n      valid: true,\n      value: prefillForm ? autoLogin.username : undefined,\n    }\n  } else {\n    initialState.email = {\n      initialValue: prefillForm ? autoLogin.email : undefined,\n      valid: true,\n      value: prefillForm ? autoLogin.email : undefined,\n    }\n  }\n\n  return (\n    <Form\n      action={`${api}/${userSlug}/login`}\n      className={baseClass}\n      disableSuccessStatus\n      initialState={initialState}\n      method=\"POST\"\n      redirect={typeof searchParams?.redirect === 'string' ? searchParams.redirect : admin}\n      waitForAutocomplete\n    >\n      <div className={`${baseClass}__inputWrap`}>\n        {loginWithUsername ? (\n          <TextField\n            label={t('authentication:username')}\n            name=\"username\"\n            required\n            validate={(value) =>\n              text(value, {\n                name: 'username',\n                type: 'text',\n                data: {},\n                preferences: { fields: {} },\n                req: {\n                  payload: {\n                    config,\n                  },\n                  t,\n                } as PayloadRequest,\n                required: true,\n                siblingData: {},\n              })\n            }\n          />\n        ) : (\n          <EmailField\n            autoComplete=\"email\"\n            label={t('general:email')}\n            name=\"email\"\n            required\n            validate={(value) =>\n              email(value, {\n                name: 'email',\n                type: 'email',\n                data: {},\n                preferences: { fields: {} },\n                req: { t } as PayloadRequest,\n                required: true,\n                siblingData: {},\n              })\n            }\n          />\n        )}\n        <PasswordField\n          autoComplete=\"off\"\n          label={t('general:password')}\n          name=\"password\"\n          required\n          validate={(value) =>\n            password(value, {\n              name: 'password',\n              type: 'text',\n              data: {},\n              preferences: { fields: {} },\n              req: {\n                payload: {\n                  config,\n                },\n                t,\n              } as PayloadRequest,\n              required: true,\n              siblingData: {},\n            })\n          }\n        />\n      </div>\n      <Link href={`${admin}${forgotRoute}`}>{t('authentication:forgotPasswordQuestion')}</Link>\n      <FormSubmit>{t('authentication:login')}</FormSubmit>\n    </Form>\n  )\n}\n"],"names":["LinkImport","React","baseClass","Link","default","EmailField","Form","FormSubmit","PasswordField","TextField","useConfig","useTranslation","email","password","text","LoginForm","searchParams","config","admin","autoLogin","routes","forgot","forgotRoute","user","userSlug","api","collectionConfig","collections","find","collection","slug","loginWithUsername","auth","t","prefillForm","prefillOnly","initialState","initialValue","undefined","valid","value","username","action","className","disableSuccessStatus","method","redirect","waitForAutocomplete","div","label","name","required","validate","type","data","preferences","fields","req","payload","siblingData","autoComplete","href"],"mappings":"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"}