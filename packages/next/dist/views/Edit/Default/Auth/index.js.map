{"version":3,"sources":["../../../../../src/views/Edit/Default/Auth/index.tsx"],"sourcesContent":["'use client'\n\nimport {\n  Button,\n  CheckboxField,\n  ConfirmPasswordField,\n  EmailField,\n  PasswordField,\n  TextField,\n  useConfig,\n  useDocumentInfo,\n  useFormFields,\n  useFormModified,\n  useTranslation,\n} from '@payloadcms/ui'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { toast } from 'sonner'\n\nimport type { Props } from './types.js'\n\nimport { APIKey } from './APIKey.js'\nimport './index.scss'\n\nconst baseClass = 'auth-fields'\n\nexport const Auth: React.FC<Props> = (props) => {\n  const {\n    className,\n    collectionSlug,\n    disableLocalStrategy,\n    email,\n    loginWithUsername,\n    operation,\n    readOnly,\n    requirePassword,\n    useAPIKey,\n    verify,\n  } = props\n\n  const [changingPassword, setChangingPassword] = useState(requirePassword)\n  const enableAPIKey = useFormFields(([fields]) => (fields && fields?.enableAPIKey) || null)\n  const dispatchFields = useFormFields((reducer) => reducer[1])\n  const modified = useFormModified()\n  const { i18n, t } = useTranslation()\n  const { isInitializing } = useDocumentInfo()\n\n  const {\n    routes: { api },\n    serverURL,\n  } = useConfig()\n\n  const handleChangePassword = useCallback(\n    (state: boolean) => {\n      if (!state) {\n        dispatchFields({ type: 'REMOVE', path: 'password' })\n        dispatchFields({ type: 'REMOVE', path: 'confirm-password' })\n      }\n\n      setChangingPassword(state)\n    },\n    [dispatchFields],\n  )\n\n  const unlock = useCallback(async () => {\n    const url = `${serverURL}${api}/${collectionSlug}/unlock`\n    const response = await fetch(url, {\n      body: JSON.stringify({\n        email,\n      }),\n      credentials: 'include',\n      headers: {\n        'Accept-Language': i18n.language,\n        'Content-Type': 'application/json',\n      },\n      method: 'post',\n    })\n\n    if (response.status === 200) {\n      toast.success(t('authentication:successfullyUnlocked'))\n    } else {\n      toast.error(t('authentication:failedToUnlock'))\n    }\n  }, [i18n, serverURL, api, collectionSlug, email, t])\n\n  useEffect(() => {\n    if (!modified) {\n      setChangingPassword(false)\n    }\n  }, [modified])\n\n  if (disableLocalStrategy && !useAPIKey) {\n    return null\n  }\n\n  const disabled = readOnly || isInitializing\n\n  return (\n    <div className={[baseClass, className].filter(Boolean).join(' ')}>\n      {!disableLocalStrategy && (\n        <React.Fragment>\n          {!loginWithUsername && (\n            <EmailField\n              autoComplete=\"email\"\n              disabled={disabled}\n              label={t('general:email')}\n              name=\"email\"\n              readOnly={readOnly}\n              required\n            />\n          )}\n          {loginWithUsername && (\n            <TextField\n              disabled={disabled}\n              label={t('authentication:username')}\n              name=\"username\"\n              readOnly={readOnly}\n              required\n            />\n          )}\n          {(changingPassword || requirePassword) && (\n            <div className={`${baseClass}__changing-password`}>\n              <PasswordField\n                autoComplete=\"off\"\n                disabled={disabled}\n                label={t('authentication:newPassword')}\n                name=\"password\"\n                required\n              />\n              <ConfirmPasswordField disabled={readOnly} />\n            </div>\n          )}\n          <div className={`${baseClass}__controls`}>\n            {changingPassword && !requirePassword && (\n              <Button\n                buttonStyle=\"secondary\"\n                disabled={disabled}\n                onClick={() => handleChangePassword(false)}\n                size=\"small\"\n              >\n                {t('general:cancel')}\n              </Button>\n            )}\n            {!changingPassword && !requirePassword && (\n              <Button\n                buttonStyle=\"secondary\"\n                disabled={disabled}\n                id=\"change-password\"\n                onClick={() => handleChangePassword(true)}\n                size=\"small\"\n              >\n                {t('authentication:changePassword')}\n              </Button>\n            )}\n            {operation === 'update' && (\n              <Button\n                buttonStyle=\"secondary\"\n                disabled={disabled}\n                onClick={() => unlock()}\n                size=\"small\"\n              >\n                {t('authentication:forceUnlock')}\n              </Button>\n            )}\n          </div>\n        </React.Fragment>\n      )}\n      {useAPIKey && (\n        <div className={`${baseClass}__api-key`}>\n          <CheckboxField\n            disabled={disabled}\n            label={t('authentication:enableAPIKey')}\n            name=\"enableAPIKey\"\n            readOnly={readOnly}\n          />\n          <APIKey enabled={!!enableAPIKey?.value} readOnly={readOnly} />\n        </div>\n      )}\n      {verify && (\n        <CheckboxField\n          disabled={disabled}\n          label={t('authentication:verified')}\n          name=\"_verified\"\n          readOnly={readOnly}\n        />\n      )}\n    </div>\n  )\n}\n"],"names":["Button","CheckboxField","ConfirmPasswordField","EmailField","PasswordField","TextField","useConfig","useDocumentInfo","useFormFields","useFormModified","useTranslation","React","useCallback","useEffect","useState","toast","APIKey","baseClass","Auth","props","className","collectionSlug","disableLocalStrategy","email","loginWithUsername","operation","readOnly","requirePassword","useAPIKey","verify","changingPassword","setChangingPassword","enableAPIKey","fields","dispatchFields","reducer","modified","i18n","t","isInitializing","routes","api","serverURL","handleChangePassword","state","type","path","unlock","url","response","fetch","body","JSON","stringify","credentials","headers","language","method","status","success","error","disabled","div","filter","Boolean","join","Fragment","autoComplete","label","name","required","buttonStyle","onClick","size","id","enabled","value"],"mappings":"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"}