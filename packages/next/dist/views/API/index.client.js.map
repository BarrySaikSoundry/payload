{"version":3,"sources":["../../../src/views/API/index.client.tsx"],"sourcesContent":["'use client'\n\nimport {\n  CheckboxField,\n  CopyToClipboard,\n  Form,\n  Gutter,\n  MinimizeMaximizeIcon,\n  NumberField as NumberInput,\n  SetViewActions,\n  useComponentMap,\n  useConfig,\n  useDocumentInfo,\n  useLocale,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { useSearchParams } from 'next/navigation.js'\nimport * as React from 'react'\nimport { toast } from 'sonner'\n\nimport { SetDocumentStepNav } from '../Edit/Default/SetDocumentStepNav/index.js'\nimport { LocaleSelector } from './LocaleSelector/index.js'\nimport { RenderJSON } from './RenderJSON/index.js'\nimport './index.scss'\n\nconst baseClass = 'query-inspector'\n\nexport const APIViewClient: React.FC = () => {\n  const { id, collectionSlug, globalSlug, initialData } = useDocumentInfo()\n\n  const searchParams = useSearchParams()\n  const { i18n, t } = useTranslation()\n  const { code } = useLocale()\n\n  const { getComponentMap } = useComponentMap()\n\n  const componentMap = getComponentMap({ collectionSlug, globalSlug })\n\n  const {\n    collections,\n    globals,\n    localization,\n    routes: { api: apiRoute },\n    serverURL,\n  } = useConfig()\n\n  const collectionConfig =\n    collectionSlug && collections.find((collection) => collection.slug === collectionSlug)\n\n  const globalConfig = globalSlug && globals.find((global) => global.slug === globalSlug)\n\n  const localeOptions =\n    localization &&\n    localization.locales.map((locale) => ({ label: locale.label, value: locale.code }))\n\n  let draftsEnabled: boolean = false\n  let docEndpoint: string = ''\n\n  if (collectionConfig) {\n    draftsEnabled = Boolean(collectionConfig.versions?.drafts)\n    docEndpoint = `/${collectionSlug}/${id}`\n  }\n\n  if (globalConfig) {\n    draftsEnabled = Boolean(globalConfig.versions?.drafts)\n    docEndpoint = `/globals/${globalSlug}`\n  }\n\n  const [data, setData] = React.useState<any>(initialData)\n  const [draft, setDraft] = React.useState<boolean>(searchParams.get('draft') === 'true')\n  const [locale, setLocale] = React.useState<string>(searchParams?.get('locale') || code)\n  const [depth, setDepth] = React.useState<string>(searchParams.get('depth') || '1')\n  const [authenticated, setAuthenticated] = React.useState<boolean>(true)\n  const [fullscreen, setFullscreen] = React.useState<boolean>(false)\n\n  const params = new URLSearchParams({\n    depth,\n    draft: String(draft),\n    locale,\n  }).toString()\n\n  const fetchURL = `${serverURL}${apiRoute}${docEndpoint}?${params}`\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(fetchURL, {\n          credentials: authenticated ? 'include' : 'omit',\n          headers: {\n            'Accept-Language': i18n.language,\n          },\n          method: 'GET',\n        })\n\n        try {\n          const json = await res.json()\n          setData(json)\n        } catch (error) {\n          toast.error('Error parsing response')\n          console.error(error)\n        }\n      } catch (error) {\n        toast.error('Error making request')\n        console.error(error)\n      }\n    }\n\n    void fetchData()\n  }, [i18n.language, fetchURL, authenticated])\n\n  return (\n    <Gutter\n      className={[baseClass, fullscreen && `${baseClass}--fullscreen`].filter(Boolean).join(' ')}\n      right={false}\n    >\n      <SetDocumentStepNav\n        collectionSlug={collectionSlug}\n        globalLabel={globalConfig?.label}\n        globalSlug={globalSlug}\n        id={id}\n        pluralLabel={collectionConfig ? collectionConfig?.labels?.plural : undefined}\n        useAsTitle={collectionConfig ? collectionConfig?.admin?.useAsTitle : undefined}\n        view=\"API\"\n      />\n      <SetViewActions actions={componentMap?.actionsMap?.Edit?.API} />\n      <div className={`${baseClass}__configuration`}>\n        <div className={`${baseClass}__api-url`}>\n          <span className={`${baseClass}__label`}>\n            API URL <CopyToClipboard value={fetchURL} />\n          </span>\n          <a href={fetchURL} rel=\"noopener noreferrer\" target=\"_blank\">\n            {fetchURL}\n          </a>\n        </div>\n        <Form\n          initialState={{\n            authenticated: {\n              initialValue: authenticated || false,\n              valid: true,\n              value: authenticated || false,\n            },\n            depth: {\n              initialValue: Number(depth || 0),\n              valid: true,\n              value: Number(depth || 0),\n            },\n            draft: {\n              initialValue: draft || false,\n              valid: true,\n              value: draft || false,\n            },\n            locale: {\n              initialValue: locale,\n              valid: true,\n              value: locale,\n            },\n          }}\n        >\n          <div className={`${baseClass}__form-fields`}>\n            <div className={`${baseClass}__filter-query-checkboxes`}>\n              {draftsEnabled && (\n                <CheckboxField\n                  label={t('version:draft')}\n                  name=\"draft\"\n                  onChange={() => setDraft(!draft)}\n                  path=\"draft\"\n                />\n              )}\n              <CheckboxField\n                label={t('authentication:authenticated')}\n                name=\"authenticated\"\n                onChange={() => setAuthenticated(!authenticated)}\n                path=\"authenticated\"\n              />\n            </div>\n            {localeOptions && <LocaleSelector localeOptions={localeOptions} onChange={setLocale} />}\n            <NumberInput\n              label={t('general:depth')}\n              max={10}\n              min={0}\n              name=\"depth\"\n              onChange={(value) => setDepth(value?.toString())}\n              path=\"depth\"\n              step={1}\n            />\n          </div>\n        </Form>\n      </div>\n      <div className={`${baseClass}__results-wrapper`}>\n        <div className={`${baseClass}__toggle-fullscreen-button-container`}>\n          <button\n            aria-label=\"toggle fullscreen\"\n            className={`${baseClass}__toggle-fullscreen-button`}\n            onClick={() => setFullscreen(!fullscreen)}\n            type=\"button\"\n          >\n            <MinimizeMaximizeIcon isMinimized={!fullscreen} />\n          </button>\n        </div>\n        <div className={`${baseClass}__results`}>\n          <RenderJSON object={data} />\n        </div>\n      </div>\n    </Gutter>\n  )\n}\n"],"names":["CheckboxField","CopyToClipboard","Form","Gutter","MinimizeMaximizeIcon","NumberField","NumberInput","SetViewActions","useComponentMap","useConfig","useDocumentInfo","useLocale","useTranslation","useSearchParams","React","toast","SetDocumentStepNav","LocaleSelector","RenderJSON","baseClass","APIViewClient","id","collectionSlug","globalSlug","initialData","searchParams","i18n","t","code","getComponentMap","componentMap","collections","globals","localization","routes","api","apiRoute","serverURL","collectionConfig","find","collection","slug","globalConfig","global","localeOptions","locales","map","locale","label","value","draftsEnabled","docEndpoint","Boolean","versions","drafts","data","setData","useState","draft","setDraft","get","setLocale","depth","setDepth","authenticated","setAuthenticated","fullscreen","setFullscreen","params","URLSearchParams","String","toString","fetchURL","useEffect","fetchData","res","fetch","credentials","headers","language","method","json","error","console","className","filter","join","right","globalLabel","pluralLabel","labels","plural","undefined","useAsTitle","admin","view","actions","actionsMap","Edit","API","div","span","a","href","rel","target","initialState","initialValue","valid","Number","name","onChange","path","max","min","step","button","aria-label","onClick","type","isMinimized","object"],"mappings":"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"}