{"version":3,"sources":["../../../../src/views/API/RenderJSON/index.tsx"],"sourcesContent":["'use client'\nimport { ChevronIcon } from '@payloadcms/ui'\nimport * as React from 'react'\n\nimport './index.scss'\n\nconst chars = {\n  leftCurlyBracket: '\\u007B',\n  leftSquareBracket: '\\u005B',\n  rightCurlyBracket: '\\u007D',\n  rightSquareBracket: '\\u005D',\n}\n\nconst baseClass = 'query-inspector'\n\nconst Bracket = ({\n  type,\n  comma = false,\n  position,\n}: {\n  comma?: boolean\n  position: 'end' | 'start'\n  type: 'array' | 'object'\n}) => {\n  const rightBracket = type === 'object' ? chars.rightCurlyBracket : chars.rightSquareBracket\n  const leftBracket = type === 'object' ? chars.leftCurlyBracket : chars.leftSquareBracket\n  const bracketToRender = position === 'end' ? rightBracket : leftBracket\n\n  return (\n    <span className={`${baseClass}__bracket ${baseClass}__bracket--position-${position}`}>\n      {bracketToRender}\n      {position === 'end' && comma ? ',' : null}\n    </span>\n  )\n}\n\ntype Args = {\n  isEmpty?: boolean\n  object: Record<string, any> | any[]\n  objectKey?: string\n  parentType?: 'array' | 'object'\n  trailingComma?: boolean\n}\n\nexport const RenderJSON = ({\n  isEmpty = false,\n  object,\n  objectKey,\n  parentType = 'object',\n  trailingComma = false,\n}: Args) => {\n  const objectKeys = object ? Object.keys(object) : []\n  const objectLength = objectKeys.length\n  const [isOpen, setIsOpen] = React.useState<boolean>(true)\n  const isNestedAndEmpty = isEmpty && (parentType === 'object' || parentType === 'array')\n  return (\n    <li className={isNestedAndEmpty ? `${baseClass}__row-line--nested` : ''}>\n      <button\n        aria-label=\"toggle\"\n        className={`${baseClass}__list-toggle ${isEmpty ? `${baseClass}__list-toggle--empty` : ''}`}\n        onClick={() => setIsOpen(!isOpen)}\n        type=\"button\"\n      >\n        {isEmpty ? null : (\n          <ChevronIcon\n            className={`${baseClass}__toggle-row-icon ${baseClass}__toggle-row-icon--${\n              isOpen ? 'open' : 'closed'\n            }`}\n          />\n        )}\n        <span>\n          {objectKey && `\"${objectKey}\": `}\n          <Bracket position=\"start\" type={parentType} />\n          {isEmpty ? <Bracket comma={trailingComma} position=\"end\" type={parentType} /> : null}\n        </span>\n      </button>\n\n      <ul className={`${baseClass}__json-children`}>\n        {isOpen &&\n          objectKeys.map((key, keyIndex) => {\n            let value = object[key]\n            let type = 'string'\n            const isLastKey = keyIndex === objectLength - 1\n\n            if (value === null) {\n              type = 'null'\n            } else if (value instanceof Date) {\n              type = 'date'\n              value = value.toISOString()\n            } else if (Array.isArray(value)) {\n              type = 'array'\n            } else if (typeof value === 'object') {\n              type = 'object'\n            } else if (typeof value === 'number') {\n              type = 'number'\n            } else if (typeof value === 'boolean') {\n              type = 'boolean'\n            } else {\n              type = 'string'\n            }\n\n            if (type === 'object' || type === 'array') {\n              return (\n                <RenderJSON\n                  isEmpty={value.length === 0 || Object.keys(value).length === 0}\n                  key={`${key}-${keyIndex}`}\n                  object={value}\n                  objectKey={parentType === 'object' ? key : undefined}\n                  parentType={type}\n                  trailingComma={!isLastKey}\n                />\n              )\n            }\n\n            if (\n              type === 'date' ||\n              type === 'string' ||\n              type === 'null' ||\n              type === 'number' ||\n              type === 'boolean'\n            ) {\n              const parentHasKey = Boolean(parentType === 'object' && key)\n\n              const rowClasses = [\n                `${baseClass}__row-line`,\n                `${baseClass}__value-type--${type}`,\n                `${baseClass}__row-line--${objectKey ? 'nested' : 'top'}`,\n              ]\n                .filter(Boolean)\n                .join(' ')\n\n              return (\n                <li className={rowClasses} key={`${key}-${keyIndex}`}>\n                  {parentHasKey ? <span>{`\"${key}\": `}</span> : null}\n\n                  <span className={`${baseClass}__value`}>{JSON.stringify(value)}</span>\n                  {isLastKey ? '' : ','}\n                </li>\n              )\n            }\n          })}\n      </ul>\n\n      {!isEmpty && (\n        <span>\n          <Bracket comma={trailingComma} position=\"end\" type={parentType} />\n        </span>\n      )}\n    </li>\n  )\n}\n"],"names":["ChevronIcon","React","chars","leftCurlyBracket","leftSquareBracket","rightCurlyBracket","rightSquareBracket","baseClass","Bracket","type","comma","position","rightBracket","leftBracket","bracketToRender","span","className","RenderJSON","isEmpty","object","objectKey","parentType","trailingComma","objectKeys","Object","keys","objectLength","length","isOpen","setIsOpen","useState","isNestedAndEmpty","li","button","aria-label","onClick","ul","map","key","keyIndex","value","isLastKey","Date","toISOString","Array","isArray","undefined","parentHasKey","Boolean","rowClasses","filter","join","JSON","stringify"],"mappings":"AAAA;;AACA,SAASA,WAAW,QAAQ,iBAAgB;AAC5C,YAAYC,WAAW,QAAO;AAI9B,MAAMC,QAAQ;IACZC,kBAAkB;IAClBC,mBAAmB;IACnBC,mBAAmB;IACnBC,oBAAoB;AACtB;AAEA,MAAMC,YAAY;AAElB,MAAMC,UAAU,CAAC,EACfC,IAAI,EACJC,QAAQ,KAAK,EACbC,QAAQ,EAKT;IACC,MAAMC,eAAeH,SAAS,WAAWP,MAAMG,iBAAiB,GAAGH,MAAMI,kBAAkB;IAC3F,MAAMO,cAAcJ,SAAS,WAAWP,MAAMC,gBAAgB,GAAGD,MAAME,iBAAiB;IACxF,MAAMU,kBAAkBH,aAAa,QAAQC,eAAeC;IAE5D,qBACE,MAACE;QAAKC,WAAW,CAAC,EAAET,UAAU,UAAU,EAAEA,UAAU,oBAAoB,EAAEI,SAAS,CAAC;;YACjFG;YACAH,aAAa,SAASD,QAAQ,MAAM;;;AAG3C;AAUA,OAAO,MAAMO,aAAa,CAAC,EACzBC,UAAU,KAAK,EACfC,MAAM,EACNC,SAAS,EACTC,aAAa,QAAQ,EACrBC,gBAAgB,KAAK,EAChB;IACL,MAAMC,aAAaJ,SAASK,OAAOC,IAAI,CAACN,UAAU,EAAE;IACpD,MAAMO,eAAeH,WAAWI,MAAM;IACtC,MAAM,CAACC,QAAQC,UAAU,GAAG5B,MAAM6B,QAAQ,CAAU;IACpD,MAAMC,mBAAmBb,WAAYG,CAAAA,eAAe,YAAYA,eAAe,OAAM;IACrF,qBACE,MAACW;QAAGhB,WAAWe,mBAAmB,CAAC,EAAExB,UAAU,kBAAkB,CAAC,GAAG;;0BACnE,MAAC0B;gBACCC,cAAW;gBACXlB,WAAW,CAAC,EAAET,UAAU,cAAc,EAAEW,UAAU,CAAC,EAAEX,UAAU,oBAAoB,CAAC,GAAG,GAAG,CAAC;gBAC3F4B,SAAS,IAAMN,UAAU,CAACD;gBAC1BnB,MAAK;;oBAEJS,UAAU,qBACT,KAAClB;wBACCgB,WAAW,CAAC,EAAET,UAAU,kBAAkB,EAAEA,UAAU,mBAAmB,EACvEqB,SAAS,SAAS,SACnB,CAAC;;kCAGN,MAACb;;4BACEK,aAAa,CAAC,CAAC,EAAEA,UAAU,GAAG,CAAC;0CAChC,KAACZ;gCAAQG,UAAS;gCAAQF,MAAMY;;4BAC/BH,wBAAU,KAACV;gCAAQE,OAAOY;gCAAeX,UAAS;gCAAMF,MAAMY;iCAAiB;;;;;0BAIpF,KAACe;gBAAGpB,WAAW,CAAC,EAAET,UAAU,eAAe,CAAC;0BACzCqB,UACCL,WAAWc,GAAG,CAAC,CAACC,KAAKC;oBACnB,IAAIC,QAAQrB,MAAM,CAACmB,IAAI;oBACvB,IAAI7B,OAAO;oBACX,MAAMgC,YAAYF,aAAab,eAAe;oBAE9C,IAAIc,UAAU,MAAM;wBAClB/B,OAAO;oBACT,OAAO,IAAI+B,iBAAiBE,MAAM;wBAChCjC,OAAO;wBACP+B,QAAQA,MAAMG,WAAW;oBAC3B,OAAO,IAAIC,MAAMC,OAAO,CAACL,QAAQ;wBAC/B/B,OAAO;oBACT,OAAO,IAAI,OAAO+B,UAAU,UAAU;wBACpC/B,OAAO;oBACT,OAAO,IAAI,OAAO+B,UAAU,UAAU;wBACpC/B,OAAO;oBACT,OAAO,IAAI,OAAO+B,UAAU,WAAW;wBACrC/B,OAAO;oBACT,OAAO;wBACLA,OAAO;oBACT;oBAEA,IAAIA,SAAS,YAAYA,SAAS,SAAS;wBACzC,qBACE,KAACQ;4BACCC,SAASsB,MAAMb,MAAM,KAAK,KAAKH,OAAOC,IAAI,CAACe,OAAOb,MAAM,KAAK;4BAE7DR,QAAQqB;4BACRpB,WAAWC,eAAe,WAAWiB,MAAMQ;4BAC3CzB,YAAYZ;4BACZa,eAAe,CAACmB;2BAJX,CAAC,EAAEH,IAAI,CAAC,EAAEC,SAAS,CAAC;oBAO/B;oBAEA,IACE9B,SAAS,UACTA,SAAS,YACTA,SAAS,UACTA,SAAS,YACTA,SAAS,WACT;wBACA,MAAMsC,eAAeC,QAAQ3B,eAAe,YAAYiB;wBAExD,MAAMW,aAAa;4BACjB,CAAC,EAAE1C,UAAU,UAAU,CAAC;4BACxB,CAAC,EAAEA,UAAU,cAAc,EAAEE,KAAK,CAAC;4BACnC,CAAC,EAAEF,UAAU,YAAY,EAAEa,YAAY,WAAW,MAAM,CAAC;yBAC1D,CACE8B,MAAM,CAACF,SACPG,IAAI,CAAC;wBAER,qBACE,MAACnB;4BAAGhB,WAAWiC;;gCACZF,6BAAe,KAAChC;8CAAM,CAAC,CAAC,EAAEuB,IAAI,GAAG,CAAC;qCAAW;8CAE9C,KAACvB;oCAAKC,WAAW,CAAC,EAAET,UAAU,OAAO,CAAC;8CAAG6C,KAAKC,SAAS,CAACb;;gCACvDC,YAAY,KAAK;;2BAJY,CAAC,EAAEH,IAAI,CAAC,EAAEC,SAAS,CAAC;oBAOxD;gBACF;;YAGH,CAACrB,yBACA,KAACH;0BACC,cAAA,KAACP;oBAAQE,OAAOY;oBAAeX,UAAS;oBAAMF,MAAMY;;;;;AAK9D,EAAC"}