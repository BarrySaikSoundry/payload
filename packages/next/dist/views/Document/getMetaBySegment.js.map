{"version":3,"sources":["../../../src/views/Document/getMetaBySegment.tsx"],"sourcesContent":["import type { Metadata } from 'next'\nimport type { SanitizedCollectionConfig, SanitizedGlobalConfig } from 'payload'\n\nimport type { GenerateViewMetadata } from '../Root/index.js'\n\nimport { getNextRequestI18n } from '../../utilities/getNextRequestI18n.js'\nimport { generateMetadata as apiMeta } from '../API/meta.js'\nimport { generateMetadata as editMeta } from '../Edit/meta.js'\nimport { generateMetadata as livePreviewMeta } from '../LivePreview/meta.js'\nimport { generateNotFoundMeta } from '../NotFound/meta.js'\nimport { generateMetadata as versionMeta } from '../Version/meta.js'\nimport { generateMetadata as versionsMeta } from '../Versions/meta.js'\n\nexport type GenerateEditViewMetadata = (\n  args: {\n    collectionConfig?: SanitizedCollectionConfig | null\n    globalConfig?: SanitizedGlobalConfig | null\n  } & Parameters<GenerateViewMetadata>[0],\n) => Promise<Metadata>\n\nexport const getMetaBySegment: GenerateEditViewMetadata = async ({\n  collectionConfig,\n  config,\n  globalConfig,\n  params,\n}) => {\n  const { segments } = params\n\n  let fn: GenerateEditViewMetadata | null = null\n\n  const [segmentOne] = segments\n  const isCollection = segmentOne === 'collections'\n  const isGlobal = segmentOne === 'globals'\n\n  const isEditing =\n    isGlobal || Boolean(isCollection && segments?.length > 2 && segments[2] !== 'create')\n\n  if (isCollection) {\n    // `/:id`\n    if (params.segments.length === 3) {\n      fn = editMeta\n    }\n\n    // `/:id/api`\n    if (params.segments.length === 4 && params.segments[3] === 'api') {\n      fn = apiMeta\n    }\n\n    // `/:id/preview`\n    if (params.segments.length === 4 && params.segments[3] === 'preview') {\n      fn = livePreviewMeta\n    }\n\n    // `/:id/versions`\n    if (params.segments.length === 4 && params.segments[3] === 'versions') {\n      fn = versionsMeta\n    }\n\n    // `/:id/versions/:version`\n    if (params.segments.length === 5 && params.segments[3] === 'versions') {\n      fn = versionMeta\n    }\n  }\n\n  if (isGlobal) {\n    // `/:slug`\n    if (params.segments?.length === 2) {\n      fn = editMeta\n    }\n\n    // `/:slug/api`\n    if (params.segments?.length === 3 && params.segments[2] === 'api') {\n      fn = apiMeta\n    }\n\n    // `/:slug/preview`\n    if (params.segments?.length === 3 && params.segments[2] === 'preview') {\n      fn = livePreviewMeta\n    }\n\n    // `/:slug/versions`\n    if (params.segments?.length === 3 && params.segments[2] === 'versions') {\n      fn = versionsMeta\n    }\n\n    // `/:slug/versions/:version`\n    if (params.segments?.length === 4 && params.segments[2] === 'versions') {\n      fn = versionMeta\n    }\n  }\n\n  const i18n = await getNextRequestI18n({\n    config,\n  })\n\n  if (typeof fn === 'function') {\n    return fn({\n      collectionConfig,\n      config,\n      globalConfig,\n      i18n,\n      isEditing,\n    })\n  }\n\n  return generateNotFoundMeta({ config, i18n })\n}\n"],"names":["getNextRequestI18n","generateMetadata","apiMeta","editMeta","livePreviewMeta","generateNotFoundMeta","versionMeta","versionsMeta","getMetaBySegment","collectionConfig","config","globalConfig","params","segments","fn","segmentOne","isCollection","isGlobal","isEditing","Boolean","length","i18n"],"mappings":"AAKA,SAASA,kBAAkB,QAAQ,wCAAuC;AAC1E,SAASC,oBAAoBC,OAAO,QAAQ,iBAAgB;AAC5D,SAASD,oBAAoBE,QAAQ,QAAQ,kBAAiB;AAC9D,SAASF,oBAAoBG,eAAe,QAAQ,yBAAwB;AAC5E,SAASC,oBAAoB,QAAQ,sBAAqB;AAC1D,SAASJ,oBAAoBK,WAAW,QAAQ,qBAAoB;AACpE,SAASL,oBAAoBM,YAAY,QAAQ,sBAAqB;AAStE,OAAO,MAAMC,mBAA6C,OAAO,EAC/DC,gBAAgB,EAChBC,MAAM,EACNC,YAAY,EACZC,MAAM,EACP;IACC,MAAM,EAAEC,QAAQ,EAAE,GAAGD;IAErB,IAAIE,KAAsC;IAE1C,MAAM,CAACC,WAAW,GAAGF;IACrB,MAAMG,eAAeD,eAAe;IACpC,MAAME,WAAWF,eAAe;IAEhC,MAAMG,YACJD,YAAYE,QAAQH,gBAAgBH,UAAUO,SAAS,KAAKP,QAAQ,CAAC,EAAE,KAAK;IAE9E,IAAIG,cAAc;QAChB,SAAS;QACT,IAAIJ,OAAOC,QAAQ,CAACO,MAAM,KAAK,GAAG;YAChCN,KAAKX;QACP;QAEA,aAAa;QACb,IAAIS,OAAOC,QAAQ,CAACO,MAAM,KAAK,KAAKR,OAAOC,QAAQ,CAAC,EAAE,KAAK,OAAO;YAChEC,KAAKZ;QACP;QAEA,iBAAiB;QACjB,IAAIU,OAAOC,QAAQ,CAACO,MAAM,KAAK,KAAKR,OAAOC,QAAQ,CAAC,EAAE,KAAK,WAAW;YACpEC,KAAKV;QACP;QAEA,kBAAkB;QAClB,IAAIQ,OAAOC,QAAQ,CAACO,MAAM,KAAK,KAAKR,OAAOC,QAAQ,CAAC,EAAE,KAAK,YAAY;YACrEC,KAAKP;QACP;QAEA,2BAA2B;QAC3B,IAAIK,OAAOC,QAAQ,CAACO,MAAM,KAAK,KAAKR,OAAOC,QAAQ,CAAC,EAAE,KAAK,YAAY;YACrEC,KAAKR;QACP;IACF;IAEA,IAAIW,UAAU;QACZ,WAAW;QACX,IAAIL,OAAOC,QAAQ,EAAEO,WAAW,GAAG;YACjCN,KAAKX;QACP;QAEA,eAAe;QACf,IAAIS,OAAOC,QAAQ,EAAEO,WAAW,KAAKR,OAAOC,QAAQ,CAAC,EAAE,KAAK,OAAO;YACjEC,KAAKZ;QACP;QAEA,mBAAmB;QACnB,IAAIU,OAAOC,QAAQ,EAAEO,WAAW,KAAKR,OAAOC,QAAQ,CAAC,EAAE,KAAK,WAAW;YACrEC,KAAKV;QACP;QAEA,oBAAoB;QACpB,IAAIQ,OAAOC,QAAQ,EAAEO,WAAW,KAAKR,OAAOC,QAAQ,CAAC,EAAE,KAAK,YAAY;YACtEC,KAAKP;QACP;QAEA,6BAA6B;QAC7B,IAAIK,OAAOC,QAAQ,EAAEO,WAAW,KAAKR,OAAOC,QAAQ,CAAC,EAAE,KAAK,YAAY;YACtEC,KAAKR;QACP;IACF;IAEA,MAAMe,OAAO,MAAMrB,mBAAmB;QACpCU;IACF;IAEA,IAAI,OAAOI,OAAO,YAAY;QAC5B,OAAOA,GAAG;YACRL;YACAC;YACAC;YACAU;YACAH;QACF;IACF;IAEA,OAAOb,qBAAqB;QAAEK;QAAQW;IAAK;AAC7C,EAAC"}