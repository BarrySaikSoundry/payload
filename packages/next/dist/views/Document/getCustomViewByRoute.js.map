{"version":3,"sources":["../../../src/views/Document/getCustomViewByRoute.tsx"],"sourcesContent":["import type { EditViewComponent, SanitizedCollectionConfig, SanitizedGlobalConfig } from 'payload'\n\nimport { isPathMatchingRoute } from '../Root/isPathMatchingRoute.js'\n\nexport const getCustomViewByRoute = ({\n  baseRoute,\n  currentRoute,\n  views,\n}: {\n  baseRoute: string\n  currentRoute: string\n  views:\n    | SanitizedCollectionConfig['admin']['components']['views']\n    | SanitizedGlobalConfig['admin']['components']['views']\n}): EditViewComponent => {\n  if (typeof views?.Edit === 'object' && typeof views?.Edit !== 'function') {\n    const foundViewConfig = Object.entries(views.Edit).find(([, view]) => {\n      if (typeof view === 'object' && typeof view !== 'function' && 'path' in view) {\n        const viewPath = `${baseRoute}${view.path}`\n\n        return isPathMatchingRoute({\n          currentRoute,\n          exact: true,\n          path: viewPath,\n        })\n      }\n      return false\n    })?.[1]\n\n    if (foundViewConfig && 'Component' in foundViewConfig) {\n      return foundViewConfig.Component\n    }\n  }\n\n  return null\n}\n"],"names":["isPathMatchingRoute","getCustomViewByRoute","baseRoute","currentRoute","views","Edit","foundViewConfig","Object","entries","find","view","viewPath","path","exact","Component"],"mappings":"AAEA,SAASA,mBAAmB,QAAQ,iCAAgC;AAEpE,OAAO,MAAMC,uBAAuB,CAAC,EACnCC,SAAS,EACTC,YAAY,EACZC,KAAK,EAON;IACC,IAAI,OAAOA,OAAOC,SAAS,YAAY,OAAOD,OAAOC,SAAS,YAAY;QACxE,MAAMC,kBAAkBC,OAAOC,OAAO,CAACJ,MAAMC,IAAI,EAAEI,IAAI,CAAC,CAAC,GAAGC,KAAK;YAC/D,IAAI,OAAOA,SAAS,YAAY,OAAOA,SAAS,cAAc,UAAUA,MAAM;gBAC5E,MAAMC,WAAW,CAAC,EAAET,UAAU,EAAEQ,KAAKE,IAAI,CAAC,CAAC;gBAE3C,OAAOZ,oBAAoB;oBACzBG;oBACAU,OAAO;oBACPD,MAAMD;gBACR;YACF;YACA,OAAO;QACT,IAAI,CAAC,EAAE;QAEP,IAAIL,mBAAmB,eAAeA,iBAAiB;YACrD,OAAOA,gBAAgBQ,SAAS;QAClC;IACF;IAEA,OAAO;AACT,EAAC"}