{"version":3,"sources":["../../../src/views/Document/index.tsx"],"sourcesContent":["import type {\n  AdminViewComponent,\n  AdminViewProps,\n  EditViewComponent,\n  ServerSideEditViewProps,\n} from 'payload'\n\nimport {\n  DocumentInfoProvider,\n  EditDepthProvider,\n  FormQueryParamsProvider,\n  HydrateClientUser,\n} from '@payloadcms/ui'\nimport { RenderCustomComponent, isEditing as getIsEditing } from '@payloadcms/ui/shared'\nimport { notFound, redirect } from 'next/navigation.js'\nimport React from 'react'\n\nimport type { GenerateEditViewMetadata } from './getMetaBySegment.js'\n\nimport { DocumentHeader } from '../../elements/DocumentHeader/index.js'\nimport { NotFoundView } from '../NotFound/index.js'\nimport { getDocumentData } from './getDocumentData.js'\nimport { getDocumentPermissions } from './getDocumentPermissions.js'\nimport { getMetaBySegment } from './getMetaBySegment.js'\nimport { getViewsFromConfig } from './getViewsFromConfig.js'\n\nexport const generateMetadata: GenerateEditViewMetadata = async (args) => getMetaBySegment(args)\n\nexport const Document: React.FC<AdminViewProps> = async ({\n  initPageResult,\n  params,\n  searchParams,\n}) => {\n  const {\n    collectionConfig,\n    docID: id,\n    globalConfig,\n    locale,\n    permissions,\n    req,\n    req: {\n      i18n,\n      payload,\n      payload: {\n        config,\n        config: {\n          routes: { admin: adminRoute, api: apiRoute },\n          serverURL,\n        },\n      },\n      user,\n    },\n    visibleEntities,\n  } = initPageResult\n\n  const segments = Array.isArray(params?.segments) ? params.segments : []\n  const collectionSlug = collectionConfig?.slug || undefined\n  const globalSlug = globalConfig?.slug || undefined\n\n  const isEditing = getIsEditing({ id, collectionSlug, globalSlug })\n\n  let ViewOverride: EditViewComponent\n  let CustomView: EditViewComponent\n  let DefaultView: EditViewComponent\n  let ErrorView: AdminViewComponent\n\n  let apiURL: string\n  let action: string\n\n  const { data, formState } = await getDocumentData({\n    id,\n    collectionConfig,\n    globalConfig,\n    locale,\n    req,\n  })\n\n  const { docPermissions, hasPublishPermission, hasSavePermission } = await getDocumentPermissions({\n    id,\n    collectionConfig,\n    data,\n    globalConfig,\n    req,\n  })\n\n  if (collectionConfig) {\n    if (!visibleEntities?.collections?.find((visibleSlug) => visibleSlug === collectionSlug)) {\n      notFound()\n    }\n\n    action = `${serverURL}${apiRoute}/${collectionSlug}${isEditing ? `/${id}` : ''}`\n\n    const params = new URLSearchParams()\n    if (collectionConfig.versions?.drafts) {\n      params.append('draft', 'true')\n    }\n    if (locale?.code) {\n      params.append('locale', locale.code)\n    }\n\n    const apiQueryParams = `?${params.toString()}`\n\n    apiURL = `${serverURL}${apiRoute}/${collectionSlug}/${id}${apiQueryParams}`\n\n    const editConfig = collectionConfig?.admin?.components?.views?.Edit\n    ViewOverride = typeof editConfig === 'function' ? editConfig : null\n\n    if (!ViewOverride) {\n      const collectionViews = getViewsFromConfig({\n        collectionConfig,\n        config,\n        docPermissions,\n        routeSegments: segments,\n      })\n\n      CustomView = collectionViews?.CustomView\n      DefaultView = collectionViews?.DefaultView\n      ErrorView = collectionViews?.ErrorView\n    }\n\n    if (!CustomView && !DefaultView && !ViewOverride && !ErrorView) {\n      ErrorView = NotFoundView\n    }\n  }\n\n  if (globalConfig) {\n    if (!visibleEntities?.globals?.find((visibleSlug) => visibleSlug === globalSlug)) {\n      notFound()\n    }\n\n    action = `${serverURL}${apiRoute}/globals/${globalSlug}`\n\n    const params = new URLSearchParams({\n      locale: locale?.code,\n    })\n    if (globalConfig.versions?.drafts) {\n      params.append('draft', 'true')\n    }\n    if (locale?.code) {\n      params.append('locale', locale.code)\n    }\n\n    const apiQueryParams = `?${params.toString()}`\n\n    apiURL = `${serverURL}${apiRoute}/${globalSlug}${apiQueryParams}`\n\n    const editConfig = globalConfig?.admin?.components?.views?.Edit\n    ViewOverride = typeof editConfig === 'function' ? editConfig : null\n\n    if (!ViewOverride) {\n      const globalViews = getViewsFromConfig({\n        config,\n        docPermissions,\n        globalConfig,\n        routeSegments: segments,\n      })\n\n      CustomView = globalViews?.CustomView\n      DefaultView = globalViews?.DefaultView\n      ErrorView = globalViews?.ErrorView\n\n      if (!CustomView && !DefaultView && !ViewOverride && !ErrorView) {\n        ErrorView = NotFoundView\n      }\n    }\n  }\n\n  /**\n   * Handle case where autoSave is enabled and the document is being created\n   * => create document and redirect\n   */\n  const shouldAutosave =\n    hasSavePermission &&\n    ((collectionConfig?.versions?.drafts && collectionConfig?.versions?.drafts?.autosave) ||\n      (globalConfig?.versions?.drafts && globalConfig?.versions?.drafts?.autosave))\n  const validateDraftData =\n    collectionConfig?.versions?.drafts && collectionConfig?.versions?.drafts?.validate\n\n  if (shouldAutosave && !validateDraftData && !id && collectionSlug) {\n    const doc = await payload.create({\n      collection: collectionSlug,\n      data: {},\n      depth: 0,\n      draft: true,\n      fallbackLocale: null,\n      locale: locale?.code,\n      req,\n      user,\n    })\n\n    if (doc?.id) {\n      const redirectURL = `${serverURL}${adminRoute}/collections/${collectionSlug}/${doc.id}`\n      redirect(redirectURL)\n    } else {\n      notFound()\n    }\n  }\n\n  return (\n    <DocumentInfoProvider\n      action={action}\n      apiURL={apiURL}\n      collectionSlug={collectionConfig?.slug}\n      disableActions={false}\n      docPermissions={docPermissions}\n      globalSlug={globalConfig?.slug}\n      hasPublishPermission={hasPublishPermission}\n      hasSavePermission={hasSavePermission}\n      id={id}\n      initialData={data}\n      initialState={formState}\n      isEditing={isEditing}\n    >\n      {!ViewOverride && (\n        <DocumentHeader\n          collectionConfig={collectionConfig}\n          config={payload.config}\n          globalConfig={globalConfig}\n          i18n={i18n}\n          permissions={permissions}\n        />\n      )}\n      <HydrateClientUser permissions={permissions} user={user} />\n      <EditDepthProvider\n        depth={1}\n        key={`${collectionSlug || globalSlug}${locale?.code ? `-${locale?.code}` : ''}`}\n      >\n        <FormQueryParamsProvider\n          initialParams={{\n            depth: 0,\n            'fallback-locale': 'null',\n            locale: locale?.code,\n            uploadEdits: undefined,\n          }}\n        >\n          {ErrorView ? (\n            <ErrorView initPageResult={initPageResult} searchParams={searchParams} />\n          ) : (\n            <RenderCustomComponent\n              CustomComponent={ViewOverride || CustomView}\n              DefaultComponent={DefaultView}\n              serverOnlyProps={{\n                i18n,\n                initPageResult,\n                locale,\n                params,\n                payload,\n                permissions,\n                routeSegments: segments,\n                searchParams,\n                user,\n              }}\n            />\n          )}\n        </FormQueryParamsProvider>\n      </EditDepthProvider>\n    </DocumentInfoProvider>\n  )\n}\n"],"names":["DocumentInfoProvider","EditDepthProvider","FormQueryParamsProvider","HydrateClientUser","RenderCustomComponent","isEditing","getIsEditing","notFound","redirect","React","DocumentHeader","NotFoundView","getDocumentData","getDocumentPermissions","getMetaBySegment","getViewsFromConfig","generateMetadata","args","Document","initPageResult","params","searchParams","collectionConfig","docID","id","globalConfig","locale","permissions","req","i18n","payload","config","routes","admin","adminRoute","api","apiRoute","serverURL","user","visibleEntities","segments","Array","isArray","collectionSlug","slug","undefined","globalSlug","ViewOverride","CustomView","DefaultView","ErrorView","apiURL","action","data","formState","docPermissions","hasPublishPermission","hasSavePermission","collections","find","visibleSlug","URLSearchParams","versions","drafts","append","code","apiQueryParams","toString","editConfig","components","views","Edit","collectionViews","routeSegments","globals","globalViews","shouldAutosave","autosave","validateDraftData","validate","doc","create","collection","depth","draft","fallbackLocale","redirectURL","disableActions","initialData","initialState","initialParams","uploadEdits","CustomComponent","DefaultComponent","serverOnlyProps"],"mappings":"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"}