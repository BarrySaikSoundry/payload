{"version":3,"sources":["../../../src/views/LivePreview/index.tsx"],"sourcesContent":["import type { EditViewComponent, LivePreviewConfig, TypeWithID } from 'payload'\n\nimport { notFound } from 'next/navigation.js'\nimport React from 'react'\n\nimport { LivePreviewClient } from './index.client.js'\nimport './index.scss'\n\nexport const LivePreviewView: EditViewComponent = async (props) => {\n  const { initPageResult } = props\n\n  const {\n    collectionConfig,\n    docID,\n    globalConfig,\n    locale,\n    req: {\n      payload: {\n        config: {\n          admin: { livePreview: topLevelLivePreviewConfig },\n        },\n      } = {},\n    } = {},\n  } = initPageResult\n\n  let data: Record<string, unknown> | TypeWithID\n\n  try {\n    if (collectionConfig) {\n      data = await initPageResult.req.payload.findByID({\n        id: docID,\n        collection: collectionConfig.slug,\n        depth: 0,\n        draft: true,\n        fallbackLocale: null,\n      })\n    }\n\n    if (globalConfig) {\n      data = await initPageResult.req.payload.findGlobal({\n        slug: globalConfig.slug,\n        depth: 0,\n        draft: true,\n        fallbackLocale: null,\n      })\n    }\n  } catch (error) {\n    notFound()\n  }\n\n  let livePreviewConfig: LivePreviewConfig = topLevelLivePreviewConfig\n\n  if (collectionConfig) {\n    livePreviewConfig = {\n      ...(livePreviewConfig || {}),\n      ...(collectionConfig.admin.livePreview || {}),\n    }\n  }\n\n  if (globalConfig) {\n    livePreviewConfig = {\n      ...(livePreviewConfig || {}),\n      ...(globalConfig.admin.livePreview || {}),\n    }\n  }\n\n  const breakpoints: LivePreviewConfig['breakpoints'] = [\n    ...(livePreviewConfig?.breakpoints || []),\n    {\n      name: 'responsive',\n      height: '100%',\n      label: 'Responsive',\n      width: '100%',\n    },\n  ]\n\n  const url =\n    typeof livePreviewConfig?.url === 'function'\n      ? await livePreviewConfig.url({\n          collectionConfig,\n          data,\n          globalConfig,\n          locale,\n          payload: initPageResult.req.payload,\n        })\n      : livePreviewConfig?.url\n\n  return <LivePreviewClient breakpoints={breakpoints} initialData={data} url={url} />\n}\n"],"names":["notFound","React","LivePreviewClient","LivePreviewView","props","initPageResult","collectionConfig","docID","globalConfig","locale","req","payload","config","admin","livePreview","topLevelLivePreviewConfig","data","findByID","id","collection","slug","depth","draft","fallbackLocale","findGlobal","error","livePreviewConfig","breakpoints","name","height","label","width","url","initialData"],"mappings":";AAEA,SAASA,QAAQ,QAAQ,qBAAoB;AAC7C,OAAOC,WAAW,QAAO;AAEzB,SAASC,iBAAiB,QAAQ,oBAAmB;AAGrD,OAAO,MAAMC,kBAAqC,OAAOC;IACvD,MAAM,EAAEC,cAAc,EAAE,GAAGD;IAE3B,MAAM,EACJE,gBAAgB,EAChBC,KAAK,EACLC,YAAY,EACZC,MAAM,EACNC,KAAK,EACHC,SAAS,EACPC,QAAQ,EACNC,OAAO,EAAEC,aAAaC,yBAAyB,EAAE,EAClD,EACF,GAAG,CAAC,CAAC,EACP,GAAG,CAAC,CAAC,EACP,GAAGV;IAEJ,IAAIW;IAEJ,IAAI;QACF,IAAIV,kBAAkB;YACpBU,OAAO,MAAMX,eAAeK,GAAG,CAACC,OAAO,CAACM,QAAQ,CAAC;gBAC/CC,IAAIX;gBACJY,YAAYb,iBAAiBc,IAAI;gBACjCC,OAAO;gBACPC,OAAO;gBACPC,gBAAgB;YAClB;QACF;QAEA,IAAIf,cAAc;YAChBQ,OAAO,MAAMX,eAAeK,GAAG,CAACC,OAAO,CAACa,UAAU,CAAC;gBACjDJ,MAAMZ,aAAaY,IAAI;gBACvBC,OAAO;gBACPC,OAAO;gBACPC,gBAAgB;YAClB;QACF;IACF,EAAE,OAAOE,OAAO;QACdzB;IACF;IAEA,IAAI0B,oBAAuCX;IAE3C,IAAIT,kBAAkB;QACpBoB,oBAAoB;YAClB,GAAIA,qBAAqB,CAAC,CAAC;YAC3B,GAAIpB,iBAAiBO,KAAK,CAACC,WAAW,IAAI,CAAC,CAAC;QAC9C;IACF;IAEA,IAAIN,cAAc;QAChBkB,oBAAoB;YAClB,GAAIA,qBAAqB,CAAC,CAAC;YAC3B,GAAIlB,aAAaK,KAAK,CAACC,WAAW,IAAI,CAAC,CAAC;QAC1C;IACF;IAEA,MAAMa,cAAgD;WAChDD,mBAAmBC,eAAe,EAAE;QACxC;YACEC,MAAM;YACNC,QAAQ;YACRC,OAAO;YACPC,OAAO;QACT;KACD;IAED,MAAMC,MACJ,OAAON,mBAAmBM,QAAQ,aAC9B,MAAMN,kBAAkBM,GAAG,CAAC;QAC1B1B;QACAU;QACAR;QACAC;QACAE,SAASN,eAAeK,GAAG,CAACC,OAAO;IACrC,KACAe,mBAAmBM;IAEzB,qBAAO,KAAC9B;QAAkByB,aAAaA;QAAaM,aAAajB;QAAMgB,KAAKA;;AAC9E,EAAC"}