{"version":3,"sources":["../../../src/views/Versions/getLatestVersion.ts"],"sourcesContent":["export async function getLatestVersion(payload, slug, status, type = 'collection') {\n  try {\n    const sharedOptions = {\n      depth: 0,\n      limit: 1,\n      sort: '-updatedAt',\n      where: {\n        'version._status': {\n          equals: status,\n        },\n      },\n    }\n\n    const response =\n      type === 'collection'\n        ? await payload.findVersions({\n            collection: slug,\n            ...sharedOptions,\n          })\n        : await payload.findGlobalVersions({\n            slug,\n            ...sharedOptions,\n          })\n\n    return {\n      id: response.docs[0].id,\n      updatedAt: response.docs[0].updatedAt,\n    }\n  } catch (e) {\n    console.error(e)\n  }\n}\n"],"names":["getLatestVersion","payload","slug","status","type","sharedOptions","depth","limit","sort","where","equals","response","findVersions","collection","findGlobalVersions","id","docs","updatedAt","e","console","error"],"mappings":"AAAA,OAAO,eAAeA,iBAAiBC,OAAO,EAAEC,IAAI,EAAEC,MAAM,EAAEC,OAAO,YAAY;IAC/E,IAAI;QACF,MAAMC,gBAAgB;YACpBC,OAAO;YACPC,OAAO;YACPC,MAAM;YACNC,OAAO;gBACL,mBAAmB;oBACjBC,QAAQP;gBACV;YACF;QACF;QAEA,MAAMQ,WACJP,SAAS,eACL,MAAMH,QAAQW,YAAY,CAAC;YACzBC,YAAYX;YACZ,GAAGG,aAAa;QAClB,KACA,MAAMJ,QAAQa,kBAAkB,CAAC;YAC/BZ;YACA,GAAGG,aAAa;QAClB;QAEN,OAAO;YACLU,IAAIJ,SAASK,IAAI,CAAC,EAAE,CAACD,EAAE;YACvBE,WAAWN,SAASK,IAAI,CAAC,EAAE,CAACC,SAAS;QACvC;IACF,EAAE,OAAOC,GAAG;QACVC,QAAQC,KAAK,CAACF;IAChB;AACF"}