{"version":3,"sources":["../../../src/views/Versions/index.tsx"],"sourcesContent":["import type { EditViewComponent, PaginatedDocs } from 'payload'\n\nimport { Gutter, ListQueryProvider } from '@payloadcms/ui'\nimport { notFound } from 'next/navigation.js'\nimport { isNumber } from 'payload/shared'\nimport React from 'react'\n\nimport { SetDocumentStepNav } from '../Edit/Default/SetDocumentStepNav/index.js'\nimport { buildVersionColumns } from './buildColumns.js'\nimport { getLatestVersion } from './getLatestVersion.js'\nimport { VersionsViewClient } from './index.client.js'\nimport './index.scss'\n\nexport const baseClass = 'versions'\n\nexport const VersionsView: EditViewComponent = async (props) => {\n  const { initPageResult, searchParams } = props\n\n  const {\n    collectionConfig,\n    docID: id,\n    globalConfig,\n    req,\n    req: {\n      i18n,\n      payload,\n      payload: { config },\n      user,\n    },\n  } = initPageResult\n\n  const collectionSlug = collectionConfig?.slug\n  const globalSlug = globalConfig?.slug\n  const { limit, page, sort } = searchParams\n\n  const {\n    routes: { api: apiRoute },\n    serverURL,\n  } = config\n\n  let versionsData: PaginatedDocs\n  let limitToUse = isNumber(limit) ? Number(limit) : undefined\n  let latestPublishedVersion = null\n  let latestDraftVersion = null\n\n  if (collectionSlug) {\n    limitToUse = limitToUse || collectionConfig.admin.pagination.defaultLimit\n    try {\n      versionsData = await payload.findVersions({\n        collection: collectionSlug,\n        depth: 0,\n        limit: limitToUse,\n        overrideAccess: false,\n        page: page ? parseInt(page.toString(), 10) : undefined,\n        req,\n        sort: sort as string,\n        user,\n        where: {\n          parent: {\n            equals: id,\n          },\n        },\n      })\n      if (collectionConfig?.versions?.drafts) {\n        latestDraftVersion = await getLatestVersion(payload, collectionSlug, 'draft', 'collection')\n        latestPublishedVersion = await getLatestVersion(\n          payload,\n          collectionSlug,\n          'published',\n          'collection',\n        )\n      }\n    } catch (error) {\n      console.error(error) // eslint-disable-line no-console\n    }\n  }\n\n  if (globalSlug) {\n    limitToUse = limitToUse || 10\n    try {\n      versionsData = await payload.findGlobalVersions({\n        slug: globalSlug,\n        depth: 0,\n        limit: limitToUse,\n        overrideAccess: false,\n        page: page ? parseInt(page as string, 10) : undefined,\n        req,\n        sort: sort as string,\n        user,\n      })\n\n      if (globalConfig?.versions?.drafts) {\n        latestDraftVersion = await getLatestVersion(payload, globalSlug, 'draft', 'global')\n        latestPublishedVersion = await getLatestVersion(payload, globalSlug, 'published', 'global')\n      }\n    } catch (error) {\n      console.error(error) // eslint-disable-line no-console\n    }\n\n    if (!versionsData) {\n      return notFound()\n    }\n  }\n  const fetchURL = collectionSlug\n    ? `${serverURL}${apiRoute}/${collectionSlug}/versions`\n    : globalSlug\n      ? `${serverURL}${apiRoute}/globals/${globalSlug}/versions`\n      : ''\n\n  const publishedNewerThanDraft = latestPublishedVersion?.updatedAt > latestDraftVersion?.updatedAt\n\n  if (publishedNewerThanDraft) {\n    latestDraftVersion = {\n      id: '',\n      updatedAt: '',\n    }\n  }\n\n  const columns = buildVersionColumns({\n    collectionConfig,\n    config,\n    docID: id,\n    globalConfig,\n    i18n,\n    latestDraftVersion: latestDraftVersion?.id,\n    latestPublishedVersion: latestPublishedVersion?.id,\n  })\n\n  return (\n    <React.Fragment>\n      <SetDocumentStepNav\n        collectionSlug={collectionConfig?.slug}\n        globalSlug={globalConfig?.slug}\n        id={id}\n        pluralLabel={collectionConfig?.labels?.plural || globalConfig?.label}\n        useAsTitle={collectionConfig?.admin?.useAsTitle || globalConfig?.slug}\n        view={i18n.t('version:versions')}\n      />\n      <main className={baseClass}>\n        <Gutter className={`${baseClass}__wrap`}>\n          <ListQueryProvider\n            data={versionsData}\n            defaultLimit={limitToUse}\n            defaultSort={sort as string}\n            modifySearchParams\n          >\n            <VersionsViewClient\n              baseClass={baseClass}\n              columns={columns}\n              fetchURL={fetchURL}\n              paginationLimits={collectionConfig?.admin?.pagination?.limits}\n            />\n          </ListQueryProvider>\n        </Gutter>\n      </main>\n    </React.Fragment>\n  )\n}\n"],"names":["Gutter","ListQueryProvider","notFound","isNumber","React","SetDocumentStepNav","buildVersionColumns","getLatestVersion","VersionsViewClient","baseClass","VersionsView","props","initPageResult","searchParams","collectionConfig","docID","id","globalConfig","req","i18n","payload","config","user","collectionSlug","slug","globalSlug","limit","page","sort","routes","api","apiRoute","serverURL","versionsData","limitToUse","Number","undefined","latestPublishedVersion","latestDraftVersion","admin","pagination","defaultLimit","findVersions","collection","depth","overrideAccess","parseInt","toString","where","parent","equals","versions","drafts","error","console","findGlobalVersions","fetchURL","publishedNewerThanDraft","updatedAt","columns","Fragment","pluralLabel","labels","plural","label","useAsTitle","view","t","main","className","data","defaultSort","modifySearchParams","paginationLimits","limits"],"mappings":";AAEA,SAASA,MAAM,EAAEC,iBAAiB,QAAQ,iBAAgB;AAC1D,SAASC,QAAQ,QAAQ,qBAAoB;AAC7C,SAASC,QAAQ,QAAQ,iBAAgB;AACzC,OAAOC,WAAW,QAAO;AAEzB,SAASC,kBAAkB,QAAQ,8CAA6C;AAChF,SAASC,mBAAmB,QAAQ,oBAAmB;AACvD,SAASC,gBAAgB,QAAQ,wBAAuB;AACxD,SAASC,kBAAkB,QAAQ,oBAAmB;AAGtD,OAAO,MAAMC,YAAY,WAAU;AAEnC,OAAO,MAAMC,eAAkC,OAAOC;IACpD,MAAM,EAAEC,cAAc,EAAEC,YAAY,EAAE,GAAGF;IAEzC,MAAM,EACJG,gBAAgB,EAChBC,OAAOC,EAAE,EACTC,YAAY,EACZC,GAAG,EACHA,KAAK,EACHC,IAAI,EACJC,OAAO,EACPA,SAAS,EAAEC,MAAM,EAAE,EACnBC,IAAI,EACL,EACF,GAAGV;IAEJ,MAAMW,iBAAiBT,kBAAkBU;IACzC,MAAMC,aAAaR,cAAcO;IACjC,MAAM,EAAEE,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE,GAAGf;IAE9B,MAAM,EACJgB,QAAQ,EAAEC,KAAKC,QAAQ,EAAE,EACzBC,SAAS,EACV,GAAGX;IAEJ,IAAIY;IACJ,IAAIC,aAAa/B,SAASuB,SAASS,OAAOT,SAASU;IACnD,IAAIC,yBAAyB;IAC7B,IAAIC,qBAAqB;IAEzB,IAAIf,gBAAgB;QAClBW,aAAaA,cAAcpB,iBAAiByB,KAAK,CAACC,UAAU,CAACC,YAAY;QACzE,IAAI;YACFR,eAAe,MAAMb,QAAQsB,YAAY,CAAC;gBACxCC,YAAYpB;gBACZqB,OAAO;gBACPlB,OAAOQ;gBACPW,gBAAgB;gBAChBlB,MAAMA,OAAOmB,SAASnB,KAAKoB,QAAQ,IAAI,MAAMX;gBAC7ClB;gBACAU,MAAMA;gBACNN;gBACA0B,OAAO;oBACLC,QAAQ;wBACNC,QAAQlC;oBACV;gBACF;YACF;YACA,IAAIF,kBAAkBqC,UAAUC,QAAQ;gBACtCd,qBAAqB,MAAM/B,iBAAiBa,SAASG,gBAAgB,SAAS;gBAC9Ec,yBAAyB,MAAM9B,iBAC7Ba,SACAG,gBACA,aACA;YAEJ;QACF,EAAE,OAAO8B,OAAO;YACdC,QAAQD,KAAK,CAACA,OAAO,iCAAiC;;QACxD;IACF;IAEA,IAAI5B,YAAY;QACdS,aAAaA,cAAc;QAC3B,IAAI;YACFD,eAAe,MAAMb,QAAQmC,kBAAkB,CAAC;gBAC9C/B,MAAMC;gBACNmB,OAAO;gBACPlB,OAAOQ;gBACPW,gBAAgB;gBAChBlB,MAAMA,OAAOmB,SAASnB,MAAgB,MAAMS;gBAC5ClB;gBACAU,MAAMA;gBACNN;YACF;YAEA,IAAIL,cAAckC,UAAUC,QAAQ;gBAClCd,qBAAqB,MAAM/B,iBAAiBa,SAASK,YAAY,SAAS;gBAC1EY,yBAAyB,MAAM9B,iBAAiBa,SAASK,YAAY,aAAa;YACpF;QACF,EAAE,OAAO4B,OAAO;YACdC,QAAQD,KAAK,CAACA,OAAO,iCAAiC;;QACxD;QAEA,IAAI,CAACpB,cAAc;YACjB,OAAO/B;QACT;IACF;IACA,MAAMsD,WAAWjC,iBACb,CAAC,EAAES,UAAU,EAAED,SAAS,CAAC,EAAER,eAAe,SAAS,CAAC,GACpDE,aACE,CAAC,EAAEO,UAAU,EAAED,SAAS,SAAS,EAAEN,WAAW,SAAS,CAAC,GACxD;IAEN,MAAMgC,0BAA0BpB,wBAAwBqB,YAAYpB,oBAAoBoB;IAExF,IAAID,yBAAyB;QAC3BnB,qBAAqB;YACnBtB,IAAI;YACJ0C,WAAW;QACb;IACF;IAEA,MAAMC,UAAUrD,oBAAoB;QAClCQ;QACAO;QACAN,OAAOC;QACPC;QACAE;QACAmB,oBAAoBA,oBAAoBtB;QACxCqB,wBAAwBA,wBAAwBrB;IAClD;IAEA,qBACE,MAACZ,MAAMwD,QAAQ;;0BACb,KAACvD;gBACCkB,gBAAgBT,kBAAkBU;gBAClCC,YAAYR,cAAcO;gBAC1BR,IAAIA;gBACJ6C,aAAa/C,kBAAkBgD,QAAQC,UAAU9C,cAAc+C;gBAC/DC,YAAYnD,kBAAkByB,OAAO0B,cAAchD,cAAcO;gBACjE0C,MAAM/C,KAAKgD,CAAC,CAAC;;0BAEf,KAACC;gBAAKC,WAAW5D;0BACf,cAAA,KAACT;oBAAOqE,WAAW,CAAC,EAAE5D,UAAU,MAAM,CAAC;8BACrC,cAAA,KAACR;wBACCqE,MAAMrC;wBACNQ,cAAcP;wBACdqC,aAAa3C;wBACb4C,kBAAkB;kCAElB,cAAA,KAAChE;4BACCC,WAAWA;4BACXkD,SAASA;4BACTH,UAAUA;4BACViB,kBAAkB3D,kBAAkByB,OAAOC,YAAYkC;;;;;;;AAOrE,EAAC"}