{"version":3,"sources":["../../../src/views/Versions/buildColumns.tsx"],"sourcesContent":["import type { I18n } from '@payloadcms/translations'\nimport type { SanitizedCollectionConfig, SanitizedConfig, SanitizedGlobalConfig } from 'payload'\n\nimport { type Column, SortColumn } from '@payloadcms/ui'\nimport React from 'react'\n\nimport { AutosaveCell } from './cells/AutosaveCell/index.js'\nimport { CreatedAtCell } from './cells/CreatedAt/index.js'\nimport { IDCell } from './cells/ID/index.js'\n\nexport const buildVersionColumns = ({\n  collectionConfig,\n  docID,\n  globalConfig,\n  i18n: { t },\n  latestDraftVersion,\n  latestPublishedVersion,\n}: {\n  collectionConfig?: SanitizedCollectionConfig\n  config: SanitizedConfig\n  docID?: number | string\n  globalConfig?: SanitizedGlobalConfig\n  i18n: I18n\n  latestDraftVersion?: string\n  latestPublishedVersion?: string\n}): Column[] => {\n  const entityConfig = collectionConfig || globalConfig\n\n  const columns: Column[] = [\n    {\n      name: '',\n      type: 'date',\n      Label: '',\n      accessor: 'updatedAt',\n      active: true,\n      components: {\n        Cell: (\n          <CreatedAtCell\n            collectionSlug={collectionConfig?.slug}\n            docID={docID}\n            globalSlug={globalConfig?.slug}\n          />\n        ),\n        Heading: <SortColumn Label={t('general:updatedAt')} name=\"updatedAt\" />,\n      },\n    },\n    {\n      name: '',\n      type: 'text',\n      Label: '',\n      accessor: 'id',\n      active: true,\n      components: {\n        Cell: <IDCell />,\n        Heading: <SortColumn Label={t('version:versionID')} disable name=\"id\" />,\n      },\n    },\n  ]\n\n  if (\n    entityConfig?.versions?.drafts ||\n    (entityConfig?.versions?.drafts && entityConfig.versions.drafts?.autosave)\n  ) {\n    columns.push({\n      name: '',\n      type: 'checkbox',\n      Label: '',\n      accessor: '_status',\n      active: true,\n      components: {\n        Cell: (\n          <AutosaveCell\n            latestDraftVersion={latestDraftVersion}\n            latestPublishedVersion={latestPublishedVersion}\n          />\n        ),\n        Heading: <SortColumn Label={t('version:status')} disable name=\"status\" />,\n      },\n    })\n  }\n\n  return columns\n}\n"],"names":["SortColumn","React","AutosaveCell","CreatedAtCell","IDCell","buildVersionColumns","collectionConfig","docID","globalConfig","i18n","t","latestDraftVersion","latestPublishedVersion","entityConfig","columns","name","type","Label","accessor","active","components","Cell","collectionSlug","slug","globalSlug","Heading","disable","versions","drafts","autosave","push"],"mappings":";AAGA,SAAsBA,UAAU,QAAQ,iBAAgB;AACxD,OAAOC,WAAW,QAAO;AAEzB,SAASC,YAAY,QAAQ,gCAA+B;AAC5D,SAASC,aAAa,QAAQ,6BAA4B;AAC1D,SAASC,MAAM,QAAQ,sBAAqB;AAE5C,OAAO,MAAMC,sBAAsB,CAAC,EAClCC,gBAAgB,EAChBC,KAAK,EACLC,YAAY,EACZC,MAAM,EAAEC,CAAC,EAAE,EACXC,kBAAkB,EAClBC,sBAAsB,EASvB;IACC,MAAMC,eAAeP,oBAAoBE;IAEzC,MAAMM,UAAoB;QACxB;YACEC,MAAM;YACNC,MAAM;YACNC,OAAO;YACPC,UAAU;YACVC,QAAQ;YACRC,YAAY;gBACVC,oBACE,KAAClB;oBACCmB,gBAAgBhB,kBAAkBiB;oBAClChB,OAAOA;oBACPiB,YAAYhB,cAAce;;gBAG9BE,uBAAS,KAACzB;oBAAWiB,OAAOP,EAAE;oBAAsBK,MAAK;;YAC3D;QACF;QACA;YACEA,MAAM;YACNC,MAAM;YACNC,OAAO;YACPC,UAAU;YACVC,QAAQ;YACRC,YAAY;gBACVC,oBAAM,KAACjB;gBACPqB,uBAAS,KAACzB;oBAAWiB,OAAOP,EAAE;oBAAsBgB,OAAO;oBAACX,MAAK;;YACnE;QACF;KACD;IAED,IACEF,cAAcc,UAAUC,UACvBf,cAAcc,UAAUC,UAAUf,aAAac,QAAQ,CAACC,MAAM,EAAEC,UACjE;QACAf,QAAQgB,IAAI,CAAC;YACXf,MAAM;YACNC,MAAM;YACNC,OAAO;YACPC,UAAU;YACVC,QAAQ;YACRC,YAAY;gBACVC,oBACE,KAACnB;oBACCS,oBAAoBA;oBACpBC,wBAAwBA;;gBAG5Ba,uBAAS,KAACzB;oBAAWiB,OAAOP,EAAE;oBAAmBgB,OAAO;oBAACX,MAAK;;YAChE;QACF;IACF;IAEA,OAAOD;AACT,EAAC"}