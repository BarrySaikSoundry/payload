{"version":3,"sources":["../../../src/views/Root/getCustomViewByRoute.tsx"],"sourcesContent":["import type { AdminViewComponent, SanitizedConfig } from 'payload'\n\nimport { isPathMatchingRoute } from './isPathMatchingRoute.js'\n\nexport const getCustomViewByRoute = ({\n  config,\n  currentRoute: currentRouteWithAdmin,\n}: {\n  config: SanitizedConfig\n  currentRoute: string\n}): AdminViewComponent => {\n  const {\n    admin: {\n      components: { views },\n    },\n    routes: { admin: adminRoute },\n  } = config\n\n  const currentRoute = currentRouteWithAdmin.replace(adminRoute, '')\n\n  const foundViewConfig =\n    views &&\n    typeof views === 'object' &&\n    Object.entries(views).find(([, view]) => {\n      if (typeof view === 'object') {\n        return isPathMatchingRoute({\n          currentRoute,\n          exact: view.exact,\n          path: view.path,\n          sensitive: view.sensitive,\n          strict: view.strict,\n        })\n      }\n    })?.[1]\n\n  return typeof foundViewConfig === 'object' ? foundViewConfig.Component : null\n}\n"],"names":["isPathMatchingRoute","getCustomViewByRoute","config","currentRoute","currentRouteWithAdmin","admin","components","views","routes","adminRoute","replace","foundViewConfig","Object","entries","find","view","exact","path","sensitive","strict","Component"],"mappings":"AAEA,SAASA,mBAAmB,QAAQ,2BAA0B;AAE9D,OAAO,MAAMC,uBAAuB,CAAC,EACnCC,MAAM,EACNC,cAAcC,qBAAqB,EAIpC;IACC,MAAM,EACJC,OAAO,EACLC,YAAY,EAAEC,KAAK,EAAE,EACtB,EACDC,QAAQ,EAAEH,OAAOI,UAAU,EAAE,EAC9B,GAAGP;IAEJ,MAAMC,eAAeC,sBAAsBM,OAAO,CAACD,YAAY;IAE/D,MAAME,kBACJJ,SACA,OAAOA,UAAU,YACjBK,OAAOC,OAAO,CAACN,OAAOO,IAAI,CAAC,CAAC,GAAGC,KAAK;QAClC,IAAI,OAAOA,SAAS,UAAU;YAC5B,OAAOf,oBAAoB;gBACzBG;gBACAa,OAAOD,KAAKC,KAAK;gBACjBC,MAAMF,KAAKE,IAAI;gBACfC,WAAWH,KAAKG,SAAS;gBACzBC,QAAQJ,KAAKI,MAAM;YACrB;QACF;IACF,IAAI,CAAC,EAAE;IAET,OAAO,OAAOR,oBAAoB,WAAWA,gBAAgBS,SAAS,GAAG;AAC3E,EAAC"}