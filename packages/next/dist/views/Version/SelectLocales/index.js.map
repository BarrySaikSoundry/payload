{"version":3,"sources":["../../../../src/views/Version/SelectLocales/index.tsx"],"sourcesContent":["'use client'\nimport { ReactSelect, useLocale, useTranslation } from '@payloadcms/ui'\nimport React from 'react'\n\nimport type { Props } from './types.js'\n\nimport './index.scss'\n\nconst baseClass = 'select-version-locales'\n\nexport const SelectLocales: React.FC<Props> = ({ onChange, options, value }) => {\n  const { t } = useTranslation()\n  const { code } = useLocale()\n\n  const format = (items) => {\n    return items.map((item) => {\n      if (typeof item.label === 'string') return item\n      if (typeof item.label !== 'string' && item.label[code]) {\n        return {\n          label: item.label[code],\n          value: item.value,\n        }\n      }\n    })\n  }\n\n  return (\n    <div className={baseClass}>\n      <div className={`${baseClass}__label`}>{t('version:showLocales')}</div>\n      <ReactSelect\n        isMulti\n        onChange={onChange}\n        options={format(options)}\n        placeholder={t('version:selectLocales')}\n        value={format(value)}\n      />\n    </div>\n  )\n}\n"],"names":["ReactSelect","useLocale","useTranslation","React","baseClass","SelectLocales","onChange","options","value","t","code","format","items","map","item","label","div","className","isMulti","placeholder"],"mappings":"AAAA;;AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,cAAc,QAAQ,iBAAgB;AACvE,OAAOC,WAAW,QAAO;AAMzB,MAAMC,YAAY;AAElB,OAAO,MAAMC,gBAAiC,CAAC,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,KAAK,EAAE;IACzE,MAAM,EAAEC,CAAC,EAAE,GAAGP;IACd,MAAM,EAAEQ,IAAI,EAAE,GAAGT;IAEjB,MAAMU,SAAS,CAACC;QACd,OAAOA,MAAMC,GAAG,CAAC,CAACC;YAChB,IAAI,OAAOA,KAAKC,KAAK,KAAK,UAAU,OAAOD;YAC3C,IAAI,OAAOA,KAAKC,KAAK,KAAK,YAAYD,KAAKC,KAAK,CAACL,KAAK,EAAE;gBACtD,OAAO;oBACLK,OAAOD,KAAKC,KAAK,CAACL,KAAK;oBACvBF,OAAOM,KAAKN,KAAK;gBACnB;YACF;QACF;IACF;IAEA,qBACE,MAACQ;QAAIC,WAAWb;;0BACd,KAACY;gBAAIC,WAAW,CAAC,EAAEb,UAAU,OAAO,CAAC;0BAAGK,EAAE;;0BAC1C,KAACT;gBACCkB,OAAO;gBACPZ,UAAUA;gBACVC,SAASI,OAAOJ;gBAChBY,aAAaV,EAAE;gBACfD,OAAOG,OAAOH;;;;AAItB,EAAC"}