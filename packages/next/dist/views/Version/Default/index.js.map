{"version":3,"sources":["../../../../src/views/Version/Default/index.tsx"],"sourcesContent":["'use client'\nimport type { OptionObject } from 'payload'\n\nimport {\n  Gutter,\n  SetViewActions,\n  useComponentMap,\n  useConfig,\n  useDocumentInfo,\n  usePayloadAPI,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { formatDate } from '@payloadcms/ui/shared'\nimport React, { useState } from 'react'\n\nimport type { CompareOption, DefaultVersionsViewProps } from './types.js'\n\nimport diffComponents from '../RenderFieldsToDiff/fields/index.js'\nimport RenderFieldsToDiff from '../RenderFieldsToDiff/index.js'\nimport Restore from '../Restore/index.js'\nimport { SelectComparison } from '../SelectComparison/index.js'\nimport { SelectLocales } from '../SelectLocales/index.js'\nimport { SetStepNav } from './SetStepNav.js'\nimport './index.scss'\n\nconst baseClass = 'view-version'\n\nexport const DefaultVersionView: React.FC<DefaultVersionsViewProps> = ({\n  doc,\n  docPermissions,\n  initialComparisonDoc,\n  latestDraftVersion,\n  latestPublishedVersion,\n  localeOptions,\n  versionID,\n}) => {\n  const config = useConfig()\n\n  const { i18n } = useTranslation()\n  const { id, collectionSlug, globalSlug } = useDocumentInfo()\n\n  const { getComponentMap, getFieldMap } = useComponentMap()\n\n  const componentMap = getComponentMap({ collectionSlug, globalSlug })\n\n  const [fieldMap] = useState(() => getFieldMap({ collectionSlug, globalSlug }))\n\n  const [collectionConfig] = useState(() =>\n    config.collections.find((collection) => collection.slug === collectionSlug),\n  )\n\n  const [globalConfig] = useState(() => config.globals.find((global) => global.slug === globalSlug))\n\n  const [locales, setLocales] = useState<OptionObject[]>(localeOptions)\n\n  const [compareValue, setCompareValue] = useState<CompareOption>()\n\n  const {\n    admin: { dateFormat },\n    localization,\n    routes: { api: apiRoute },\n    serverURL,\n  } = config\n\n  const versionCreatedAt = doc?.updatedAt\n    ? formatDate({ date: doc.updatedAt, i18n, pattern: dateFormat })\n    : ''\n\n  const compareBaseURL = `${serverURL}${apiRoute}/${globalSlug ? 'globals/' : ''}${\n    collectionSlug || globalSlug\n  }/versions`\n\n  const compareFetchURL = compareValue?.value && `${compareBaseURL}/${compareValue.value}`\n\n  const [{ data: currentComparisonDoc }] = usePayloadAPI(compareFetchURL, {\n    initialData: initialComparisonDoc,\n    initialParams: { depth: 1, draft: 'true', locale: '*' },\n  })\n\n  const comparison = compareValue?.value && currentComparisonDoc?.version // the `version` key is only present on `versions` documents\n\n  const canUpdate = docPermissions?.update?.permission\n\n  return (\n    <main className={baseClass}>\n      <SetViewActions actions={componentMap?.actionsMap?.Edit?.Version} />\n      <SetStepNav\n        collectionConfig={collectionConfig}\n        collectionSlug={collectionSlug}\n        doc={doc}\n        fieldMap={fieldMap}\n        globalConfig={globalConfig}\n        globalSlug={globalSlug}\n        id={id}\n      />\n      <Gutter className={`${baseClass}__wrap`}>\n        <div className={`${baseClass}__header-wrap`}>\n          <p className={`${baseClass}__created-at`}>\n            {i18n.t('version:versionCreatedOn', {\n              version: i18n.t(doc?.autosave ? 'version:autosavedVersion' : 'version:version'),\n            })}\n          </p>\n          <header className={`${baseClass}__header`}>\n            <h2>{versionCreatedAt}</h2>\n            {canUpdate && (\n              <Restore\n                className={`${baseClass}__restore`}\n                collectionSlug={collectionSlug}\n                globalSlug={globalSlug}\n                label={collectionConfig?.labels.singular || globalConfig?.label}\n                originalDocID={id}\n                versionDate={versionCreatedAt}\n                versionID={versionID}\n              />\n            )}\n          </header>\n        </div>\n        <div className={`${baseClass}__controls`}>\n          <SelectComparison\n            baseURL={compareBaseURL}\n            latestDraftVersion={latestDraftVersion}\n            latestPublishedVersion={latestPublishedVersion}\n            onChange={setCompareValue}\n            parentID={id}\n            value={compareValue}\n            versionID={versionID}\n          />\n          {localization && (\n            <SelectLocales onChange={setLocales} options={localeOptions} value={locales} />\n          )}\n        </div>\n        {doc?.version && (\n          <RenderFieldsToDiff\n            comparison={comparison}\n            diffComponents={diffComponents}\n            fieldMap={fieldMap}\n            fieldPermissions={docPermissions?.fields}\n            i18n={i18n}\n            locales={\n              locales\n                ? locales.map(({ label }) => (typeof label === 'string' ? label : undefined))\n                : []\n            }\n            version={\n              globalConfig\n                ? {\n                    ...doc?.version,\n                    createdAt: doc?.version?.createdAt || doc.createdAt,\n                    updatedAt: doc?.version?.updatedAt || doc.updatedAt,\n                  }\n                : doc?.version\n            }\n          />\n        )}\n      </Gutter>\n    </main>\n  )\n}\n"],"names":["Gutter","SetViewActions","useComponentMap","useConfig","useDocumentInfo","usePayloadAPI","useTranslation","formatDate","React","useState","diffComponents","RenderFieldsToDiff","Restore","SelectComparison","SelectLocales","SetStepNav","baseClass","DefaultVersionView","doc","docPermissions","initialComparisonDoc","latestDraftVersion","latestPublishedVersion","localeOptions","versionID","config","i18n","id","collectionSlug","globalSlug","getComponentMap","getFieldMap","componentMap","fieldMap","collectionConfig","collections","find","collection","slug","globalConfig","globals","global","locales","setLocales","compareValue","setCompareValue","admin","dateFormat","localization","routes","api","apiRoute","serverURL","versionCreatedAt","updatedAt","date","pattern","compareBaseURL","compareFetchURL","value","data","currentComparisonDoc","initialData","initialParams","depth","draft","locale","comparison","version","canUpdate","update","permission","main","className","actions","actionsMap","Edit","Version","div","p","t","autosave","header","h2","label","labels","singular","originalDocID","versionDate","baseURL","onChange","parentID","options","fieldPermissions","fields","map","undefined","createdAt"],"mappings":"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"}