{"version":3,"sources":["../../../../src/views/Version/Default/SetStepNav.tsx"],"sourcesContent":["import type { StepNavItem } from '@payloadcms/ui'\nimport type { FieldMap } from '@payloadcms/ui/utilities/buildComponentMap'\nimport type { ClientCollectionConfig, ClientGlobalConfig } from 'payload'\nimport type React from 'react'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { useConfig, useLocale, useStepNav, useTranslation } from '@payloadcms/ui'\nimport { formatDate } from '@payloadcms/ui/shared'\nimport { useEffect } from 'react'\n\nexport const SetStepNav: React.FC<{\n  collectionConfig?: ClientCollectionConfig\n  collectionSlug?: string\n  doc: any\n  fieldMap: FieldMap\n  globalConfig?: ClientGlobalConfig\n  globalSlug?: string\n  id?: number | string\n}> = ({ id, collectionConfig, collectionSlug, doc, fieldMap, globalConfig, globalSlug }) => {\n  const config = useConfig()\n  const { setStepNav } = useStepNav()\n  const { i18n, t } = useTranslation()\n  const locale = useLocale()\n\n  useEffect(() => {\n    let nav: StepNavItem[] = []\n\n    const {\n      admin: { dateFormat },\n      routes: { admin: adminRoute },\n    } = config\n\n    if (collectionSlug) {\n      let docLabel = ''\n\n      const useAsTitle = collectionConfig?.admin?.useAsTitle || 'id'\n      const pluralLabel = collectionConfig?.labels?.plural\n      const formattedDoc = doc.version ? doc.version : doc\n\n      if (formattedDoc) {\n        if (useAsTitle !== 'id') {\n          const titleField = fieldMap.find((f) => {\n            const { isFieldAffectingData } = f\n            const fieldName = 'name' in f ? f.name : undefined\n            return Boolean(isFieldAffectingData && fieldName === useAsTitle)\n          })\n\n          if (titleField && formattedDoc[useAsTitle]) {\n            if (titleField.localized) {\n              docLabel = formattedDoc[useAsTitle]?.[locale.code]\n            } else {\n              docLabel = formattedDoc[useAsTitle]\n            }\n          } else {\n            docLabel = `[${t('general:untitled')}]`\n          }\n        } else {\n          docLabel = doc.id\n        }\n      }\n\n      nav = [\n        {\n          label: getTranslation(pluralLabel, i18n),\n          url: `${adminRoute}/collections/${collectionSlug}`,\n        },\n        {\n          label: docLabel,\n          url: `${adminRoute}/collections/${collectionSlug}/${id}`,\n        },\n        {\n          label: 'Versions',\n          url: `${adminRoute}/collections/${collectionSlug}/${id}/versions`,\n        },\n        {\n          label: doc?.createdAt\n            ? formatDate({ date: doc.createdAt, i18n, pattern: dateFormat })\n            : '',\n        },\n      ]\n    }\n\n    if (globalSlug) {\n      nav = [\n        {\n          label: globalConfig.label,\n          url: `${adminRoute}/globals/${globalConfig.slug}`,\n        },\n        {\n          label: 'Versions',\n          url: `${adminRoute}/globals/${globalConfig.slug}/versions`,\n        },\n        {\n          label: doc?.createdAt\n            ? formatDate({ date: doc.createdAt, i18n, pattern: dateFormat })\n            : '',\n        },\n      ]\n    }\n\n    setStepNav(nav)\n  }, [\n    config,\n    setStepNav,\n    collectionSlug,\n    globalSlug,\n    doc,\n    id,\n    locale,\n    t,\n    i18n,\n    collectionConfig,\n    fieldMap,\n    globalConfig,\n  ])\n\n  return null\n}\n"],"names":["getTranslation","useConfig","useLocale","useStepNav","useTranslation","formatDate","useEffect","SetStepNav","id","collectionConfig","collectionSlug","doc","fieldMap","globalConfig","globalSlug","config","setStepNav","i18n","t","locale","nav","admin","dateFormat","routes","adminRoute","docLabel","useAsTitle","pluralLabel","labels","plural","formattedDoc","version","titleField","find","f","isFieldAffectingData","fieldName","name","undefined","Boolean","localized","code","label","url","createdAt","date","pattern","slug"],"mappings":"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"}