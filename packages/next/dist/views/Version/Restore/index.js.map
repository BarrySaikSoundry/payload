{"version":3,"sources":["../../../../src/views/Version/Restore/index.tsx"],"sourcesContent":["'use client'\nimport { getTranslation } from '@payloadcms/translations'\nimport { Button, Modal, Pill, useConfig, useModal, useTranslation } from '@payloadcms/ui'\nimport { requests } from '@payloadcms/ui/shared'\nimport { useRouter } from 'next/navigation.js'\nimport React, { Fragment, useCallback, useState } from 'react'\nimport { toast } from 'sonner'\n\nimport type { Props } from './types.js'\n\nimport { MinimalTemplate } from '../../../templates/Minimal/index.js'\nimport './index.scss'\n\nconst baseClass = 'restore-version'\nconst modalSlug = 'restore-version'\n\nconst Restore: React.FC<Props> = ({\n  className,\n  collectionSlug,\n  globalSlug,\n  label,\n  originalDocID,\n  versionDate,\n  versionID,\n}) => {\n  const {\n    routes: { admin, api },\n    serverURL,\n  } = useConfig()\n  const { toggleModal } = useModal()\n  const [processing, setProcessing] = useState(false)\n  const router = useRouter()\n  const { i18n, t } = useTranslation()\n\n  const restoreMessage = t('version:aboutToRestoreGlobal', {\n    label: getTranslation(label, i18n),\n    versionDate,\n  })\n\n  let fetchURL = `${serverURL}${api}`\n  let redirectURL: string\n\n  if (collectionSlug) {\n    fetchURL = `${fetchURL}/${collectionSlug}/versions/${versionID}`\n    redirectURL = `${admin}/collections/${collectionSlug}/${originalDocID}`\n  }\n\n  if (globalSlug) {\n    fetchURL = `${fetchURL}/globals/${globalSlug}/versions/${versionID}`\n    redirectURL = `${admin}/globals/${globalSlug}`\n  }\n\n  const handleRestore = useCallback(async () => {\n    setProcessing(true)\n\n    const res = await requests.post(fetchURL, {\n      headers: {\n        'Accept-Language': i18n.language,\n      },\n    })\n\n    if (res.status === 200) {\n      const json = await res.json()\n      toast.success(json.message)\n      router.push(redirectURL)\n    } else {\n      toast.error(t('version:problemRestoringVersion'))\n    }\n  }, [fetchURL, redirectURL, t, i18n, router])\n\n  return (\n    <Fragment>\n      <Pill\n        className={[baseClass, className].filter(Boolean).join(' ')}\n        onClick={() => toggleModal(modalSlug)}\n      >\n        {t('version:restoreThisVersion')}\n      </Pill>\n      <Modal className={`${baseClass}__modal`} slug={modalSlug}>\n        <MinimalTemplate className={`${baseClass}__modal-template`}>\n          <h1>{t('version:confirmVersionRestoration')}</h1>\n          <p>{restoreMessage}</p>\n          <Button\n            buttonStyle=\"secondary\"\n            onClick={processing ? undefined : () => toggleModal(modalSlug)}\n            type=\"button\"\n          >\n            {t('general:cancel')}\n          </Button>\n          <Button onClick={processing ? undefined : handleRestore}>\n            {processing ? t('version:restoring') : t('general:confirm')}\n          </Button>\n        </MinimalTemplate>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Restore\n"],"names":["getTranslation","Button","Modal","Pill","useConfig","useModal","useTranslation","requests","useRouter","React","Fragment","useCallback","useState","toast","MinimalTemplate","baseClass","modalSlug","Restore","className","collectionSlug","globalSlug","label","originalDocID","versionDate","versionID","routes","admin","api","serverURL","toggleModal","processing","setProcessing","router","i18n","t","restoreMessage","fetchURL","redirectURL","handleRestore","res","post","headers","language","status","json","success","message","push","error","filter","Boolean","join","onClick","slug","h1","p","buttonStyle","undefined","type"],"mappings":"AAAA;;AACA,SAASA,cAAc,QAAQ,2BAA0B;AACzD,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,iBAAgB;AACzF,SAASC,QAAQ,QAAQ,wBAAuB;AAChD,SAASC,SAAS,QAAQ,qBAAoB;AAC9C,OAAOC,SAASC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,QAAO;AAC9D,SAASC,KAAK,QAAQ,SAAQ;AAI9B,SAASC,eAAe,QAAQ,sCAAqC;AAGrE,MAAMC,YAAY;AAClB,MAAMC,YAAY;AAElB,MAAMC,UAA2B,CAAC,EAChCC,SAAS,EACTC,cAAc,EACdC,UAAU,EACVC,KAAK,EACLC,aAAa,EACbC,WAAW,EACXC,SAAS,EACV;IACC,MAAM,EACJC,QAAQ,EAAEC,KAAK,EAAEC,GAAG,EAAE,EACtBC,SAAS,EACV,GAAGxB;IACJ,MAAM,EAAEyB,WAAW,EAAE,GAAGxB;IACxB,MAAM,CAACyB,YAAYC,cAAc,GAAGnB,SAAS;IAC7C,MAAMoB,SAASxB;IACf,MAAM,EAAEyB,IAAI,EAAEC,CAAC,EAAE,GAAG5B;IAEpB,MAAM6B,iBAAiBD,EAAE,gCAAgC;QACvDb,OAAOrB,eAAeqB,OAAOY;QAC7BV;IACF;IAEA,IAAIa,WAAW,CAAC,EAAER,UAAU,EAAED,IAAI,CAAC;IACnC,IAAIU;IAEJ,IAAIlB,gBAAgB;QAClBiB,WAAW,CAAC,EAAEA,SAAS,CAAC,EAAEjB,eAAe,UAAU,EAAEK,UAAU,CAAC;QAChEa,cAAc,CAAC,EAAEX,MAAM,aAAa,EAAEP,eAAe,CAAC,EAAEG,cAAc,CAAC;IACzE;IAEA,IAAIF,YAAY;QACdgB,WAAW,CAAC,EAAEA,SAAS,SAAS,EAAEhB,WAAW,UAAU,EAAEI,UAAU,CAAC;QACpEa,cAAc,CAAC,EAAEX,MAAM,SAAS,EAAEN,WAAW,CAAC;IAChD;IAEA,MAAMkB,gBAAgB3B,YAAY;QAChCoB,cAAc;QAEd,MAAMQ,MAAM,MAAMhC,SAASiC,IAAI,CAACJ,UAAU;YACxCK,SAAS;gBACP,mBAAmBR,KAAKS,QAAQ;YAClC;QACF;QAEA,IAAIH,IAAII,MAAM,KAAK,KAAK;YACtB,MAAMC,OAAO,MAAML,IAAIK,IAAI;YAC3B/B,MAAMgC,OAAO,CAACD,KAAKE,OAAO;YAC1Bd,OAAOe,IAAI,CAACV;QACd,OAAO;YACLxB,MAAMmC,KAAK,CAACd,EAAE;QAChB;IACF,GAAG;QAACE;QAAUC;QAAaH;QAAGD;QAAMD;KAAO;IAE3C,qBACE,MAACtB;;0BACC,KAACP;gBACCe,WAAW;oBAACH;oBAAWG;iBAAU,CAAC+B,MAAM,CAACC,SAASC,IAAI,CAAC;gBACvDC,SAAS,IAAMvB,YAAYb;0BAE1BkB,EAAE;;0BAEL,KAAChC;gBAAMgB,WAAW,CAAC,EAAEH,UAAU,OAAO,CAAC;gBAAEsC,MAAMrC;0BAC7C,cAAA,MAACF;oBAAgBI,WAAW,CAAC,EAAEH,UAAU,gBAAgB,CAAC;;sCACxD,KAACuC;sCAAIpB,EAAE;;sCACP,KAACqB;sCAAGpB;;sCACJ,KAAClC;4BACCuD,aAAY;4BACZJ,SAAStB,aAAa2B,YAAY,IAAM5B,YAAYb;4BACpD0C,MAAK;sCAEJxB,EAAE;;sCAEL,KAACjC;4BAAOmD,SAAStB,aAAa2B,YAAYnB;sCACvCR,aAAaI,EAAE,uBAAuBA,EAAE;;;;;;;AAMrD;AAEA,eAAejB,QAAO"}