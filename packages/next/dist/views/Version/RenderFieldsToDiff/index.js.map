{"version":3,"sources":["../../../../src/views/Version/RenderFieldsToDiff/index.tsx"],"sourcesContent":["'use client'\nimport type { DiffMethod } from 'react-diff-viewer-continued'\n\nimport React from 'react'\n\nimport type { FieldDiffProps, Props } from './types.js'\n\nimport Nested from './fields/Nested/index.js'\nimport { diffMethods } from './fields/diffMethods.js'\nimport './index.scss'\n\nconst baseClass = 'render-field-diffs'\n\nconst RenderFieldsToDiff: React.FC<Props> = ({\n  comparison,\n  diffComponents,\n  fieldMap,\n  fieldPermissions,\n  i18n,\n  locales,\n  version,\n}) => {\n  return (\n    <div className={baseClass}>\n      {fieldMap?.map((field, i) => {\n        if ('name' in field && field.name === 'id') return null\n\n        const Component = diffComponents[field.type]\n\n        const isRichText = field.type === 'richText'\n        const diffMethod: DiffMethod = diffMethods[field.type] || 'CHARS'\n\n        if (Component) {\n          if (field.isFieldAffectingData && 'name' in field) {\n            const fieldName = field.name\n            const valueIsObject = field.type === 'code' || field.type === 'json'\n\n            const versionValue = valueIsObject\n              ? JSON.stringify(version?.[fieldName])\n              : version?.[fieldName]\n\n            const comparisonValue = valueIsObject\n              ? JSON.stringify(comparison?.[fieldName])\n              : comparison?.[fieldName]\n\n            const hasPermission = fieldPermissions?.[fieldName]?.read?.permission\n\n            const subFieldPermissions = fieldPermissions?.[fieldName]?.fields\n\n            if (hasPermission === false) return null\n\n            const baseCellProps: FieldDiffProps = {\n              comparison: comparisonValue,\n              diffComponents,\n              diffMethod,\n              field,\n              fieldMap:\n                'fieldMap' in field.fieldComponentProps\n                  ? field.fieldComponentProps?.fieldMap\n                  : fieldMap,\n              fieldPermissions: subFieldPermissions,\n              i18n,\n              isRichText,\n              locales,\n              version: versionValue,\n            }\n\n            if (field.localized) {\n              return (\n                <div className={`${baseClass}__field`} key={i}>\n                  {locales.map((locale, index) => {\n                    const versionLocaleValue = versionValue?.[locale]\n                    const comparisonLocaleValue = comparisonValue?.[locale]\n\n                    const cellProps = {\n                      ...baseCellProps,\n                      comparison: comparisonLocaleValue,\n                      version: versionLocaleValue,\n                    }\n\n                    return (\n                      <div className={`${baseClass}__locale`} key={[locale, index].join('-')}>\n                        <div className={`${baseClass}__locale-value`}>\n                          <Component {...cellProps} locale={locale} />\n                        </div>\n                      </div>\n                    )\n                  })}\n                </div>\n              )\n            }\n\n            return (\n              <div className={`${baseClass}__field`} key={i}>\n                <Component {...baseCellProps} />\n              </div>\n            )\n          }\n\n          if (field.type === 'tabs' && 'fieldMap' in field.fieldComponentProps) {\n            const Tabs = diffComponents.tabs\n\n            return (\n              <Tabs\n                comparison={comparison}\n                diffComponents={diffComponents}\n                field={field}\n                fieldMap={field.fieldComponentProps.fieldMap}\n                i18n={i18n}\n                key={i}\n                locales={locales}\n                version={version}\n              />\n            )\n          }\n\n          // At this point, we are dealing with a `row`, etc\n          if ('fieldMap' in field.fieldComponentProps) {\n            return (\n              <Nested\n                comparison={comparison}\n                diffComponents={diffComponents}\n                disableGutter\n                field={field}\n                fieldMap={field.fieldComponentProps.fieldMap}\n                i18n={i18n}\n                key={i}\n                locales={locales}\n                permissions={fieldPermissions}\n                version={version}\n              />\n            )\n          }\n        }\n\n        return null\n      })}\n    </div>\n  )\n}\n\nexport default RenderFieldsToDiff\n"],"names":["React","Nested","diffMethods","baseClass","RenderFieldsToDiff","comparison","diffComponents","fieldMap","fieldPermissions","i18n","locales","version","div","className","map","field","i","name","Component","type","isRichText","diffMethod","isFieldAffectingData","fieldName","valueIsObject","versionValue","JSON","stringify","comparisonValue","hasPermission","read","permission","subFieldPermissions","fields","baseCellProps","fieldComponentProps","localized","locale","index","versionLocaleValue","comparisonLocaleValue","cellProps","join","Tabs","tabs","disableGutter","permissions"],"mappings":"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"}