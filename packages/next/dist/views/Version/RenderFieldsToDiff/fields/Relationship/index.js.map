{"version":3,"sources":["../../../../../../src/views/Version/RenderFieldsToDiff/fields/Relationship/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientCollectionConfig } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { type MappedField, useConfig } from '@payloadcms/ui'\nimport { fieldAffectsData, fieldIsPresentationalOnly } from 'payload/shared'\nimport React from 'react'\nimport ReactDiffViewerImport from 'react-diff-viewer-continued'\n\nimport type { Props } from '../types.js'\n\nimport Label from '../../Label/index.js'\nimport { diffStyles } from '../styles.js'\nimport './index.scss'\n\nconst ReactDiffViewer = (ReactDiffViewerImport.default ||\n  ReactDiffViewerImport) as unknown as typeof ReactDiffViewerImport.default\n\nconst baseClass = 'relationship-diff'\n\ntype RelationshipValue = Record<string, any>\n\nconst generateLabelFromValue = (\n  collections: ClientCollectionConfig[],\n  field: MappedField,\n  locale: string,\n  value: { relationTo: string; value: RelationshipValue } | RelationshipValue,\n): string => {\n  let relation: string\n  let relatedDoc: RelationshipValue\n  let valueToReturn = '' as any\n\n  const relationTo =\n    'relationTo' in field.fieldComponentProps ? field.fieldComponentProps.relationTo : undefined\n\n  if (value === null || typeof value === 'undefined') {\n    return String(value)\n  }\n\n  if (Array.isArray(relationTo)) {\n    if (typeof value === 'object') {\n      relation = value.relationTo\n      relatedDoc = value.value\n    }\n  } else {\n    relation = relationTo\n    relatedDoc = value\n  }\n\n  const relatedCollection = collections.find((c) => c.slug === relation)\n\n  if (relatedCollection) {\n    const useAsTitle = relatedCollection?.admin?.useAsTitle\n    const useAsTitleField = relatedCollection.fields.find(\n      (f) => fieldAffectsData(f) && !fieldIsPresentationalOnly(f) && f.name === useAsTitle,\n    )\n    let titleFieldIsLocalized = false\n\n    if (useAsTitleField && fieldAffectsData(useAsTitleField))\n      titleFieldIsLocalized = useAsTitleField.localized\n\n    if (typeof relatedDoc?.[useAsTitle] !== 'undefined') {\n      valueToReturn = relatedDoc[useAsTitle]\n    } else if (typeof relatedDoc?.id !== 'undefined') {\n      valueToReturn = relatedDoc.id\n    }\n\n    if (typeof valueToReturn === 'object' && titleFieldIsLocalized) {\n      valueToReturn = valueToReturn[locale]\n    }\n  }\n\n  return valueToReturn\n}\n\nconst Relationship: React.FC<Props> = ({ comparison, field, i18n, locale, version }) => {\n  let placeholder = ''\n\n  const { collections } = useConfig()\n\n  if (version === comparison) placeholder = `[${i18n.t('general:noValue')}]`\n\n  let versionToRender = version\n  let comparisonToRender = comparison\n\n  if ('hasMany' in field && field.hasMany) {\n    if (Array.isArray(version))\n      versionToRender = version\n        .map((val) => generateLabelFromValue(collections, field, locale, val))\n        .join(', ')\n    if (Array.isArray(comparison))\n      comparisonToRender = comparison\n        .map((val) => generateLabelFromValue(collections, field, locale, val))\n        .join(', ')\n  } else {\n    versionToRender = generateLabelFromValue(collections, field, locale, version)\n    comparisonToRender = generateLabelFromValue(collections, field, locale, comparison)\n  }\n\n  const label =\n    'label' in field.fieldComponentProps &&\n    typeof field.fieldComponentProps.label !== 'boolean' &&\n    typeof field.fieldComponentProps.label !== 'function'\n      ? field.fieldComponentProps.label\n      : ''\n\n  return (\n    <div className={baseClass}>\n      <Label>\n        {locale && <span className={`${baseClass}__locale-label`}>{locale}</span>}\n        {getTranslation(label, i18n)}\n      </Label>\n      <ReactDiffViewer\n        hideLineNumbers\n        newValue={typeof versionToRender !== 'undefined' ? String(versionToRender) : placeholder}\n        oldValue={\n          typeof comparisonToRender !== 'undefined' ? String(comparisonToRender) : placeholder\n        }\n        showDiffOnly={false}\n        splitView\n        styles={diffStyles}\n      />\n    </div>\n  )\n}\n\nexport default Relationship\n"],"names":["getTranslation","useConfig","fieldAffectsData","fieldIsPresentationalOnly","React","ReactDiffViewerImport","Label","diffStyles","ReactDiffViewer","default","baseClass","generateLabelFromValue","collections","field","locale","value","relation","relatedDoc","valueToReturn","relationTo","fieldComponentProps","undefined","String","Array","isArray","relatedCollection","find","c","slug","useAsTitle","admin","useAsTitleField","fields","f","name","titleFieldIsLocalized","localized","id","Relationship","comparison","i18n","version","placeholder","t","versionToRender","comparisonToRender","hasMany","map","val","join","label","div","className","span","hideLineNumbers","newValue","oldValue","showDiffOnly","splitView","styles"],"mappings":"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"}