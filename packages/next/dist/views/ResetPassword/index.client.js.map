{"version":3,"sources":["../../../src/views/ResetPassword/index.client.tsx"],"sourcesContent":["'use client'\nimport type { FormState } from 'payload'\n\nimport {\n  ConfirmPasswordField,\n  Form,\n  FormSubmit,\n  HiddenField,\n  PasswordField,\n  useAuth,\n  useConfig,\n  useFormFields,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { useRouter } from 'next/navigation.js'\nimport React from 'react'\nimport { toast } from 'sonner'\n\ntype Args = {\n  token: string\n}\n\nconst initialState: FormState = {\n  'confirm-password': {\n    initialValue: '',\n    valid: false,\n    value: '',\n  },\n  password: {\n    initialValue: '',\n    valid: false,\n    value: '',\n  },\n}\n\nexport const ResetPasswordClient: React.FC<Args> = ({ token }) => {\n  const i18n = useTranslation()\n  const {\n    admin: { user: userSlug },\n    routes: { admin, api },\n    serverURL,\n  } = useConfig()\n\n  const history = useRouter()\n\n  const { fetchFullUser } = useAuth()\n\n  const onSuccess = React.useCallback(\n    async (data) => {\n      if (data.token) {\n        await fetchFullUser()\n        history.push(`${admin}`)\n      } else {\n        history.push(`${admin}/login`)\n        toast.success(i18n.t('general:updatedSuccessfully'))\n      }\n    },\n    [fetchFullUser, history, admin, i18n],\n  )\n\n  return (\n    <Form\n      action={`${serverURL}${api}/${userSlug}/reset-password`}\n      initialState={initialState}\n      method=\"POST\"\n      onSuccess={onSuccess}\n    >\n      <PasswordToConfirm />\n      <ConfirmPasswordField />\n      <HiddenField forceUsePathFromProps name=\"token\" value={token} />\n      <FormSubmit>{i18n.t('authentication:resetPassword')}</FormSubmit>\n    </Form>\n  )\n}\n\nconst PasswordToConfirm = () => {\n  const { t } = useTranslation()\n  const { value: confirmValue } = useFormFields(\n    ([fields]) => (fields && fields?.['confirm-password']) || null,\n  )\n\n  const validate = React.useCallback(\n    (value: string) => {\n      if (!value) {\n        return t('validation:required')\n      }\n\n      if (value === confirmValue) {\n        return true\n      }\n\n      return t('fields:passwordsDoNotMatch')\n    },\n    [confirmValue, t],\n  )\n\n  return (\n    <PasswordField\n      autoComplete=\"off\"\n      label={t('authentication:newPassword')}\n      name=\"password\"\n      required\n      validate={validate}\n    />\n  )\n}\n"],"names":["ConfirmPasswordField","Form","FormSubmit","HiddenField","PasswordField","useAuth","useConfig","useFormFields","useTranslation","useRouter","React","toast","initialState","initialValue","valid","value","password","ResetPasswordClient","token","i18n","admin","user","userSlug","routes","api","serverURL","history","fetchFullUser","onSuccess","useCallback","data","push","success","t","action","method","PasswordToConfirm","forceUsePathFromProps","name","confirmValue","fields","validate","autoComplete","label","required"],"mappings":"AAAA;;AAGA,SACEA,oBAAoB,EACpBC,IAAI,EACJC,UAAU,EACVC,WAAW,EACXC,aAAa,EACbC,OAAO,EACPC,SAAS,EACTC,aAAa,EACbC,cAAc,QACT,iBAAgB;AACvB,SAASC,SAAS,QAAQ,qBAAoB;AAC9C,OAAOC,WAAW,QAAO;AACzB,SAASC,KAAK,QAAQ,SAAQ;AAM9B,MAAMC,eAA0B;IAC9B,oBAAoB;QAClBC,cAAc;QACdC,OAAO;QACPC,OAAO;IACT;IACAC,UAAU;QACRH,cAAc;QACdC,OAAO;QACPC,OAAO;IACT;AACF;AAEA,OAAO,MAAME,sBAAsC,CAAC,EAAEC,KAAK,EAAE;IAC3D,MAAMC,OAAOX;IACb,MAAM,EACJY,OAAO,EAAEC,MAAMC,QAAQ,EAAE,EACzBC,QAAQ,EAAEH,KAAK,EAAEI,GAAG,EAAE,EACtBC,SAAS,EACV,GAAGnB;IAEJ,MAAMoB,UAAUjB;IAEhB,MAAM,EAAEkB,aAAa,EAAE,GAAGtB;IAE1B,MAAMuB,YAAYlB,MAAMmB,WAAW,CACjC,OAAOC;QACL,IAAIA,KAAKZ,KAAK,EAAE;YACd,MAAMS;YACND,QAAQK,IAAI,CAAC,CAAC,EAAEX,MAAM,CAAC;QACzB,OAAO;YACLM,QAAQK,IAAI,CAAC,CAAC,EAAEX,MAAM,MAAM,CAAC;YAC7BT,MAAMqB,OAAO,CAACb,KAAKc,CAAC,CAAC;QACvB;IACF,GACA;QAACN;QAAeD;QAASN;QAAOD;KAAK;IAGvC,qBACE,MAAClB;QACCiC,QAAQ,CAAC,EAAET,UAAU,EAAED,IAAI,CAAC,EAAEF,SAAS,eAAe,CAAC;QACvDV,cAAcA;QACduB,QAAO;QACPP,WAAWA;;0BAEX,KAACQ;0BACD,KAACpC;0BACD,KAACG;gBAAYkC,qBAAqB;gBAACC,MAAK;gBAAQvB,OAAOG;;0BACvD,KAAChB;0BAAYiB,KAAKc,CAAC,CAAC;;;;AAG1B,EAAC;AAED,MAAMG,oBAAoB;IACxB,MAAM,EAAEH,CAAC,EAAE,GAAGzB;IACd,MAAM,EAAEO,OAAOwB,YAAY,EAAE,GAAGhC,cAC9B,CAAC,CAACiC,OAAO,GAAK,AAACA,UAAUA,QAAQ,CAAC,mBAAmB,IAAK;IAG5D,MAAMC,WAAW/B,MAAMmB,WAAW,CAChC,CAACd;QACC,IAAI,CAACA,OAAO;YACV,OAAOkB,EAAE;QACX;QAEA,IAAIlB,UAAUwB,cAAc;YAC1B,OAAO;QACT;QAEA,OAAON,EAAE;IACX,GACA;QAACM;QAAcN;KAAE;IAGnB,qBACE,KAAC7B;QACCsC,cAAa;QACbC,OAAOV,EAAE;QACTK,MAAK;QACLM,QAAQ;QACRH,UAAUA;;AAGhB"}