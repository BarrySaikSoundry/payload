{"version":3,"sources":["../src/index.tsx"],"sourcesContent":["import type { Config, Field, GroupField, TabsField, TextField } from 'payload'\n\nimport { addDataAndFileToRequest } from '@payloadcms/next/utilities'\nimport { withMergedProps } from '@payloadcms/ui/shared'\nimport { deepMerge } from 'payload/shared'\n\nimport type {\n  GenerateDescription,\n  GenerateImage,\n  GenerateTitle,\n  GenerateURL,\n  SEOPluginConfig,\n} from './types.js'\n\nimport { MetaDescriptionComponent } from './fields/MetaDescription/MetaDescriptionComponent.js'\nimport { MetaImageComponent } from './fields/MetaImage/MetaImageComponent.js'\nimport { MetaTitleComponent } from './fields/MetaTitle/MetaTitleComponent.js'\nimport { OverviewComponent } from './fields/Overview/OverviewComponent.js'\nimport { PreviewComponent } from './fields/Preview/PreviewComponent.js'\nimport { translations } from './translations/index.js'\n\nexport const seoPlugin =\n  (pluginConfig: SEOPluginConfig) =>\n  (config: Config): Config => {\n    const seoFields: GroupField[] = [\n      {\n        name: 'meta',\n        type: 'group',\n        fields: [\n          {\n            name: 'overview',\n            type: 'ui',\n            admin: {\n              components: {\n                Field: OverviewComponent,\n              },\n            },\n            label: 'Overview',\n          },\n          {\n            name: 'title',\n            type: 'text',\n            admin: {\n              components: {\n                Field: withMergedProps({\n                  Component: MetaTitleComponent,\n                  sanitizeServerOnlyProps: true,\n                  toMergeIntoProps: {\n                    hasGenerateTitleFn: typeof pluginConfig?.generateTitle === 'function',\n                  },\n                }),\n              },\n            },\n            localized: true,\n            ...((pluginConfig?.fieldOverrides?.title as unknown as TextField) ?? {}),\n          },\n          {\n            name: 'description',\n            type: 'textarea',\n            admin: {\n              components: {\n                Field: withMergedProps({\n                  Component: MetaDescriptionComponent,\n                  sanitizeServerOnlyProps: true,\n                  toMergeIntoProps: {\n                    hasGenerateDescriptionFn:\n                      typeof pluginConfig?.generateDescription === 'function',\n                  },\n                }),\n              },\n            },\n            localized: true,\n            ...(pluginConfig?.fieldOverrides?.description ?? {}),\n          },\n          ...(pluginConfig?.uploadsCollection\n            ? [\n                {\n                  name: 'image',\n                  type: 'upload',\n                  admin: {\n                    components: {\n                      Field: withMergedProps({\n                        Component: MetaImageComponent,\n                        sanitizeServerOnlyProps: true,\n                        toMergeIntoProps: {\n                          hasGenerateImageFn: typeof pluginConfig?.generateImage === 'function',\n                        },\n                      }),\n                    },\n                    description:\n                      'Maximum upload file size: 12MB. Recommended file size for images is <500KB.',\n                  },\n                  label: 'Meta Image',\n                  localized: true,\n                  relationTo: pluginConfig?.uploadsCollection,\n                  ...(pluginConfig?.fieldOverrides?.image ?? {}),\n                } as Field,\n              ]\n            : []),\n          ...(pluginConfig?.fields || []),\n          {\n            name: 'preview',\n            type: 'ui',\n            admin: {\n              components: {\n                Field: withMergedProps({\n                  Component: PreviewComponent,\n                  sanitizeServerOnlyProps: true,\n                  toMergeIntoProps: {\n                    hasGenerateURLFn: typeof pluginConfig?.generateURL === 'function',\n                  },\n                }),\n              },\n            },\n            label: 'Preview',\n          },\n        ],\n        interfaceName: pluginConfig.interfaceName,\n        label: 'SEO',\n      },\n    ]\n\n    return {\n      ...config,\n      collections:\n        config.collections?.map((collection) => {\n          const { slug } = collection\n          const isEnabled = pluginConfig?.collections?.includes(slug)\n\n          if (isEnabled) {\n            if (pluginConfig?.tabbedUI) {\n              // prevent issues with auth enabled collections having an email field that shouldn't be moved to the SEO tab\n              const emailField =\n                (collection.auth ||\n                  !(typeof collection.auth === 'object' && collection.auth.disableLocalStrategy)) &&\n                collection.fields?.find((field) => 'name' in field && field.name === 'email')\n              const hasOnlyEmailField = collection.fields?.length === 1 && emailField\n\n              const seoTabs: TabsField[] = hasOnlyEmailField\n                ? [\n                    {\n                      type: 'tabs',\n                      tabs: [\n                        {\n                          fields: seoFields,\n                          label: 'SEO',\n                        },\n                      ],\n                    },\n                  ]\n                : [\n                    {\n                      type: 'tabs',\n                      tabs: [\n                        // append a new tab onto the end of the tabs array, if there is one at the first index\n                        // if needed, create a new `Content` tab in the first index for this collection's base fields\n                        ...(collection?.fields?.[0]?.type === 'tabs' &&\n                        collection?.fields?.[0]?.tabs\n                          ? collection.fields[0].tabs\n                          : [\n                              {\n                                fields: [\n                                  ...(emailField\n                                    ? collection.fields.filter(\n                                        (field) => 'name' in field && field.name !== 'email',\n                                      )\n                                    : collection.fields),\n                                ],\n                                label: collection?.labels?.singular || 'Content',\n                              },\n                            ]),\n                        {\n                          fields: seoFields,\n                          label: 'SEO',\n                        },\n                      ],\n                    },\n                  ]\n\n              return {\n                ...collection,\n                fields: [\n                  ...(emailField ? [emailField] : []),\n                  ...seoTabs,\n                  ...(collection?.fields?.[0]?.type === 'tabs' ? collection.fields.slice(1) : []),\n                ],\n              }\n            }\n\n            return {\n              ...collection,\n              fields: [...(collection?.fields || []), ...seoFields],\n            }\n          }\n\n          return collection\n        }) || [],\n      endpoints: [\n        ...(config.endpoints ?? []),\n        {\n          handler: async (req) => {\n            await addDataAndFileToRequest(req)\n            req.t\n            const result = pluginConfig.generateTitle\n              ? await pluginConfig.generateTitle(\n                  req.data as unknown as Parameters<GenerateTitle>[0],\n                )\n              : ''\n            return new Response(JSON.stringify({ result }), { status: 200 })\n          },\n          method: 'post',\n          path: '/plugin-seo/generate-title',\n        },\n        {\n          handler: async (req) => {\n            await addDataAndFileToRequest(req)\n            const result = pluginConfig.generateDescription\n              ? await pluginConfig.generateDescription(\n                  req.data as unknown as Parameters<GenerateDescription>[0],\n                )\n              : ''\n            return new Response(JSON.stringify({ result }), { status: 200 })\n          },\n          method: 'post',\n          path: '/plugin-seo/generate-description',\n        },\n        {\n          handler: async (req) => {\n            await addDataAndFileToRequest(req)\n            const result = pluginConfig.generateURL\n              ? await pluginConfig.generateURL(req.data as unknown as Parameters<GenerateURL>[0])\n              : ''\n            return new Response(JSON.stringify({ result }), { status: 200 })\n          },\n          method: 'post',\n          path: '/plugin-seo/generate-url',\n        },\n        {\n          handler: async (req) => {\n            await addDataAndFileToRequest(req)\n            const result = pluginConfig.generateImage\n              ? await pluginConfig.generateImage(\n                  req.data as unknown as Parameters<GenerateImage>[0],\n                )\n              : ''\n            return new Response(result, { status: 200 })\n          },\n          method: 'post',\n          path: '/plugin-seo/generate-image',\n        },\n      ],\n      globals:\n        config.globals?.map((global) => {\n          const { slug } = global\n          const isEnabled = pluginConfig?.globals?.includes(slug)\n\n          if (isEnabled) {\n            if (pluginConfig?.tabbedUI) {\n              const seoTabs: TabsField[] = [\n                {\n                  type: 'tabs',\n                  tabs: [\n                    // append a new tab onto the end of the tabs array, if there is one at the first index\n                    // if needed, create a new `Content` tab in the first index for this global's base fields\n                    ...(global?.fields?.[0].type === 'tabs' && global?.fields?.[0].tabs\n                      ? global.fields[0].tabs\n                      : [\n                          {\n                            fields: [...(global?.fields || [])],\n                            label: global?.label || 'Content',\n                          },\n                        ]),\n                    {\n                      fields: seoFields,\n                      label: 'SEO',\n                    },\n                  ],\n                },\n              ]\n\n              return {\n                ...global,\n                fields: [\n                  ...seoTabs,\n                  ...(global?.fields?.[0].type === 'tabs' ? global.fields.slice(1) : []),\n                ],\n              }\n            }\n\n            return {\n              ...global,\n              fields: [...(global?.fields || []), ...seoFields],\n            }\n          }\n\n          return global\n        }) || [],\n      i18n: {\n        ...config.i18n,\n        translations: {\n          ...deepMerge(translations, config.i18n?.translations),\n        },\n      },\n    }\n  }\n"],"names":["addDataAndFileToRequest","withMergedProps","deepMerge","MetaDescriptionComponent","MetaImageComponent","MetaTitleComponent","OverviewComponent","PreviewComponent","translations","seoPlugin","pluginConfig","config","seoFields","name","type","fields","admin","components","Field","label","Component","sanitizeServerOnlyProps","toMergeIntoProps","hasGenerateTitleFn","generateTitle","localized","fieldOverrides","title","hasGenerateDescriptionFn","generateDescription","description","uploadsCollection","hasGenerateImageFn","generateImage","relationTo","image","hasGenerateURLFn","generateURL","interfaceName","collections","map","collection","slug","isEnabled","includes","tabbedUI","emailField","auth","disableLocalStrategy","find","field","hasOnlyEmailField","length","seoTabs","tabs","filter","labels","singular","slice","endpoints","handler","req","t","result","data","Response","JSON","stringify","status","method","path","globals","global","i18n"],"mappings":"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"}