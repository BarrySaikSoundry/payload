{"version":3,"sources":["../src/types.ts"],"sourcesContent":["import type { DocumentInfoContext } from '@payloadcms/ui'\nimport type { Field, TextField, TextareaField, UploadField } from 'payload'\n\nexport type GenerateTitle<T = any> = (\n  args: { doc: T; locale?: string } & DocumentInfoContext,\n) => Promise<string> | string\n\nexport type GenerateDescription<T = any> = (\n  args: {\n    doc: T\n    locale?: string\n  } & DocumentInfoContext,\n) => Promise<string> | string\n\nexport type GenerateImage<T = any> = (\n  args: { doc: T; locale?: string } & DocumentInfoContext,\n) => Promise<string> | string\n\nexport type GenerateURL<T = any> = (\n  args: { doc: T; locale?: string } & DocumentInfoContext,\n) => Promise<string> | string\n\nexport type SEOPluginConfig = {\n  collections?: string[]\n  fieldOverrides?: {\n    description?: Partial<TextareaField>\n    image?: Partial<UploadField>\n    title?: Partial<TextField>\n  }\n  fields?: Field[]\n  generateDescription?: GenerateDescription\n  generateImage?: GenerateImage\n  generateTitle?: GenerateTitle\n  generateURL?: GenerateURL\n  globals?: string[]\n  interfaceName?: string\n  tabbedUI?: boolean\n  uploadsCollection?: string\n}\n\nexport type Meta = {\n  description?: string\n  image?: any // TODO: type this\n  keywords?: string\n  title?: string\n}\n"],"names":[],"mappings":"AAwCA,WAKC"}