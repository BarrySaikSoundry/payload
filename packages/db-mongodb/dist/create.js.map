{"version":3,"sources":["../src/create.ts"],"sourcesContent":["import type { Create, Document, PayloadRequest } from 'payload'\n\nimport type { MongooseAdapter } from './index.js'\n\nimport { handleError } from './utilities/handleError.js'\nimport { withSession } from './withSession.js'\n\nexport const create: Create = async function create(\n  this: MongooseAdapter,\n  { collection, data, req = {} as PayloadRequest },\n) {\n  const Model = this.collections[collection]\n  const options = await withSession(this, req)\n  let doc\n  try {\n    ;[doc] = await Model.create([data], options)\n  } catch (error) {\n    handleError({ collection, error, req })\n  }\n\n  // doc.toJSON does not do stuff like converting ObjectIds to string, or date strings to date objects. That's why we use JSON.parse/stringify here\n  const result: Document = JSON.parse(JSON.stringify(doc))\n  const verificationToken = doc._verificationToken\n\n  // custom id type reset\n  result.id = result._id\n  if (verificationToken) {\n    result._verificationToken = verificationToken\n  }\n\n  return result\n}\n"],"names":["handleError","withSession","create","collection","data","req","Model","collections","options","doc","error","result","JSON","parse","stringify","verificationToken","_verificationToken","id","_id"],"mappings":"AAIA,SAASA,WAAW,QAAQ,6BAA4B;AACxD,SAASC,WAAW,QAAQ,mBAAkB;AAE9C,OAAO,MAAMC,SAAiB,eAAeA,OAE3C,EAAEC,UAAU,EAAEC,IAAI,EAAEC,MAAM,CAAC,CAAmB,EAAE;IAEhD,MAAMC,QAAQ,IAAI,CAACC,WAAW,CAACJ,WAAW;IAC1C,MAAMK,UAAU,MAAMP,YAAY,IAAI,EAAEI;IACxC,IAAII;IACJ,IAAI;QACD,CAACA,IAAI,GAAG,MAAMH,MAAMJ,MAAM,CAAC;YAACE;SAAK,EAAEI;IACtC,EAAE,OAAOE,OAAO;QACdV,YAAY;YAAEG;YAAYO;YAAOL;QAAI;IACvC;IAEA,iJAAiJ;IACjJ,MAAMM,SAAmBC,KAAKC,KAAK,CAACD,KAAKE,SAAS,CAACL;IACnD,MAAMM,oBAAoBN,IAAIO,kBAAkB;IAEhD,uBAAuB;IACvBL,OAAOM,EAAE,GAAGN,OAAOO,GAAG;IACtB,IAAIH,mBAAmB;QACrBJ,OAAOK,kBAAkB,GAAGD;IAC9B;IAEA,OAAOJ;AACT,EAAC"}