{"version":3,"sources":["../../src/utilities/getFormState.ts"],"sourcesContent":["import type { FormState, SanitizedConfig } from 'payload'\n\nimport type { BuildFormStateArgs } from '../forms/buildStateFromSchema/index.js'\n\nexport const getFormState = async (args: {\n  apiRoute: SanitizedConfig['routes']['api']\n  body: BuildFormStateArgs\n  onError?: (data?: any) => Promise<void> | void\n  serverURL: SanitizedConfig['serverURL']\n  signal?: AbortSignal\n  token?: string\n}): Promise<FormState> => {\n  const { apiRoute, body, onError, serverURL, signal, token } = args\n\n  const res = await fetch(`${serverURL}${apiRoute}/form-state`, {\n    body: JSON.stringify(body),\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      ...(token ? { Authorization: `JWT ${token}` } : {}),\n    },\n    method: 'POST',\n    signal,\n  })\n\n  const json = (await res.json()) as FormState\n\n  if (res.ok) {\n    return json\n  } else {\n    if (typeof onError === 'function') {\n      void onError(json)\n    }\n  }\n\n  return body?.formState\n}\n"],"names":["getFormState","args","apiRoute","body","onError","serverURL","signal","token","res","fetch","JSON","stringify","credentials","headers","Authorization","method","json","ok","formState"],"mappings":"AAIA,OAAO,MAAMA,eAAe,OAAOC;IAQjC,MAAM,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAE,GAAGN;IAE9D,MAAMO,MAAM,MAAMC,MAAM,CAAC,EAAEJ,UAAU,EAAEH,SAAS,WAAW,CAAC,EAAE;QAC5DC,MAAMO,KAAKC,SAAS,CAACR;QACrBS,aAAa;QACbC,SAAS;YACP,gBAAgB;YAChB,GAAIN,QAAQ;gBAAEO,eAAe,CAAC,IAAI,EAAEP,MAAM,CAAC;YAAC,IAAI,CAAC,CAAC;QACpD;QACAQ,QAAQ;QACRT;IACF;IAEA,MAAMU,OAAQ,MAAMR,IAAIQ,IAAI;IAE5B,IAAIR,IAAIS,EAAE,EAAE;QACV,OAAOD;IACT,OAAO;QACL,IAAI,OAAOZ,YAAY,YAAY;YACjC,KAAKA,QAAQY;QACf;IACF;IAEA,OAAOb,MAAMe;AACf,EAAC"}