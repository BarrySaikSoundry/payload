{"version":3,"sources":["../../../src/forms/useField/types.ts"],"sourcesContent":["import type { ClientValidate, FieldPermissions, FilterOptionsResult, Row } from 'payload'\n\nexport type Options = {\n  disableFormData?: boolean\n  hasRows?: boolean\n  /**\n   * If you do not provide a `path` or a `name`, this hook will look for one using the `useFieldPath` hook.\n   **/\n  path?: string\n  validate?: ClientValidate\n}\n\nexport type FieldType<T> = {\n  errorMessage?: string\n  errorPaths?: string[]\n  filterOptions?: FilterOptionsResult\n  formInitializing: boolean\n  formProcessing: boolean\n  formSubmitted: boolean\n  initialValue?: T\n  path: string\n  permissions: FieldPermissions\n  readOnly?: boolean\n  rows?: Row[]\n  schemaPath: string\n  setValue: (val: unknown, disableModifyingForm?: boolean) => void\n  showError: boolean\n  valid?: boolean\n  value: T\n}\n"],"names":[],"mappings":"AAYA,WAiBC"}