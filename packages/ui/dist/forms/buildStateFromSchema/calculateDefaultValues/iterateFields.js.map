{"version":3,"sources":["../../../../src/forms/buildStateFromSchema/calculateDefaultValues/iterateFields.ts"],"sourcesContent":["import type { Data, Field, TabAsField, User } from 'payload'\n\nimport { defaultValuePromise } from './promise.js'\n\ntype Args<T> = {\n  data: T\n  fields: (Field | TabAsField)[]\n  id?: number | string\n  locale: string | undefined\n  siblingData: Data\n  user: User\n}\n\nexport const iterateFields = async <T>({\n  id,\n  data,\n  fields,\n  locale,\n  siblingData,\n  user,\n}: Args<T>): Promise<void> => {\n  const promises = []\n  fields.forEach((field) => {\n    promises.push(\n      defaultValuePromise({\n        id,\n        data,\n        field,\n        locale,\n        siblingData,\n        user,\n      }),\n    )\n  })\n  await Promise.all(promises)\n}\n"],"names":["defaultValuePromise","iterateFields","id","data","fields","locale","siblingData","user","promises","forEach","field","push","Promise","all"],"mappings":"AAEA,SAASA,mBAAmB,QAAQ,eAAc;AAWlD,OAAO,MAAMC,gBAAgB,OAAU,EACrCC,EAAE,EACFC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,WAAW,EACXC,IAAI,EACI;IACR,MAAMC,WAAW,EAAE;IACnBJ,OAAOK,OAAO,CAAC,CAACC;QACdF,SAASG,IAAI,CACXX,oBAAoB;YAClBE;YACAC;YACAO;YACAL;YACAC;YACAC;QACF;IAEJ;IACA,MAAMK,QAAQC,GAAG,CAACL;AACpB,EAAC"}