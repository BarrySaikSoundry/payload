{"version":3,"sources":["../../../src/forms/buildStateFromSchema/iterateFields.ts"],"sourcesContent":["import type {\n  Data,\n  DocumentPreferences,\n  Field as FieldSchema,\n  FormState,\n  PayloadRequest,\n} from 'payload'\n\nimport { fieldIsPresentationalOnly } from 'payload/shared'\n\nimport type { AddFieldStatePromiseArgs } from './addFieldStatePromise.js'\n\nimport { addFieldStatePromise } from './addFieldStatePromise.js'\n\ntype Args = {\n  addErrorPathToParent: (path: string) => void\n  /**\n   * if any parents is localized, then the field is localized. @default false\n   */\n  anyParentLocalized?: boolean\n  data: Data\n  fields: FieldSchema[]\n  filter?: (args: AddFieldStatePromiseArgs) => boolean\n  /**\n   * Force the value of fields like arrays or blocks to be the full value instead of the length @default false\n   */\n  forceFullValue?: boolean\n  fullData: Data\n  id?: number | string\n  /**\n   * Whether the field schema should be included in the state. @default false\n   */\n  includeSchema?: boolean\n  /**\n   * Whether to omit parent fields in the state. @default false\n   */\n  omitParents?: boolean\n  /**\n   * operation is only needed for validation\n   */\n  operation: 'create' | 'update'\n  parentPassesCondition?: boolean\n  /**\n   * The initial path of the field. @default ''\n   */\n  path?: string\n  preferences?: DocumentPreferences\n  req: PayloadRequest\n  /**\n   * Whether to skip checking the field's condition. @default false\n   */\n  skipConditionChecks?: boolean\n  /**\n   * Whether to skip validating the field. @default false\n   */\n  skipValidation?: boolean\n  state?: FormState\n}\n\n/**\n * Flattens the fields schema and fields data\n */\nexport const iterateFields = async ({\n  id,\n  addErrorPathToParent: addErrorPathToParentArg,\n  anyParentLocalized = false,\n  data,\n  fields,\n  filter,\n  forceFullValue = false,\n  fullData,\n  includeSchema = false,\n  omitParents = false,\n  operation,\n  parentPassesCondition = true,\n  path = '',\n  preferences,\n  req,\n  skipConditionChecks = false,\n  skipValidation = false,\n  state = {},\n}: Args): Promise<void> => {\n  const promises = []\n\n  fields.forEach((field, fieldIndex) => {\n    if (!fieldIsPresentationalOnly(field) && !field?.admin?.disabled) {\n      let passesCondition = true\n      if (!skipConditionChecks) {\n        passesCondition = Boolean(\n          (field?.admin?.condition\n            ? Boolean(field.admin.condition(fullData || {}, data || {}, { user: req.user }))\n            : true) && parentPassesCondition,\n        )\n      }\n\n      promises.push(\n        addFieldStatePromise({\n          id,\n          addErrorPathToParent: addErrorPathToParentArg,\n          anyParentLocalized,\n          data,\n          field,\n          fieldIndex,\n          filter,\n          forceFullValue,\n          fullData,\n          includeSchema,\n          omitParents,\n          operation,\n          passesCondition,\n          path,\n          preferences,\n          req,\n          skipConditionChecks,\n          skipValidation,\n          state,\n        }),\n      )\n    }\n  })\n\n  await Promise.all(promises)\n}\n"],"names":["fieldIsPresentationalOnly","addFieldStatePromise","iterateFields","id","addErrorPathToParent","addErrorPathToParentArg","anyParentLocalized","data","fields","filter","forceFullValue","fullData","includeSchema","omitParents","operation","parentPassesCondition","path","preferences","req","skipConditionChecks","skipValidation","state","promises","forEach","field","fieldIndex","admin","disabled","passesCondition","Boolean","condition","user","push","Promise","all"],"mappings":"AAQA,SAASA,yBAAyB,QAAQ,iBAAgB;AAI1D,SAASC,oBAAoB,QAAQ,4BAA2B;AA+ChE;;CAEC,GACD,OAAO,MAAMC,gBAAgB,OAAO,EAClCC,EAAE,EACFC,sBAAsBC,uBAAuB,EAC7CC,qBAAqB,KAAK,EAC1BC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,iBAAiB,KAAK,EACtBC,QAAQ,EACRC,gBAAgB,KAAK,EACrBC,cAAc,KAAK,EACnBC,SAAS,EACTC,wBAAwB,IAAI,EAC5BC,OAAO,EAAE,EACTC,WAAW,EACXC,GAAG,EACHC,sBAAsB,KAAK,EAC3BC,iBAAiB,KAAK,EACtBC,QAAQ,CAAC,CAAC,EACL;IACL,MAAMC,WAAW,EAAE;IAEnBd,OAAOe,OAAO,CAAC,CAACC,OAAOC;QACrB,IAAI,CAACzB,0BAA0BwB,UAAU,CAACA,OAAOE,OAAOC,UAAU;YAChE,IAAIC,kBAAkB;YACtB,IAAI,CAACT,qBAAqB;gBACxBS,kBAAkBC,QAChB,AAACL,CAAAA,OAAOE,OAAOI,YACXD,QAAQL,MAAME,KAAK,CAACI,SAAS,CAACnB,YAAY,CAAC,GAAGJ,QAAQ,CAAC,GAAG;oBAAEwB,MAAMb,IAAIa,IAAI;gBAAC,MAC3E,IAAG,KAAMhB;YAEjB;YAEAO,SAASU,IAAI,CACX/B,qBAAqB;gBACnBE;gBACAC,sBAAsBC;gBACtBC;gBACAC;gBACAiB;gBACAC;gBACAhB;gBACAC;gBACAC;gBACAC;gBACAC;gBACAC;gBACAc;gBACAZ;gBACAC;gBACAC;gBACAC;gBACAC;gBACAC;YACF;QAEJ;IACF;IAEA,MAAMY,QAAQC,GAAG,CAACZ;AACpB,EAAC"}