{"version":3,"sources":["../../../src/elements/UnpublishMany/index.tsx"],"sourcesContent":["'use client'\nimport { Modal, useModal } from '@faceless-ui/modal'\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter } from 'next/navigation.js'\nimport React, { useCallback, useState } from 'react'\n\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useRouteCache } from '../../providers/RouteCache/index.js'\nimport { useSearchParams } from '../../providers/SearchParams/index.js'\nimport { SelectAllStatus, useSelection } from '../../providers/Selection/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { requests } from '../../utilities/api.js'\nimport { Button } from '../Button/index.js'\nimport { Pill } from '../Pill/index.js'\nimport './index.scss'\n\nconst baseClass = 'unpublish-many'\n\nimport type { ClientCollectionConfig } from 'payload'\n\nimport { toast } from 'sonner'\n\nexport type UnpublishManyProps = {\n  collection: ClientCollectionConfig\n}\n\nexport const UnpublishMany: React.FC<UnpublishManyProps> = (props) => {\n  const { collection: { slug, labels: { plural }, versions } = {} } = props\n\n  const {\n    routes: { api },\n    serverURL,\n  } = useConfig()\n  const { permissions } = useAuth()\n  const { toggleModal } = useModal()\n  const { i18n, t } = useTranslation()\n  const { getQueryParams, selectAll } = useSelection()\n  const [submitted, setSubmitted] = useState(false)\n  const { stringifyParams } = useSearchParams()\n  const router = useRouter()\n  const { clearRouteCache } = useRouteCache()\n\n  const collectionPermissions = permissions?.collections?.[slug]\n  const hasPermission = collectionPermissions?.update?.permission\n\n  const modalSlug = `unpublish-${slug}`\n\n  const addDefaultError = useCallback(() => {\n    toast.error(t('error:unknown'))\n  }, [t])\n\n  const handleUnpublish = useCallback(async () => {\n    setSubmitted(true)\n    await requests\n      .patch(`${serverURL}${api}/${slug}${getQueryParams({ _status: { not_equals: 'draft' } })}`, {\n        body: JSON.stringify({\n          _status: 'draft',\n        }),\n        headers: {\n          'Accept-Language': i18n.language,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(async (res) => {\n        try {\n          const json = await res.json()\n          toggleModal(modalSlug)\n          if (res.status < 400) {\n            toast.success(t('general:updatedSuccessfully'))\n            router.replace(\n              stringifyParams({\n                params: {\n                  page: selectAll ? '1' : undefined,\n                },\n              }),\n            )\n            clearRouteCache()\n            return null\n          }\n\n          if (json.errors) {\n            json.errors.forEach((error) => toast.error(error.message))\n          } else {\n            addDefaultError()\n          }\n          return false\n        } catch (e) {\n          return addDefaultError()\n        }\n      })\n  }, [\n    addDefaultError,\n    api,\n    getQueryParams,\n    i18n.language,\n    modalSlug,\n    selectAll,\n    serverURL,\n    slug,\n    t,\n    toggleModal,\n    router,\n    clearRouteCache,\n    stringifyParams,\n  ])\n\n  if (!versions?.drafts || selectAll === SelectAllStatus.None || !hasPermission) {\n    return null\n  }\n\n  return (\n    <React.Fragment>\n      <Pill\n        className={`${baseClass}__toggle`}\n        onClick={() => {\n          setSubmitted(false)\n          toggleModal(modalSlug)\n        }}\n      >\n        {t('version:unpublish')}\n      </Pill>\n      <Modal className={baseClass} slug={modalSlug}>\n        <div className={`${baseClass}__template`}>\n          <h1>{t('version:confirmUnpublish')}</h1>\n          <p>{t('version:aboutToUnpublishSelection', { label: getTranslation(plural, i18n) })}</p>\n          <Button\n            buttonStyle=\"secondary\"\n            id=\"confirm-cancel\"\n            onClick={submitted ? undefined : () => toggleModal(modalSlug)}\n            type=\"button\"\n          >\n            {t('general:cancel')}\n          </Button>\n          <Button id=\"confirm-unpublish\" onClick={submitted ? undefined : handleUnpublish}>\n            {submitted ? t('version:unpublishing') : t('general:confirm')}\n          </Button>\n        </div>\n      </Modal>\n    </React.Fragment>\n  )\n}\n"],"names":["Modal","useModal","getTranslation","useRouter","React","useCallback","useState","useAuth","useConfig","useRouteCache","useSearchParams","SelectAllStatus","useSelection","useTranslation","requests","Button","Pill","baseClass","toast","UnpublishMany","props","collection","slug","labels","plural","versions","routes","api","serverURL","permissions","toggleModal","i18n","t","getQueryParams","selectAll","submitted","setSubmitted","stringifyParams","router","clearRouteCache","collectionPermissions","collections","hasPermission","update","permission","modalSlug","addDefaultError","error","handleUnpublish","patch","_status","not_equals","body","JSON","stringify","headers","language","then","res","json","status","success","replace","params","page","undefined","errors","forEach","message","e","drafts","None","Fragment","className","onClick","div","h1","p","label","buttonStyle","id","type"],"mappings":"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"}