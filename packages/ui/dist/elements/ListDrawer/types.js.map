{"version":3,"sources":["../../../src/elements/ListDrawer/types.ts"],"sourcesContent":["import type { FilterOptionsResult, SanitizedCollectionConfig } from 'payload'\nimport type React from 'react'\nimport type { HTMLAttributes } from 'react'\n\nexport type ListDrawerProps = {\n  collectionSlugs: string[]\n  customHeader?: React.ReactNode\n  drawerSlug?: string\n  filterOptions?: FilterOptionsResult\n  onSelect?: (args: { collectionSlug: SanitizedCollectionConfig['slug']; docID: string }) => void\n  selectedCollection?: string\n}\n\nexport type ListTogglerProps = {\n  children?: React.ReactNode\n  className?: string\n  disabled?: boolean\n  drawerSlug?: string\n} & HTMLAttributes<HTMLButtonElement>\n\nexport type UseListDrawer = (args: {\n  collectionSlugs?: string[]\n  filterOptions?: FilterOptionsResult\n  selectedCollection?: string\n  uploads?: boolean // finds all collections with upload: true\n}) => [\n  React.FC<Pick<ListDrawerProps, 'onSelect'>>, // drawer\n  React.FC<Pick<ListTogglerProps, 'children' | 'className' | 'disabled'>>, // toggler\n  {\n    closeDrawer: () => void\n    drawerDepth: number\n    drawerSlug: string\n    isDrawerOpen: boolean\n    openDrawer: () => void\n    toggleDrawer: () => void\n  },\n]\n"],"names":[],"mappings":"AAoBA,WAgBC"}