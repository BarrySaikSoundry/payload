{"version":3,"sources":["../../../src/elements/ListDrawer/DrawerContent.tsx"],"sourcesContent":["'use client'\nimport type { ClientCollectionConfig, Where } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport { getTranslation } from '@payloadcms/translations'\nimport React, { useCallback, useEffect, useReducer, useState } from 'react'\n\nimport type { ListDrawerProps } from './types.js'\n\nimport { FieldLabel } from '../../fields/FieldLabel/index.js'\nimport { usePayloadAPI } from '../../hooks/usePayloadAPI.js'\nimport { XIcon } from '../../icons/X/index.js'\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useComponentMap } from '../../providers/ComponentMap/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { ListInfoProvider } from '../../providers/ListInfo/index.js'\nimport { ListQueryProvider } from '../../providers/ListQuery/index.js'\nimport { usePreferences } from '../../providers/Preferences/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { useDocumentDrawer } from '../DocumentDrawer/index.js'\nimport { LoadingOverlay } from '../Loading/index.js'\nimport { Pill } from '../Pill/index.js'\nimport { type Option, ReactSelect } from '../ReactSelect/index.js'\nimport { TableColumnsProvider } from '../TableColumns/index.js'\nimport { ViewDescription } from '../ViewDescription/index.js'\nimport { baseClass } from './index.js'\n\nconst hoistQueryParamsToAnd = (where: Where, queryParams: Where) => {\n  if ('and' in where) {\n    where.and.push(queryParams)\n  } else if ('or' in where) {\n    where = {\n      and: [where, queryParams],\n    }\n  } else {\n    where = {\n      and: [where, queryParams],\n    }\n  }\n\n  return where\n}\n\nexport const ListDrawerContent: React.FC<ListDrawerProps> = ({\n  collectionSlugs,\n  customHeader,\n  drawerSlug,\n  filterOptions,\n  onSelect,\n  selectedCollection,\n}) => {\n  const { i18n, t } = useTranslation()\n  const { permissions } = useAuth()\n  const { setPreference } = usePreferences()\n  const { closeModal, isModalOpen } = useModal()\n  const [limit, setLimit] = useState<number>()\n  const [sort, setSort] = useState<string>(null)\n  const [page, setPage] = useState<number>(1)\n  const [where, setWhere] = useState<Where>(null)\n  const [search, setSearch] = useState<string>('')\n\n  const { componentMap } = useComponentMap()\n\n  const {\n    collections,\n    routes: { api },\n    serverURL,\n  } = useConfig()\n\n  const enabledCollectionConfigs = collections.filter(({ slug }) => {\n    return collectionSlugs.includes(slug)\n  })\n\n  const [selectedCollectionConfig, setSelectedCollectionConfig] = useState<ClientCollectionConfig>(\n    () => {\n      return (\n        enabledCollectionConfigs.find(({ slug }) => slug === selectedCollection) ||\n        enabledCollectionConfigs?.[0]\n      )\n    },\n  )\n\n  const { List } = componentMap.collections?.[selectedCollectionConfig?.slug] || {}\n\n  const [selectedOption, setSelectedOption] = useState<Option | Option[]>(() =>\n    selectedCollectionConfig\n      ? {\n          label: getTranslation(selectedCollectionConfig.labels.singular, i18n),\n          value: selectedCollectionConfig.slug,\n        }\n      : undefined,\n  )\n\n  // const [fields, setFields] = useState<Field[]>(() => formatFields(selectedCollectionConfig))\n\n  useEffect(() => {\n    // setFields(formatFields(selectedCollectionConfig))\n  }, [selectedCollectionConfig])\n\n  // allow external control of selected collection, same as the initial state logic above\n  useEffect(() => {\n    if (selectedCollection) {\n      // if passed a selection, find it and check if it's enabled\n      const selectedConfig =\n        enabledCollectionConfigs.find(({ slug }) => slug === selectedCollection) ||\n        enabledCollectionConfigs?.[0]\n      setSelectedCollectionConfig(selectedConfig)\n    }\n  }, [selectedCollection, enabledCollectionConfigs, onSelect, t])\n\n  const preferenceKey = `${selectedCollectionConfig.slug}-list`\n\n  // this is the 'create new' drawer\n  const [DocumentDrawer, DocumentDrawerToggler, { drawerSlug: documentDrawerSlug }] =\n    useDocumentDrawer({\n      collectionSlug: selectedCollectionConfig.slug,\n    })\n\n  useEffect(() => {\n    if (selectedOption && !Array.isArray(selectedOption)) {\n      setSelectedCollectionConfig(\n        enabledCollectionConfigs.find(({ slug }) => selectedOption.value === slug),\n      )\n    }\n  }, [selectedOption, enabledCollectionConfigs])\n\n  const collectionPermissions = permissions?.collections?.[selectedCollectionConfig?.slug]\n  const hasCreatePermission = collectionPermissions?.create?.permission\n\n  // If modal is open, get active page of upload gallery\n  const isOpen = isModalOpen(drawerSlug)\n  const apiURL = isOpen ? `${serverURL}${api}/${selectedCollectionConfig.slug}` : null\n  const [cacheBust, dispatchCacheBust] = useReducer((state) => state + 1, 0) // used to force a re-fetch even when apiURL is unchanged\n  const [{ data, isError, isLoading: isLoadingList }, { setParams }] = usePayloadAPI(apiURL, {})\n  const moreThanOneAvailableCollection = enabledCollectionConfigs.length > 1\n\n  useEffect(() => {\n    const {\n      slug,\n      admin: { listSearchableFields, useAsTitle } = {},\n      versions,\n    } = selectedCollectionConfig\n    const params: {\n      cacheBust?: number\n      draft?: string\n      limit?: number\n      page?: number\n      search?: string\n      sort?: string\n      where?: unknown\n    } = {}\n\n    let copyOfWhere = { ...(where || {}) }\n    const filterOption = filterOptions?.[slug]\n\n    if (filterOptions && typeof filterOption !== 'boolean') {\n      copyOfWhere = hoistQueryParamsToAnd(copyOfWhere, filterOption)\n    }\n\n    if (search) {\n      const searchAsConditions = (listSearchableFields || [useAsTitle]).map((fieldName) => {\n        return {\n          [fieldName]: {\n            like: search,\n          },\n        }\n      }, [])\n\n      if (searchAsConditions.length > 0) {\n        const searchFilter: Where = {\n          or: [...searchAsConditions],\n        }\n\n        copyOfWhere = hoistQueryParamsToAnd(copyOfWhere, searchFilter)\n      }\n    }\n\n    if (page) params.page = page\n    if (sort) params.sort = sort\n    if (cacheBust) params.cacheBust = cacheBust\n    if (copyOfWhere) params.where = copyOfWhere\n    if (versions?.drafts) params.draft = 'true'\n\n    setParams(params)\n  }, [page, sort, where, search, cacheBust, filterOptions, selectedCollectionConfig, t, setParams])\n\n  useEffect(() => {\n    const newPreferences = {\n      limit,\n      sort,\n    }\n\n    void setPreference(preferenceKey, newPreferences, true)\n  }, [sort, limit, setPreference, preferenceKey])\n\n  const onCreateNew = useCallback(\n    ({ doc }) => {\n      if (typeof onSelect === 'function') {\n        onSelect({\n          collectionSlug: selectedCollectionConfig.slug,\n          docID: doc.id,\n        })\n      }\n      dispatchCacheBust()\n      closeModal(documentDrawerSlug)\n      closeModal(drawerSlug)\n    },\n    [closeModal, documentDrawerSlug, drawerSlug, onSelect, selectedCollectionConfig],\n  )\n\n  if (!selectedCollectionConfig || isError) {\n    return null\n  }\n\n  if (isLoadingList) {\n    return <LoadingOverlay />\n  }\n\n  return (\n    <ListInfoProvider\n      Header={\n        <header className={`${baseClass}__header`}>\n          <div className={`${baseClass}__header-wrap`}>\n            <div className={`${baseClass}__header-content`}>\n              <h2 className={`${baseClass}__header-text`}>\n                {!customHeader\n                  ? getTranslation(selectedCollectionConfig?.labels?.plural, i18n)\n                  : customHeader}\n              </h2>\n              {hasCreatePermission && (\n                <DocumentDrawerToggler className={`${baseClass}__create-new-button`}>\n                  <Pill>{t('general:createNew')}</Pill>\n                </DocumentDrawerToggler>\n              )}\n            </div>\n            <button\n              aria-label={t('general:close')}\n              className={`${baseClass}__header-close`}\n              onClick={() => {\n                closeModal(drawerSlug)\n              }}\n              type=\"button\"\n            >\n              <XIcon />\n            </button>\n          </div>\n          {selectedCollectionConfig?.admin?.description && (\n            <div className={`${baseClass}__sub-header`}>\n              <ViewDescription description={selectedCollectionConfig.admin.description} />\n            </div>\n          )}\n          {moreThanOneAvailableCollection && (\n            <div className={`${baseClass}__select-collection-wrap`}>\n              <FieldLabel label={t('upload:selectCollectionToBrowse')} />\n              <ReactSelect\n                className={`${baseClass}__select-collection`}\n                onChange={setSelectedOption} // this is only changing the options which is not rerunning my effect\n                options={enabledCollectionConfigs.map((coll) => ({\n                  label: getTranslation(coll.labels.singular, i18n),\n                  value: coll.slug,\n                }))}\n                value={selectedOption}\n              />\n            </div>\n          )}\n        </header>\n      }\n      collectionConfig={selectedCollectionConfig}\n      collectionSlug={selectedCollectionConfig.slug}\n      hasCreatePermission={hasCreatePermission}\n      newDocumentURL={null}\n    >\n      <ListQueryProvider\n        data={data}\n        defaultLimit={limit || selectedCollectionConfig?.admin?.pagination?.defaultLimit}\n        defaultSort={sort}\n        handlePageChange={setPage}\n        handlePerPageChange={setLimit}\n        handleSearchChange={setSearch}\n        handleSortChange={setSort}\n        handleWhereChange={setWhere}\n        modifySearchParams={false}\n        preferenceKey={preferenceKey}\n      >\n        <TableColumnsProvider\n          cellProps={[\n            {\n              className: `${baseClass}__first-cell`,\n              link: false,\n              onClick: ({ collectionSlug: rowColl, rowData }) => {\n                if (typeof onSelect === 'function') {\n                  onSelect({\n                    collectionSlug: rowColl,\n                    docID: rowData.id as string,\n                  })\n                }\n              },\n            },\n          ]}\n          collectionSlug={selectedCollectionConfig.slug}\n          preferenceKey={preferenceKey}\n        >\n          {List}\n          <DocumentDrawer onSave={onCreateNew} />\n        </TableColumnsProvider>\n      </ListQueryProvider>\n    </ListInfoProvider>\n  )\n}\n"],"names":["useModal","getTranslation","React","useCallback","useEffect","useReducer","useState","FieldLabel","usePayloadAPI","XIcon","useAuth","useComponentMap","useConfig","ListInfoProvider","ListQueryProvider","usePreferences","useTranslation","useDocumentDrawer","LoadingOverlay","Pill","ReactSelect","TableColumnsProvider","ViewDescription","baseClass","hoistQueryParamsToAnd","where","queryParams","and","push","ListDrawerContent","collectionSlugs","customHeader","drawerSlug","filterOptions","onSelect","selectedCollection","i18n","t","permissions","setPreference","closeModal","isModalOpen","limit","setLimit","sort","setSort","page","setPage","setWhere","search","setSearch","componentMap","collections","routes","api","serverURL","enabledCollectionConfigs","filter","slug","includes","selectedCollectionConfig","setSelectedCollectionConfig","find","List","selectedOption","setSelectedOption","label","labels","singular","value","undefined","selectedConfig","preferenceKey","DocumentDrawer","DocumentDrawerToggler","documentDrawerSlug","collectionSlug","Array","isArray","collectionPermissions","hasCreatePermission","create","permission","isOpen","apiURL","cacheBust","dispatchCacheBust","state","data","isError","isLoading","isLoadingList","setParams","moreThanOneAvailableCollection","length","admin","listSearchableFields","useAsTitle","versions","params","copyOfWhere","filterOption","searchAsConditions","map","fieldName","like","searchFilter","or","drafts","draft","newPreferences","onCreateNew","doc","docID","id","Header","header","className","div","h2","plural","button","aria-label","onClick","type","description","onChange","options","coll","collectionConfig","newDocumentURL","defaultLimit","pagination","defaultSort","handlePageChange","handlePerPageChange","handleSearchChange","handleSortChange","handleWhereChange","modifySearchParams","cellProps","link","rowColl","rowData","onSave"],"mappings":"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"}