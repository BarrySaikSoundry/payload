{"version":3,"sources":["../../../src/elements/Status/index.tsx"],"sourcesContent":["'use client'\nimport { Modal, useModal } from '@faceless-ui/modal'\nimport React, { useCallback, useState } from 'react'\nimport { toast } from 'sonner'\n\nimport { useForm } from '../../forms/Form/context.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useDocumentInfo } from '../../providers/DocumentInfo/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { requests } from '../../utilities/api.js'\nimport { Button } from '../Button/index.js'\nimport './index.scss'\n\nconst baseClass = 'status'\n\nexport const Status: React.FC = () => {\n  const {\n    id,\n    collectionSlug,\n    docPermissions,\n    getVersions,\n    globalSlug,\n    publishedDoc,\n    unpublishedVersions,\n  } = useDocumentInfo()\n  const { toggleModal } = useModal()\n  const {\n    routes: { api },\n    serverURL,\n  } = useConfig()\n  const [processing, setProcessing] = useState(false)\n  const { reset: resetForm } = useForm()\n  const { code: locale } = useLocale()\n  const { i18n, t } = useTranslation()\n\n  const unPublishModalSlug = `confirm-un-publish-${id}`\n  const revertModalSlug = `confirm-revert-${id}`\n\n  let statusToRender: 'changed' | 'draft' | 'published'\n\n  if (unpublishedVersions?.docs?.length > 0 && publishedDoc) {\n    statusToRender = 'changed'\n  } else if (!publishedDoc) {\n    statusToRender = 'draft'\n  } else if (publishedDoc && unpublishedVersions?.docs?.length <= 1) {\n    statusToRender = 'published'\n  }\n\n  const performAction = useCallback(\n    async (action: 'revert' | 'unpublish') => {\n      let url\n      let method\n      let body\n\n      setProcessing(true)\n\n      if (action === 'unpublish') {\n        body = {\n          _status: 'draft',\n        }\n      }\n\n      if (action === 'revert') {\n        body = publishedDoc\n      }\n\n      if (collectionSlug) {\n        url = `${serverURL}${api}/${collectionSlug}/${id}?locale=${locale}&fallback-locale=null`\n        method = 'patch'\n      }\n      if (globalSlug) {\n        url = `${serverURL}${api}/globals/${globalSlug}?locale=${locale}&fallback-locale=null`\n        method = 'post'\n      }\n\n      const res = await requests[method](url, {\n        body: JSON.stringify(body),\n        headers: {\n          'Accept-Language': i18n.language,\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (res.status === 200) {\n        let data\n        const json = await res.json()\n\n        if (globalSlug) {\n          data = json.result\n        } else if (collectionSlug) {\n          data = json.doc\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        resetForm(data)\n        toast.success(json.message)\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        getVersions()\n      } else {\n        toast.error(t('error:unPublishingDocument'))\n      }\n\n      setProcessing(false)\n      if (action === 'revert') {\n        toggleModal(revertModalSlug)\n      }\n\n      if (action === 'unpublish') {\n        toggleModal(unPublishModalSlug)\n      }\n    },\n    [\n      api,\n      collectionSlug,\n      getVersions,\n      globalSlug,\n      i18n.language,\n      id,\n      locale,\n      publishedDoc,\n      resetForm,\n      revertModalSlug,\n      serverURL,\n      t,\n      toggleModal,\n      unPublishModalSlug,\n    ],\n  )\n\n  const canUpdate = docPermissions?.update?.permission\n\n  if (statusToRender) {\n    return (\n      <div\n        className={baseClass}\n        title={`${t('version:status')}: ${t(`version:${statusToRender}`)}`}\n      >\n        <div className={`${baseClass}__value-wrap`}>\n          <span className={`${baseClass}__label`}>{t('version:status')}:&nbsp;</span>\n          <span className={`${baseClass}__value`}>{t(`version:${statusToRender}`)}</span>\n          {canUpdate && statusToRender === 'published' && (\n            <React.Fragment>\n              &nbsp;&mdash;&nbsp;\n              <Button\n                buttonStyle=\"none\"\n                className={`${baseClass}__action`}\n                onClick={() => toggleModal(unPublishModalSlug)}\n              >\n                {t('version:unpublish')}\n              </Button>\n              <Modal className={`${baseClass}__modal`} slug={unPublishModalSlug}>\n                <div className={`${baseClass}__modal-template`}>\n                  <h1>{t('version:confirmUnpublish')}</h1>\n                  <p>{t('version:aboutToUnpublish')}</p>\n                  <Button\n                    buttonStyle=\"secondary\"\n                    onClick={processing ? undefined : () => toggleModal(unPublishModalSlug)}\n                    type=\"button\"\n                  >\n                    {t('general:cancel')}\n                  </Button>\n                  <Button onClick={processing ? undefined : () => performAction('unpublish')}>\n                    {t(processing ? 'version:unpublishing' : 'general:confirm')}\n                  </Button>\n                </div>\n              </Modal>\n            </React.Fragment>\n          )}\n          {canUpdate && statusToRender === 'changed' && (\n            <React.Fragment>\n              &nbsp;&mdash;&nbsp;\n              <Button\n                buttonStyle=\"none\"\n                className={`${baseClass}__action`}\n                id=\"action-revert-to-published\"\n                onClick={() => toggleModal(revertModalSlug)}\n              >\n                {t('version:revertToPublished')}\n              </Button>\n              <Modal className={`${baseClass}__modal`} slug={revertModalSlug}>\n                <div className={`${baseClass}__modal-template`}>\n                  <h1>{t('version:confirmRevertToSaved')}</h1>\n                  <p>{t('version:aboutToRevertToPublished')}</p>\n                  <Button\n                    buttonStyle=\"secondary\"\n                    onClick={processing ? undefined : () => toggleModal(revertModalSlug)}\n                    type=\"button\"\n                  >\n                    {t('general:cancel')}\n                  </Button>\n                  <Button\n                    id=\"action-revert-to-published-confirm\"\n                    onClick={processing ? undefined : () => performAction('revert')}\n                  >\n                    {t(processing ? 'version:reverting' : 'general:confirm')}\n                  </Button>\n                </div>\n              </Modal>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return null\n}\n"],"names":["Modal","useModal","React","useCallback","useState","toast","useForm","useConfig","useDocumentInfo","useLocale","useTranslation","requests","Button","baseClass","Status","id","collectionSlug","docPermissions","getVersions","globalSlug","publishedDoc","unpublishedVersions","toggleModal","routes","api","serverURL","processing","setProcessing","reset","resetForm","code","locale","i18n","t","unPublishModalSlug","revertModalSlug","statusToRender","docs","length","performAction","action","url","method","body","_status","res","JSON","stringify","headers","language","status","data","json","result","doc","success","message","error","canUpdate","update","permission","div","className","title","span","Fragment","buttonStyle","onClick","slug","h1","p","undefined","type"],"mappings":"AAAA;;AACA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,qBAAoB;AACpD,OAAOC,SAASC,WAAW,EAAEC,QAAQ,QAAQ,QAAO;AACpD,SAASC,KAAK,QAAQ,SAAQ;AAE9B,SAASC,OAAO,QAAQ,8BAA6B;AACrD,SAASC,SAAS,QAAQ,kCAAiC;AAC3D,SAASC,eAAe,QAAQ,wCAAuC;AACvE,SAASC,SAAS,QAAQ,kCAAiC;AAC3D,SAASC,cAAc,QAAQ,uCAAsC;AACrE,SAASC,QAAQ,QAAQ,yBAAwB;AACjD,SAASC,MAAM,QAAQ,qBAAoB;AAC3C,OAAO,eAAc;AAErB,MAAMC,YAAY;AAElB,OAAO,MAAMC,SAAmB;IAC9B,MAAM,EACJC,EAAE,EACFC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,UAAU,EACVC,YAAY,EACZC,mBAAmB,EACpB,GAAGb;IACJ,MAAM,EAAEc,WAAW,EAAE,GAAGrB;IACxB,MAAM,EACJsB,QAAQ,EAAEC,GAAG,EAAE,EACfC,SAAS,EACV,GAAGlB;IACJ,MAAM,CAACmB,YAAYC,cAAc,GAAGvB,SAAS;IAC7C,MAAM,EAAEwB,OAAOC,SAAS,EAAE,GAAGvB;IAC7B,MAAM,EAAEwB,MAAMC,MAAM,EAAE,GAAGtB;IACzB,MAAM,EAAEuB,IAAI,EAAEC,CAAC,EAAE,GAAGvB;IAEpB,MAAMwB,qBAAqB,CAAC,mBAAmB,EAAEnB,GAAG,CAAC;IACrD,MAAMoB,kBAAkB,CAAC,eAAe,EAAEpB,GAAG,CAAC;IAE9C,IAAIqB;IAEJ,IAAIf,qBAAqBgB,MAAMC,SAAS,KAAKlB,cAAc;QACzDgB,iBAAiB;IACnB,OAAO,IAAI,CAAChB,cAAc;QACxBgB,iBAAiB;IACnB,OAAO,IAAIhB,gBAAgBC,qBAAqBgB,MAAMC,UAAU,GAAG;QACjEF,iBAAiB;IACnB;IAEA,MAAMG,gBAAgBpC,YACpB,OAAOqC;QACL,IAAIC;QACJ,IAAIC;QACJ,IAAIC;QAEJhB,cAAc;QAEd,IAAIa,WAAW,aAAa;YAC1BG,OAAO;gBACLC,SAAS;YACX;QACF;QAEA,IAAIJ,WAAW,UAAU;YACvBG,OAAOvB;QACT;QAEA,IAAIJ,gBAAgB;YAClByB,MAAM,CAAC,EAAEhB,UAAU,EAAED,IAAI,CAAC,EAAER,eAAe,CAAC,EAAED,GAAG,QAAQ,EAAEgB,OAAO,qBAAqB,CAAC;YACxFW,SAAS;QACX;QACA,IAAIvB,YAAY;YACdsB,MAAM,CAAC,EAAEhB,UAAU,EAAED,IAAI,SAAS,EAAEL,WAAW,QAAQ,EAAEY,OAAO,qBAAqB,CAAC;YACtFW,SAAS;QACX;QAEA,MAAMG,MAAM,MAAMlC,QAAQ,CAAC+B,OAAO,CAACD,KAAK;YACtCE,MAAMG,KAAKC,SAAS,CAACJ;YACrBK,SAAS;gBACP,mBAAmBhB,KAAKiB,QAAQ;gBAChC,gBAAgB;YAClB;QACF;QAEA,IAAIJ,IAAIK,MAAM,KAAK,KAAK;YACtB,IAAIC;YACJ,MAAMC,OAAO,MAAMP,IAAIO,IAAI;YAE3B,IAAIjC,YAAY;gBACdgC,OAAOC,KAAKC,MAAM;YACpB,OAAO,IAAIrC,gBAAgB;gBACzBmC,OAAOC,KAAKE,GAAG;YACjB;YAEA,mEAAmE;YACnEzB,UAAUsB;YACV9C,MAAMkD,OAAO,CAACH,KAAKI,OAAO;YAC1B,mEAAmE;YACnEtC;QACF,OAAO;YACLb,MAAMoD,KAAK,CAACxB,EAAE;QAChB;QAEAN,cAAc;QACd,IAAIa,WAAW,UAAU;YACvBlB,YAAYa;QACd;QAEA,IAAIK,WAAW,aAAa;YAC1BlB,YAAYY;QACd;IACF,GACA;QACEV;QACAR;QACAE;QACAC;QACAa,KAAKiB,QAAQ;QACblC;QACAgB;QACAX;QACAS;QACAM;QACAV;QACAQ;QACAX;QACAY;KACD;IAGH,MAAMwB,YAAYzC,gBAAgB0C,QAAQC;IAE1C,IAAIxB,gBAAgB;QAClB,qBACE,KAACyB;YACCC,WAAWjD;YACXkD,OAAO,CAAC,EAAE9B,EAAE,kBAAkB,EAAE,EAAEA,EAAE,CAAC,QAAQ,EAAEG,eAAe,CAAC,EAAE,CAAC;sBAElE,cAAA,MAACyB;gBAAIC,WAAW,CAAC,EAAEjD,UAAU,YAAY,CAAC;;kCACxC,MAACmD;wBAAKF,WAAW,CAAC,EAAEjD,UAAU,OAAO,CAAC;;4BAAGoB,EAAE;4BAAkB;;;kCAC7D,KAAC+B;wBAAKF,WAAW,CAAC,EAAEjD,UAAU,OAAO,CAAC;kCAAGoB,EAAE,CAAC,QAAQ,EAAEG,eAAe,CAAC;;oBACrEsB,aAAatB,mBAAmB,6BAC/B,MAAClC,MAAM+D,QAAQ;;4BAAC;0CAEd,KAACrD;gCACCsD,aAAY;gCACZJ,WAAW,CAAC,EAAEjD,UAAU,QAAQ,CAAC;gCACjCsD,SAAS,IAAM7C,YAAYY;0CAE1BD,EAAE;;0CAEL,KAACjC;gCAAM8D,WAAW,CAAC,EAAEjD,UAAU,OAAO,CAAC;gCAAEuD,MAAMlC;0CAC7C,cAAA,MAAC2B;oCAAIC,WAAW,CAAC,EAAEjD,UAAU,gBAAgB,CAAC;;sDAC5C,KAACwD;sDAAIpC,EAAE;;sDACP,KAACqC;sDAAGrC,EAAE;;sDACN,KAACrB;4CACCsD,aAAY;4CACZC,SAASzC,aAAa6C,YAAY,IAAMjD,YAAYY;4CACpDsC,MAAK;sDAEJvC,EAAE;;sDAEL,KAACrB;4CAAOuD,SAASzC,aAAa6C,YAAY,IAAMhC,cAAc;sDAC3DN,EAAEP,aAAa,yBAAyB;;;;;;;oBAMlDgC,aAAatB,mBAAmB,2BAC/B,MAAClC,MAAM+D,QAAQ;;4BAAC;0CAEd,KAACrD;gCACCsD,aAAY;gCACZJ,WAAW,CAAC,EAAEjD,UAAU,QAAQ,CAAC;gCACjCE,IAAG;gCACHoD,SAAS,IAAM7C,YAAYa;0CAE1BF,EAAE;;0CAEL,KAACjC;gCAAM8D,WAAW,CAAC,EAAEjD,UAAU,OAAO,CAAC;gCAAEuD,MAAMjC;0CAC7C,cAAA,MAAC0B;oCAAIC,WAAW,CAAC,EAAEjD,UAAU,gBAAgB,CAAC;;sDAC5C,KAACwD;sDAAIpC,EAAE;;sDACP,KAACqC;sDAAGrC,EAAE;;sDACN,KAACrB;4CACCsD,aAAY;4CACZC,SAASzC,aAAa6C,YAAY,IAAMjD,YAAYa;4CACpDqC,MAAK;sDAEJvC,EAAE;;sDAEL,KAACrB;4CACCG,IAAG;4CACHoD,SAASzC,aAAa6C,YAAY,IAAMhC,cAAc;sDAErDN,EAAEP,aAAa,sBAAsB;;;;;;;;;;IASxD;IAEA,OAAO;AACT,EAAC"}