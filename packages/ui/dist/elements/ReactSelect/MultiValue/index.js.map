{"version":3,"sources":["../../../../src/elements/ReactSelect/MultiValue/index.tsx"],"sourcesContent":["'use client'\nimport type { MultiValueProps } from 'react-select'\n\nimport React from 'react'\nimport { components as SelectComponents } from 'react-select'\n\nimport type { Option } from '../types.js'\n\nimport { useDraggableSortable } from '../../DraggableSortable/useDraggableSortable/index.js'\nimport './index.scss'\n\nconst baseClass = 'multi-value'\n\nexport function generateMultiValueDraggableID(optionData, valueFunction) {\n  return typeof valueFunction === 'function' ? valueFunction(optionData) : optionData.value\n}\nexport const MultiValue: React.FC<MultiValueProps<Option>> = (props) => {\n  const {\n    className,\n    data,\n    innerProps,\n    isDisabled,\n    // @ts-expect-error // TODO Fix this - moduleResolution 16 breaks our declare module\n    selectProps: { customProps: { disableMouseDown } = {}, getOptionValue, isSortable } = {},\n  } = props\n\n  const { attributes, isDragging, listeners, setNodeRef, transform } = useDraggableSortable({\n    id: generateMultiValueDraggableID(data, getOptionValue),\n    disabled: !isSortable,\n  })\n\n  const classes = [\n    baseClass,\n    className,\n    !isDisabled && isSortable && 'draggable',\n    isDragging && `${baseClass}--is-dragging`,\n  ]\n    .filter(Boolean)\n    .join(' ')\n\n  return (\n    <React.Fragment>\n      {/* @ts-expect-error // TODO Fix this - Broke with React 19 types */}\n      <SelectComponents.MultiValue\n        {...props}\n        className={classes}\n        innerProps={{\n          ...(isSortable\n            ? {\n                ...attributes,\n                ...listeners,\n              }\n            : {}),\n          ...innerProps,\n          onMouseDown: (e) => {\n            if (!disableMouseDown) {\n              // we need to prevent the dropdown from opening when clicking on the drag handle, but not when a modal is open (i.e. the 'Relationship' field component)\n              e.stopPropagation()\n            }\n          },\n          ref: setNodeRef,\n          style: isSortable\n            ? {\n                transform,\n                ...attributes?.style,\n              }\n            : {},\n        }}\n      />\n    </React.Fragment>\n  )\n}\n"],"names":["React","components","SelectComponents","useDraggableSortable","baseClass","generateMultiValueDraggableID","optionData","valueFunction","value","MultiValue","props","className","data","innerProps","isDisabled","selectProps","customProps","disableMouseDown","getOptionValue","isSortable","attributes","isDragging","listeners","setNodeRef","transform","id","disabled","classes","filter","Boolean","join","Fragment","onMouseDown","e","stopPropagation","ref","style"],"mappings":"AAAA;;AAGA,OAAOA,WAAW,QAAO;AACzB,SAASC,cAAcC,gBAAgB,QAAQ,eAAc;AAI7D,SAASC,oBAAoB,QAAQ,wDAAuD;AAC5F,OAAO,eAAc;AAErB,MAAMC,YAAY;AAElB,OAAO,SAASC,8BAA8BC,UAAU,EAAEC,aAAa;IACrE,OAAO,OAAOA,kBAAkB,aAAaA,cAAcD,cAAcA,WAAWE,KAAK;AAC3F;AACA,OAAO,MAAMC,aAAgD,CAACC;IAC5D,MAAM,EACJC,SAAS,EACTC,IAAI,EACJC,UAAU,EACVC,UAAU,EACV,oFAAoF;IACpFC,aAAa,EAAEC,aAAa,EAAEC,gBAAgB,EAAE,GAAG,CAAC,CAAC,EAAEC,cAAc,EAAEC,UAAU,EAAE,GAAG,CAAC,CAAC,EACzF,GAAGT;IAEJ,MAAM,EAAEU,UAAU,EAAEC,UAAU,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAE,GAAGrB,qBAAqB;QACxFsB,IAAIpB,8BAA8BO,MAAMM;QACxCQ,UAAU,CAACP;IACb;IAEA,MAAMQ,UAAU;QACdvB;QACAO;QACA,CAACG,cAAcK,cAAc;QAC7BE,cAAc,CAAC,EAAEjB,UAAU,aAAa,CAAC;KAC1C,CACEwB,MAAM,CAACC,SACPC,IAAI,CAAC;IAER,qBACE,KAAC9B,MAAM+B,QAAQ;kBAEb,cAAA,KAAC7B,iBAAiBO,UAAU;YACzB,GAAGC,KAAK;YACTC,WAAWgB;YACXd,YAAY;gBACV,GAAIM,aACA;oBACE,GAAGC,UAAU;oBACb,GAAGE,SAAS;gBACd,IACA,CAAC,CAAC;gBACN,GAAGT,UAAU;gBACbmB,aAAa,CAACC;oBACZ,IAAI,CAAChB,kBAAkB;wBACrB,wJAAwJ;wBACxJgB,EAAEC,eAAe;oBACnB;gBACF;gBACAC,KAAKZ;gBACLa,OAAOjB,aACH;oBACEK;oBACA,GAAGJ,YAAYgB,KAAK;gBACtB,IACA,CAAC;YACP;;;AAIR,EAAC"}