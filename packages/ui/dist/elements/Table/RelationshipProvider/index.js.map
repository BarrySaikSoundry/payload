{"version":3,"sources":["../../../../src/elements/Table/RelationshipProvider/index.tsx"],"sourcesContent":["'use client'\nimport type { TypeWithID } from 'payload'\n\nimport * as qs from 'qs-esm'\nimport React, { createContext, useCallback, useContext, useEffect, useReducer, useRef } from 'react'\n\nimport { useDebounce } from '../../../hooks/useDebounce.js'\nimport { useConfig } from '../../../providers/Config/index.js'\nimport { useLocale } from '../../../providers/Locale/index.js'\nimport { useTranslation } from '../../../providers/Translation/index.js'\nimport { reducer } from './reducer.js'\n\n// documents are first set to null when requested\n// set to false when no doc is returned\n// or set to the document returned\nexport type Documents = {\n  [slug: string]: {\n    [id: number | string]: TypeWithID | false | null\n  }\n}\n\ntype ListRelationshipContext = {\n  documents: Documents\n  getRelationships: (\n    docs: {\n      relationTo: string\n      value: number | string\n    }[],\n  ) => void\n}\n\nconst Context = createContext({} as ListRelationshipContext)\n\nexport const RelationshipProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [documents, dispatchDocuments] = useReducer(reducer, {})\n  const debouncedDocuments = useDebounce(documents, 100)\n  const config = useConfig()\n  const { i18n } = useTranslation()\n  const { code: locale } = useLocale()\n  const prevLocale = useRef(locale)\n\n  const {\n    routes: { api },\n    serverURL,\n  } = config\n\n  const loadRelationshipDocs = useCallback(\n    (reloadAll = false) => {\n      Object.entries(debouncedDocuments).forEach(async ([slug, docs]) => {\n        const idsToLoad: (number | string)[] = []\n\n        Object.entries(docs).forEach(([id, value]) => {\n          if (value === null || reloadAll) {\n            idsToLoad.push(id)\n          }\n        })\n\n        if (idsToLoad.length > 0) {\n          const url = `${serverURL}${api}/${slug}`\n\n          const params = new URLSearchParams()\n\n          params.append('depth', '0')\n          params.append('limit', '250')\n\n          if (locale) {\n            params.append('locale', locale)\n          }\n\n          if (idsToLoad && idsToLoad.length > 0) {\n            const idsToString = idsToLoad.map((id) => String(id))\n            params.append('where[id][in]', idsToString.join(','))\n          }\n\n          const query = `?${params.toString()}`\n\n          const result = await fetch(`${url}${query}`, {\n            credentials: 'include',\n            headers: {\n              'Accept-Language': i18n.language,\n            },\n          })\n\n          if (result.ok) {\n            const json = await result.json()\n            if (json.docs) {\n              dispatchDocuments({\n                type: 'ADD_LOADED',\n                docs: json.docs,\n                idsToLoad,\n                relationTo: slug,\n              })\n            }\n          } else {\n            dispatchDocuments({ type: 'ADD_LOADED', docs: [], idsToLoad, relationTo: slug })\n          }\n        }\n      })\n    },\n    [debouncedDocuments, serverURL, api, i18n, locale],\n  )\n\n  useEffect(() => {\n    void loadRelationshipDocs(locale && prevLocale.current !== locale)\n    prevLocale.current = locale\n  }, [locale, loadRelationshipDocs])\n\n  const getRelationships = useCallback(\n    (relationships: { relationTo: string; value: number | string }[]) => {\n      dispatchDocuments({ type: 'REQUEST', docs: relationships })\n    },\n    [],\n  )\n\n  return <Context.Provider value={{ documents, getRelationships }}>{children}</Context.Provider>\n}\n\nexport const useListRelationships = (): ListRelationshipContext => useContext(Context)\n"],"names":["React","createContext","useCallback","useContext","useEffect","useReducer","useRef","useDebounce","useConfig","useLocale","useTranslation","reducer","Context","RelationshipProvider","children","documents","dispatchDocuments","debouncedDocuments","config","i18n","code","locale","prevLocale","routes","api","serverURL","loadRelationshipDocs","reloadAll","Object","entries","forEach","slug","docs","idsToLoad","id","value","push","length","url","params","URLSearchParams","append","idsToString","map","String","join","query","toString","result","fetch","credentials","headers","language","ok","json","type","relationTo","current","getRelationships","relationships","Provider","useListRelationships"],"mappings":"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"}