{"version":3,"sources":["../../../../../../src/elements/Table/DefaultCell/fields/Blocks/index.tsx"],"sourcesContent":["'use client'\nimport type { CellComponentProps, DefaultCellComponentProps } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React from 'react'\n\nimport { useTranslation } from '../../../../../providers/Translation/index.js'\n\nexport interface BlocksCellProps extends DefaultCellComponentProps<any> {\n  blocks: CellComponentProps['blocks']\n  labels: CellComponentProps['labels']\n}\n\nexport const BlocksCell: React.FC<BlocksCellProps> = ({ blocks, cellData, labels }) => {\n  const { i18n } = useTranslation()\n\n  const selectedBlocks = Array.isArray(cellData) ? cellData.map(({ blockType }) => blockType) : []\n\n  const translatedBlockLabels = blocks?.map((b) => ({\n    slug: b.slug,\n    label: getTranslation(b.labels.singular, i18n),\n  }))\n\n  let label = `0 ${getTranslation(labels?.plural, i18n)}`\n\n  const formatBlockList = (blocks) =>\n    blocks\n      .map((b) => {\n        const filtered = translatedBlockLabels.filter((f) => f.slug === b)?.[0]\n        return filtered?.label\n      })\n      .join(', ')\n\n  const itemsToShow = 5\n\n  if (selectedBlocks.length > itemsToShow) {\n    const more = selectedBlocks.length - itemsToShow\n    label = `${selectedBlocks.length} ${getTranslation(labels?.plural, i18n)} - ${i18n.t(\n      'fields:itemsAndMore',\n      { count: more, items: formatBlockList(selectedBlocks.slice(0, itemsToShow)) },\n    )}`\n  } else if (selectedBlocks.length > 0) {\n    label = `${selectedBlocks.length} ${getTranslation(\n      selectedBlocks.length === 1 ? labels?.singular : labels?.plural,\n      i18n,\n    )} - ${formatBlockList(selectedBlocks)}`\n  }\n\n  return <span>{label}</span>\n}\n"],"names":["getTranslation","React","useTranslation","BlocksCell","blocks","cellData","labels","i18n","selectedBlocks","Array","isArray","map","blockType","translatedBlockLabels","b","slug","label","singular","plural","formatBlockList","filtered","filter","f","join","itemsToShow","length","more","t","count","items","slice","span"],"mappings":"AAAA;;AAGA,SAASA,cAAc,QAAQ,2BAA0B;AACzD,OAAOC,WAAW,QAAO;AAEzB,SAASC,cAAc,QAAQ,gDAA+C;AAO9E,OAAO,MAAMC,aAAwC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IAChF,MAAM,EAAEC,IAAI,EAAE,GAAGL;IAEjB,MAAMM,iBAAiBC,MAAMC,OAAO,CAACL,YAAYA,SAASM,GAAG,CAAC,CAAC,EAAEC,SAAS,EAAE,GAAKA,aAAa,EAAE;IAEhG,MAAMC,wBAAwBT,QAAQO,IAAI,CAACG,IAAO,CAAA;YAChDC,MAAMD,EAAEC,IAAI;YACZC,OAAOhB,eAAec,EAAER,MAAM,CAACW,QAAQ,EAAEV;QAC3C,CAAA;IAEA,IAAIS,QAAQ,CAAC,EAAE,EAAEhB,eAAeM,QAAQY,QAAQX,MAAM,CAAC;IAEvD,MAAMY,kBAAkB,CAACf,SACvBA,OACGO,GAAG,CAAC,CAACG;YACJ,MAAMM,WAAWP,sBAAsBQ,MAAM,CAAC,CAACC,IAAMA,EAAEP,IAAI,KAAKD,IAAI,CAAC,EAAE;YACvE,OAAOM,UAAUJ;QACnB,GACCO,IAAI,CAAC;IAEV,MAAMC,cAAc;IAEpB,IAAIhB,eAAeiB,MAAM,GAAGD,aAAa;QACvC,MAAME,OAAOlB,eAAeiB,MAAM,GAAGD;QACrCR,QAAQ,CAAC,EAAER,eAAeiB,MAAM,CAAC,CAAC,EAAEzB,eAAeM,QAAQY,QAAQX,MAAM,GAAG,EAAEA,KAAKoB,CAAC,CAClF,uBACA;YAAEC,OAAOF;YAAMG,OAAOV,gBAAgBX,eAAesB,KAAK,CAAC,GAAGN;QAAc,GAC5E,CAAC;IACL,OAAO,IAAIhB,eAAeiB,MAAM,GAAG,GAAG;QACpCT,QAAQ,CAAC,EAAER,eAAeiB,MAAM,CAAC,CAAC,EAAEzB,eAClCQ,eAAeiB,MAAM,KAAK,IAAInB,QAAQW,WAAWX,QAAQY,QACzDX,MACA,GAAG,EAAEY,gBAAgBX,gBAAgB,CAAC;IAC1C;IAEA,qBAAO,KAACuB;kBAAMf;;AAChB,EAAC"}