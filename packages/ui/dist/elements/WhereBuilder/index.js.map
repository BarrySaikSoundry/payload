{"version":3,"sources":["../../../src/elements/WhereBuilder/index.tsx"],"sourcesContent":["'use client'\nimport type { Operator } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React, { useEffect, useState } from 'react'\n\nimport type { WhereBuilderProps } from './types.js'\n\nimport { useListQuery } from '../../providers/ListQuery/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useSearchParams } from '../../providers/SearchParams/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { Button } from '../Button/index.js'\nimport { Condition } from './Condition/index.js'\nimport './index.scss'\nimport { reduceFieldMap } from './reduceFieldMap.js'\nimport { transformWhereQuery } from './transformWhereQuery.js'\nimport validateWhereQuery from './validateWhereQuery.js'\n\nconst baseClass = 'where-builder'\n\nexport { WhereBuilderProps }\n\n/**\n * The WhereBuilder component is used to render the filter controls for a collection's list view.\n * It is part of the {@link ListControls} component which is used to render the controls (search, filter, where).\n */\nexport const WhereBuilder: React.FC<WhereBuilderProps> = (props) => {\n  const { collectionPluralLabel, fieldMap } = props\n  const { i18n, t } = useTranslation()\n  const { code: currentLocale } = useLocale()\n\n  const [reducedFields, setReducedColumns] = useState(() => reduceFieldMap({ fieldMap, i18n }))\n\n  useEffect(() => {\n    setReducedColumns(reduceFieldMap({ fieldMap, i18n }))\n  }, [fieldMap, i18n])\n\n  const { searchParams } = useSearchParams()\n  const { handleWhereChange } = useListQuery()\n  const [shouldUpdateQuery, setShouldUpdateQuery] = React.useState(false)\n\n  // This handles initializing the where conditions from the search query (URL). That way, if you pass in\n  // query params to the URL, the where conditions will be initialized from those and displayed in the UI.\n  // Example: /admin/collections/posts?where[or][0][and][0][text][equals]=example%20post\n  /*\n    stored conditions look like this:\n    [\n      _or_ & _and_ queries have the same shape:\n      {\n        and: [{\n          category: {\n            equals: 'category-a'\n          }\n        }]\n      },\n\n      {\n        and:[{\n          category: {\n            equals: 'category-b'\n          },\n          text: {\n            not_equals: 'oranges'\n          },\n        }]\n      }\n    ]\n  */\n\n  const [conditions, setConditions] = React.useState(() => {\n    const whereFromSearch = searchParams.where\n    if (whereFromSearch) {\n      if (validateWhereQuery(whereFromSearch)) {\n        return whereFromSearch.or\n      }\n      // Transform the where query to be in the right format. This will transform something simple like [text][equals]=example%20post to the right format\n      const transformedWhere = transformWhereQuery(whereFromSearch)\n\n      if (validateWhereQuery(transformedWhere)) {\n        return transformedWhere.or\n      }\n\n      console.warn(`Invalid where query in URL: ${JSON.stringify(whereFromSearch)}`)\n    }\n\n    return []\n  })\n\n  const addCondition = React.useCallback(\n    ({ andIndex, fieldName, orIndex, relation }) => {\n      const newConditions = [...conditions]\n      if (relation === 'and') {\n        newConditions[orIndex].and.splice(andIndex, 0, { [fieldName]: {} })\n      } else {\n        newConditions.push({\n          and: [\n            {\n              [fieldName]: {},\n            },\n          ],\n        })\n      }\n      setConditions(newConditions)\n    },\n    [conditions],\n  )\n\n  const updateCondition = React.useCallback(\n    ({ andIndex, fieldName, operator, orIndex, value: valueArg }) => {\n      const existingRowCondition = conditions[orIndex].and[andIndex]\n      if (typeof existingRowCondition === 'object' && fieldName && operator) {\n        const value = valueArg ?? (operator ? existingRowCondition[operator] : '')\n        const newRowCondition = {\n          [fieldName]: operator ? { [operator]: value } : {},\n        }\n\n        if (JSON.stringify(existingRowCondition) !== JSON.stringify(newRowCondition)) {\n          conditions[orIndex].and[andIndex] = newRowCondition\n          setConditions(conditions)\n          if (![null, undefined].includes(value)) {\n            // only update query when field/operator/value are filled out\n            setShouldUpdateQuery(true)\n          }\n        }\n      }\n    },\n    [conditions],\n  )\n\n  const removeCondition = React.useCallback(\n    ({ andIndex, orIndex }) => {\n      const newConditions = [...conditions]\n      newConditions[orIndex].and.splice(andIndex, 1)\n      if (newConditions[orIndex].and.length === 0) {\n        newConditions.splice(orIndex, 1)\n      }\n      setConditions(newConditions)\n      setShouldUpdateQuery(true)\n    },\n    [conditions],\n  )\n\n  React.useEffect(() => {\n    if (shouldUpdateQuery) {\n      handleWhereChange({ or: conditions })\n      setShouldUpdateQuery(false)\n    }\n  }, [conditions, handleWhereChange, shouldUpdateQuery])\n\n  return (\n    <div className={baseClass}>\n      {conditions.length > 0 && (\n        <React.Fragment>\n          <div className={`${baseClass}__label`}>\n            {t('general:filterWhere', { label: getTranslation(collectionPluralLabel, i18n) })}\n          </div>\n          <ul className={`${baseClass}__or-filters`}>\n            {conditions.map((or, orIndex) => {\n              const compoundOrKey = `${orIndex}_${Array.isArray(or?.and) ? or.and.length : ''}`\n\n              return (\n                <li key={compoundOrKey}>\n                  {orIndex !== 0 && <div className={`${baseClass}__label`}>{t('general:or')}</div>}\n                  <ul className={`${baseClass}__and-filters`}>\n                    {Array.isArray(or?.and) &&\n                      or.and.map((_, andIndex) => {\n                        const initialFieldName = Object.keys(conditions[orIndex].and[andIndex])[0]\n                        const initialOperator =\n                          (Object.keys(\n                            conditions[orIndex].and[andIndex]?.[initialFieldName] || {},\n                          )?.[0] as Operator) || undefined\n                        const initialValue =\n                          conditions[orIndex].and[andIndex]?.[initialFieldName]?.[\n                            initialOperator\n                          ] || ''\n\n                        return (\n                          <li key={andIndex}>\n                            {andIndex !== 0 && (\n                              <div className={`${baseClass}__label`}>{t('general:and')}</div>\n                            )}\n                            <Condition\n                              addCondition={addCondition}\n                              andIndex={andIndex}\n                              fieldName={initialFieldName}\n                              fields={reducedFields}\n                              initialValue={initialValue}\n                              operator={initialOperator}\n                              orIndex={orIndex}\n                              removeCondition={removeCondition}\n                              updateCondition={updateCondition}\n                            />\n                          </li>\n                        )\n                      })}\n                  </ul>\n                </li>\n              )\n            })}\n          </ul>\n          <Button\n            buttonStyle=\"icon-label\"\n            className={`${baseClass}__add-or`}\n            icon=\"plus\"\n            iconPosition=\"left\"\n            iconStyle=\"with-border\"\n            onClick={() => {\n              addCondition({\n                andIndex: 0,\n                fieldName: reducedFields[0].value,\n                orIndex: conditions.length,\n                relation: 'or',\n              })\n            }}\n          >\n            {t('general:or')}\n          </Button>\n        </React.Fragment>\n      )}\n      {conditions.length === 0 && (\n        <div className={`${baseClass}__no-filters`}>\n          <div className={`${baseClass}__label`}>{t('general:noFiltersSet')}</div>\n          <Button\n            buttonStyle=\"icon-label\"\n            className={`${baseClass}__add-first-filter`}\n            icon=\"plus\"\n            iconPosition=\"left\"\n            iconStyle=\"with-border\"\n            onClick={() => {\n              if (reducedFields.length > 0) {\n                addCondition({\n                  andIndex: 0,\n                  fieldName: reducedFields[0].value,\n                  orIndex: conditions.length,\n                  relation: 'or',\n                })\n              }\n            }}\n          >\n            {t('general:addFilter')}\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":["getTranslation","React","useEffect","useState","useListQuery","useLocale","useSearchParams","useTranslation","Button","Condition","reduceFieldMap","transformWhereQuery","validateWhereQuery","baseClass","WhereBuilder","props","collectionPluralLabel","fieldMap","i18n","t","code","currentLocale","reducedFields","setReducedColumns","searchParams","handleWhereChange","shouldUpdateQuery","setShouldUpdateQuery","conditions","setConditions","whereFromSearch","where","or","transformedWhere","console","warn","JSON","stringify","addCondition","useCallback","andIndex","fieldName","orIndex","relation","newConditions","and","splice","push","updateCondition","operator","value","valueArg","existingRowCondition","newRowCondition","undefined","includes","removeCondition","length","div","className","Fragment","label","ul","map","compoundOrKey","Array","isArray","li","_","initialFieldName","Object","keys","initialOperator","initialValue","fields","buttonStyle","icon","iconPosition","iconStyle","onClick"],"mappings":"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"}