{"version":3,"sources":["../../../src/fields/shared/index.tsx"],"sourcesContent":["import type {\n  DocumentPreferences,\n  ErrorProps,\n  FieldDescriptionProps,\n  LabelProps,\n  Locale,\n  SanitizedLabelProps,\n  SanitizedLocalizationConfig,\n  User,\n  Validate,\n} from 'payload'\n\nexport const fieldBaseClass = 'field-type'\n\nexport type FormFieldBase = {\n  AfterInput?: React.ReactNode\n  BeforeInput?: React.ReactNode\n  CustomDescription?: React.ReactNode\n  CustomError?: React.ReactNode\n  CustomLabel?: React.ReactNode\n  className?: string\n  custom?: Record<string, any>\n  descriptionProps?: FieldDescriptionProps\n  disabled?: boolean\n  docPreferences?: DocumentPreferences\n  errorProps?: ErrorProps\n  label?: LabelProps['label']\n  labelProps?: SanitizedLabelProps\n  locale?: Locale\n  localized?: boolean\n  path?: string\n  readOnly?: boolean\n  required?: boolean\n  rtl?: boolean\n  style?: React.CSSProperties\n  user?: User\n  validate?: Validate\n}\n\n/**\n * Determines whether a field should be displayed as right-to-left (RTL) based on its configuration, payload's localization configuration and the adming user's currently enabled locale.\n\n * @returns Whether the field should be displayed as RTL.\n */\nexport function isFieldRTL({\n  fieldLocalized,\n  fieldRTL,\n  locale,\n  localizationConfig,\n}: {\n  fieldLocalized: boolean\n  fieldRTL: boolean\n  locale: Locale\n  localizationConfig?: SanitizedLocalizationConfig\n}) {\n  const hasMultipleLocales =\n    locale &&\n    localizationConfig &&\n    localizationConfig.locales &&\n    localizationConfig.locales.length > 1\n\n  const isCurrentLocaleDefaultLocale = locale?.code === localizationConfig?.defaultLocale\n\n  return (\n    (fieldRTL !== false &&\n      locale?.rtl === true &&\n      (fieldLocalized ||\n        (!fieldLocalized && !hasMultipleLocales) || // If there is only one locale which is also rtl, that field is rtl too\n        (!fieldLocalized && isCurrentLocaleDefaultLocale))) || // If the current locale is the default locale, but the field is not localized, that field is rtl too\n    fieldRTL === true\n  ) // If fieldRTL is true. This should be useful for when no localization is set at all in the payload config, but you still want fields to be rtl.\n}\n"],"names":["fieldBaseClass","isFieldRTL","fieldLocalized","fieldRTL","locale","localizationConfig","hasMultipleLocales","locales","length","isCurrentLocaleDefaultLocale","code","defaultLocale","rtl"],"mappings":"AAYA,OAAO,MAAMA,iBAAiB,aAAY;AA2B1C;;;;CAIC,GACD,OAAO,SAASC,WAAW,EACzBC,cAAc,EACdC,QAAQ,EACRC,MAAM,EACNC,kBAAkB,EAMnB;IACC,MAAMC,qBACJF,UACAC,sBACAA,mBAAmBE,OAAO,IAC1BF,mBAAmBE,OAAO,CAACC,MAAM,GAAG;IAEtC,MAAMC,+BAA+BL,QAAQM,SAASL,oBAAoBM;IAE1E,OACE,AAACR,aAAa,SACZC,QAAQQ,QAAQ,QACfV,CAAAA,kBACE,CAACA,kBAAkB,CAACI,sBAAuB,uEAAuE;IAClH,CAACJ,kBAAkBO,4BAA4B,KAAO,qGAAqG;IAChKN,aAAa,KACb,gJAAgJ;;AACpJ"}