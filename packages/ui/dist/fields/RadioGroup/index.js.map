{"version":3,"sources":["../../../src/fields/RadioGroup/index.tsx"],"sourcesContent":["'use client'\nimport type { Option } from 'payload'\n\nimport { optionIsObject } from 'payload/shared'\nimport React, { useCallback } from 'react'\n\nimport { useForm } from '../../forms/Form/context.js'\nimport { useField } from '../../forms/useField/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { FieldLabel } from '../FieldLabel/index.js'\nimport { fieldBaseClass } from '../shared/index.js'\nimport { Radio } from './Radio/index.js'\nimport './index.scss'\n\nconst baseClass = 'radio-group'\n\nimport type { FormFieldBase } from '../shared/index.js'\n\nimport { useFieldProps } from '../../forms/FieldPropsProvider/index.js'\nimport { FieldDescription } from '../FieldDescription/index.js'\nimport { FieldError } from '../FieldError/index.js'\n\nexport type RadioFieldProps = {\n  layout?: 'horizontal' | 'vertical'\n  name?: string\n  onChange?: OnChange\n  options?: Option[]\n  path?: string\n  value?: string\n  width?: string\n} & FormFieldBase\n\nexport type OnChange<T = string> = (value: T) => void\n\nconst _RadioGroupField: React.FC<RadioFieldProps> = (props) => {\n  const {\n    name,\n    CustomDescription,\n    CustomError,\n    CustomLabel,\n    className,\n    descriptionProps,\n    errorProps,\n    label,\n    labelProps,\n    layout = 'horizontal',\n    onChange: onChangeFromProps,\n    options = [],\n    path: pathFromProps,\n    readOnly: readOnlyFromProps,\n    required,\n    style,\n    validate,\n    value: valueFromProps,\n    width,\n  } = props\n\n  const { uuid } = useForm()\n\n  const memoizedValidate = useCallback(\n    (value, validationOptions) => {\n      if (typeof validate === 'function')\n        return validate(value, { ...validationOptions, options, required })\n    },\n    [validate, options, required],\n  )\n\n  const { path: pathFromContext, readOnly: readOnlyFromContext } = useFieldProps()\n\n  const {\n    formInitializing,\n    formProcessing,\n    path,\n    setValue,\n    showError,\n    value: valueFromContext,\n  } = useField<string>({\n    path: pathFromContext ?? pathFromProps ?? name,\n    validate: memoizedValidate,\n  })\n\n  const disabled = readOnlyFromProps || readOnlyFromContext || formProcessing || formInitializing\n\n  const value = valueFromContext || valueFromProps\n\n  return (\n    <div\n      className={[\n        fieldBaseClass,\n        baseClass,\n        className,\n        `${baseClass}--layout-${layout}`,\n        showError && 'error',\n        disabled && `${baseClass}--read-only`,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      style={{\n        ...style,\n        width,\n      }}\n    >\n      <FieldError CustomError={CustomError} path={path} {...(errorProps || {})} alignCaret=\"left\" />\n      <FieldLabel\n        CustomLabel={CustomLabel}\n        label={label}\n        required={required}\n        {...(labelProps || {})}\n      />\n      <div className={`${fieldBaseClass}__wrap`}>\n        <ul className={`${baseClass}--group`} id={`field-${path.replace(/\\./g, '__')}`}>\n          {options.map((option) => {\n            let optionValue = ''\n\n            if (optionIsObject(option)) {\n              optionValue = option.value\n            } else {\n              optionValue = option\n            }\n\n            const isSelected = String(optionValue) === String(value)\n\n            const id = `field-${path}-${optionValue}${uuid ? `-${uuid}` : ''}`\n\n            return (\n              <li key={`${path} - ${optionValue}`}>\n                <Radio\n                  id={id}\n                  isSelected={isSelected}\n                  onChange={() => {\n                    if (typeof onChangeFromProps === 'function') {\n                      onChangeFromProps(optionValue)\n                    }\n\n                    if (!disabled) {\n                      setValue(optionValue)\n                    }\n                  }}\n                  option={optionIsObject(option) ? option : { label: option, value: option }}\n                  path={path}\n                  readOnly={disabled}\n                  uuid={uuid}\n                />\n              </li>\n            )\n          })}\n        </ul>\n        {CustomDescription !== undefined ? (\n          CustomDescription\n        ) : (\n          <FieldDescription {...(descriptionProps || {})} />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport const RadioGroupField = withCondition(_RadioGroupField)\n"],"names":["optionIsObject","React","useCallback","useForm","useField","withCondition","FieldLabel","fieldBaseClass","Radio","baseClass","useFieldProps","FieldDescription","FieldError","_RadioGroupField","props","name","CustomDescription","CustomError","CustomLabel","className","descriptionProps","errorProps","label","labelProps","layout","onChange","onChangeFromProps","options","path","pathFromProps","readOnly","readOnlyFromProps","required","style","validate","value","valueFromProps","width","uuid","memoizedValidate","validationOptions","pathFromContext","readOnlyFromContext","formInitializing","formProcessing","setValue","showError","valueFromContext","disabled","div","filter","Boolean","join","alignCaret","ul","id","replace","map","option","optionValue","isSelected","String","li","undefined","RadioGroupField"],"mappings":"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"}