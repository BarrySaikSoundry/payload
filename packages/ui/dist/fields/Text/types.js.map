{"version":3,"sources":["../../../src/fields/Text/types.ts"],"sourcesContent":["import type { TextField } from 'payload'\nimport type { ChangeEvent } from 'react'\n\nimport type { Option, ReactSelectAdapterProps } from '../../elements/ReactSelect/types.js'\nimport type { FormFieldBase } from '../shared/index.js'\n\nexport type TextFieldProps = {\n  hasMany?: boolean\n  inputRef?: React.MutableRefObject<HTMLInputElement>\n  maxLength?: number\n  maxRows?: number\n  minLength?: number\n  minRows?: number\n  name?: string\n  onKeyDown?: React.KeyboardEventHandler<HTMLInputElement>\n  path?: string\n  placeholder?: TextField['admin']['placeholder']\n  width?: string\n} & FormFieldBase\n\nexport type SharedTextFieldProps =\n  | {\n      hasMany?: false\n      onChange?: (e: ChangeEvent<HTMLInputElement>) => void\n    }\n  | {\n      hasMany?: true\n      onChange?: ReactSelectAdapterProps['onChange']\n    }\n\nexport type TextInputProps = {\n  inputRef?: React.MutableRefObject<HTMLInputElement>\n  maxRows?: number\n  minRows?: number\n  onKeyDown?: React.KeyboardEventHandler<HTMLInputElement>\n  showError?: boolean\n  value?: string\n  valueToRender?: Option[]\n} & Omit<TextFieldProps, 'type'> &\n  SharedTextFieldProps\n"],"names":[],"mappings":"AA8BA,WASsB"}