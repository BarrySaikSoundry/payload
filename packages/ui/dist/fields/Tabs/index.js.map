{"version":3,"sources":["../../../src/fields/Tabs/index.tsx"],"sourcesContent":["'use client'\nimport type { DocumentPreferences } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { toKebabCase } from 'payload/shared'\nimport React, { useCallback, useEffect, useState } from 'react'\n\nimport type { MappedTab } from '../../providers/ComponentMap/buildComponentMap/types.js'\nimport type { FormFieldBase } from '../shared/index.js'\n\nimport { useCollapsible } from '../../elements/Collapsible/provider.js'\nimport { useFieldProps } from '../../forms/FieldPropsProvider/index.js'\nimport { RenderFields } from '../../forms/RenderFields/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { useDocumentInfo } from '../../providers/DocumentInfo/index.js'\nimport { usePreferences } from '../../providers/Preferences/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { FieldDescription } from '../FieldDescription/index.js'\nimport { fieldBaseClass } from '../shared/index.js'\nimport { TabComponent } from './Tab/index.js'\nimport './index.scss'\nimport { TabsProvider } from './provider.js'\n\nconst baseClass = 'tabs-field'\n\nexport { TabsProvider }\n\nexport type TabsFieldProps = {\n  forceRender?: boolean\n  name?: string\n  path?: string\n  tabs?: MappedTab[]\n  width?: string\n} & FormFieldBase\n\nconst _TabsField: React.FC<TabsFieldProps> = (props) => {\n  const {\n    name,\n    CustomDescription,\n    className,\n    descriptionProps,\n    forceRender = false,\n    path: pathFromProps,\n    readOnly: readOnlyFromProps,\n    tabs = [],\n  } = props\n\n  const {\n    indexPath,\n    path: pathFromContext,\n    readOnly: readOnlyFromContext,\n    schemaPath,\n    siblingPermissions,\n  } = useFieldProps()\n\n  const readOnly = readOnlyFromProps || readOnlyFromContext\n  const path = pathFromContext ?? pathFromProps ?? name\n  const { getPreference, setPreference } = usePreferences()\n  const { preferencesKey } = useDocumentInfo()\n  const { i18n } = useTranslation()\n  const { isWithinCollapsible } = useCollapsible()\n  const [activeTabIndex, setActiveTabIndex] = useState<number>(0)\n  const tabsPrefKey = `tabs-${indexPath}`\n\n  useEffect(() => {\n    if (preferencesKey) {\n      const getInitialPref = async () => {\n        const existingPreferences: DocumentPreferences = await getPreference(preferencesKey)\n        const initialIndex = path\n          ? existingPreferences?.fields?.[path]?.tabIndex\n          : existingPreferences?.fields?.[tabsPrefKey]?.tabIndex\n        setActiveTabIndex(initialIndex || 0)\n      }\n      void getInitialPref()\n    }\n  }, [path, getPreference, preferencesKey, tabsPrefKey])\n\n  const handleTabChange = useCallback(\n    async (incomingTabIndex: number) => {\n      setActiveTabIndex(incomingTabIndex)\n\n      const existingPreferences: DocumentPreferences = await getPreference(preferencesKey)\n\n      if (preferencesKey) {\n        void setPreference(preferencesKey, {\n          ...existingPreferences,\n          ...(path\n            ? {\n                fields: {\n                  ...(existingPreferences?.fields || {}),\n                  [path]: {\n                    ...existingPreferences?.fields?.[path],\n                    tabIndex: incomingTabIndex,\n                  },\n                },\n              }\n            : {\n                fields: {\n                  ...existingPreferences?.fields,\n                  [tabsPrefKey]: {\n                    ...existingPreferences?.fields?.[tabsPrefKey],\n                    tabIndex: incomingTabIndex,\n                  },\n                },\n              }),\n        })\n      }\n    },\n    [preferencesKey, getPreference, setPreference, path, tabsPrefKey],\n  )\n\n  const activeTabConfig = tabs[activeTabIndex]\n\n  function generateTabPath() {\n    let tabPath = path\n    if (path && activeTabConfig.name) {\n      tabPath = `${path}.${activeTabConfig.name}`\n    } else if (!path && activeTabConfig.name) {\n      tabPath = activeTabConfig.name\n    }\n\n    return tabPath\n  }\n\n  return (\n    <div\n      className={[\n        fieldBaseClass,\n        className,\n        baseClass,\n        isWithinCollapsible && `${baseClass}--within-collapsible`,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n    >\n      <TabsProvider>\n        <div className={`${baseClass}__tabs-wrap`}>\n          <div className={`${baseClass}__tabs`}>\n            {tabs.map((tab, tabIndex) => {\n              return (\n                <TabComponent\n                  isActive={activeTabIndex === tabIndex}\n                  key={tabIndex}\n                  parentPath={path}\n                  setIsActive={() => handleTabChange(tabIndex)}\n                  tab={tab}\n                />\n              )\n            })}\n          </div>\n        </div>\n        <div className={`${baseClass}__content-wrap`}>\n          {activeTabConfig && (\n            <React.Fragment>\n              <div\n                className={[\n                  `${baseClass}__tab`,\n                  activeTabConfig.label &&\n                    `${baseClass}__tabConfigLabel-${toKebabCase(\n                      getTranslation(activeTabConfig.label, i18n),\n                    )}`,\n                ]\n                  .filter(Boolean)\n                  .join(' ')}\n              >\n                {CustomDescription ? (\n                  CustomDescription\n                ) : (\n                  <FieldDescription {...(descriptionProps || {})} />\n                )}\n                <RenderFields\n                  fieldMap={activeTabConfig.fieldMap}\n                  forceRender={forceRender}\n                  key={\n                    activeTabConfig.label\n                      ? getTranslation(activeTabConfig.label, i18n)\n                      : activeTabConfig['name']\n                  }\n                  margins=\"small\"\n                  path={generateTabPath()}\n                  permissions={\n                    'name' in activeTabConfig && siblingPermissions?.[activeTabConfig.name]?.fields\n                      ? siblingPermissions[activeTabConfig.name]?.fields\n                      : siblingPermissions\n                  }\n                  readOnly={readOnly}\n                  schemaPath={`${schemaPath ? `${schemaPath}` : ''}${activeTabConfig.name ? `.${activeTabConfig.name}` : ''}`}\n                />\n              </div>\n            </React.Fragment>\n          )}\n        </div>\n      </TabsProvider>\n    </div>\n  )\n}\n\nexport const TabsField = withCondition(_TabsField)\n"],"names":["getTranslation","toKebabCase","React","useCallback","useEffect","useState","useCollapsible","useFieldProps","RenderFields","withCondition","useDocumentInfo","usePreferences","useTranslation","FieldDescription","fieldBaseClass","TabComponent","TabsProvider","baseClass","_TabsField","props","name","CustomDescription","className","descriptionProps","forceRender","path","pathFromProps","readOnly","readOnlyFromProps","tabs","indexPath","pathFromContext","readOnlyFromContext","schemaPath","siblingPermissions","getPreference","setPreference","preferencesKey","i18n","isWithinCollapsible","activeTabIndex","setActiveTabIndex","tabsPrefKey","getInitialPref","existingPreferences","initialIndex","fields","tabIndex","handleTabChange","incomingTabIndex","activeTabConfig","generateTabPath","tabPath","div","filter","Boolean","join","map","tab","isActive","parentPath","setIsActive","Fragment","label","fieldMap","margins","permissions","TabsField"],"mappings":"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"}