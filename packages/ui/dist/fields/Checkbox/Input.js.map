{"version":3,"sources":["../../../src/fields/Checkbox/Input.tsx"],"sourcesContent":["'use client'\nimport type { LabelProps, SanitizedLabelProps } from 'payload'\n\nimport React from 'react'\n\nimport { CheckIcon } from '../../icons/Check/index.js'\nimport { LineIcon } from '../../icons/Line/index.js'\nimport { FieldLabel } from '../FieldLabel/index.js'\n\nexport type CheckboxInputProps = {\n  AfterInput?: React.ReactNode\n  BeforeInput?: React.ReactNode\n  CustomLabel?: React.ReactNode\n  checked?: boolean\n  className?: string\n  id?: string\n  inputRef?: React.RefObject<HTMLInputElement | null>\n  label?: LabelProps['label']\n  labelProps?: SanitizedLabelProps\n  name?: string\n  onToggle: (event: React.ChangeEvent<HTMLInputElement>) => void\n  partialChecked?: boolean\n  readOnly?: boolean\n  required?: boolean\n}\n\nexport const inputBaseClass = 'checkbox-input'\n\nexport const CheckboxInput: React.FC<CheckboxInputProps> = ({\n  id,\n  name,\n  AfterInput,\n  BeforeInput,\n  CustomLabel,\n  checked,\n  className,\n  inputRef,\n  label,\n  labelProps,\n  onToggle,\n  partialChecked,\n  readOnly,\n  required,\n}) => {\n  return (\n    <div\n      className={[\n        className,\n        inputBaseClass,\n        checked && `${inputBaseClass}--checked`,\n        readOnly && `${inputBaseClass}--read-only`,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n    >\n      <div className={`${inputBaseClass}__input`}>\n        {BeforeInput}\n        <input\n          aria-label=\"\"\n          defaultChecked={Boolean(checked)}\n          disabled={readOnly}\n          id={id}\n          name={name}\n          onInput={onToggle}\n          ref={inputRef}\n          required={required}\n          type=\"checkbox\"\n        />\n        <span\n          className={[`${inputBaseClass}__icon`, !checked && partialChecked ? 'check' : 'partial']\n            .filter(Boolean)\n            .join(' ')}\n        >\n          {checked && <CheckIcon />}\n          {!checked && partialChecked && <LineIcon />}\n        </span>\n        {AfterInput}\n      </div>\n      <FieldLabel\n        CustomLabel={CustomLabel}\n        htmlFor={id}\n        label={label}\n        required={required}\n        {...(labelProps || {})}\n      />\n    </div>\n  )\n}\n"],"names":["React","CheckIcon","LineIcon","FieldLabel","inputBaseClass","CheckboxInput","id","name","AfterInput","BeforeInput","CustomLabel","checked","className","inputRef","label","labelProps","onToggle","partialChecked","readOnly","required","div","filter","Boolean","join","input","aria-label","defaultChecked","disabled","onInput","ref","type","span","htmlFor"],"mappings":"AAAA;;AAGA,OAAOA,WAAW,QAAO;AAEzB,SAASC,SAAS,QAAQ,6BAA4B;AACtD,SAASC,QAAQ,QAAQ,4BAA2B;AACpD,SAASC,UAAU,QAAQ,yBAAwB;AAmBnD,OAAO,MAAMC,iBAAiB,iBAAgB;AAE9C,OAAO,MAAMC,gBAA8C,CAAC,EAC1DC,EAAE,EACFC,IAAI,EACJC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,OAAO,EACPC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,UAAU,EACVC,QAAQ,EACRC,cAAc,EACdC,QAAQ,EACRC,QAAQ,EACT;IACC,qBACE,MAACC;QACCR,WAAW;YACTA;YACAR;YACAO,WAAW,CAAC,EAAEP,eAAe,SAAS,CAAC;YACvCc,YAAY,CAAC,EAAEd,eAAe,WAAW,CAAC;SAC3C,CACEiB,MAAM,CAACC,SACPC,IAAI,CAAC;;0BAER,MAACH;gBAAIR,WAAW,CAAC,EAAER,eAAe,OAAO,CAAC;;oBACvCK;kCACD,KAACe;wBACCC,cAAW;wBACXC,gBAAgBJ,QAAQX;wBACxBgB,UAAUT;wBACVZ,IAAIA;wBACJC,MAAMA;wBACNqB,SAASZ;wBACTa,KAAKhB;wBACLM,UAAUA;wBACVW,MAAK;;kCAEP,MAACC;wBACCnB,WAAW;4BAAC,CAAC,EAAER,eAAe,MAAM,CAAC;4BAAE,CAACO,WAAWM,iBAAiB,UAAU;yBAAU,CACrFI,MAAM,CAACC,SACPC,IAAI,CAAC;;4BAEPZ,yBAAW,KAACV;4BACZ,CAACU,WAAWM,gCAAkB,KAACf;;;oBAEjCM;;;0BAEH,KAACL;gBACCO,aAAaA;gBACbsB,SAAS1B;gBACTQ,OAAOA;gBACPK,UAAUA;gBACT,GAAIJ,cAAc,CAAC,CAAC;;;;AAI7B,EAAC"}