{"version":3,"sources":["../../../src/fields/Relationship/types.ts"],"sourcesContent":["import type { I18nClient } from '@payloadcms/translations'\nimport type { ClientCollectionConfig, RelationshipField, SanitizedConfig } from 'payload'\n\nimport type { FormFieldBase } from '../shared/index.js'\n\nexport type RelationshipFieldProps = {\n  allowCreate?: RelationshipField['admin']['allowCreate']\n  hasMany?: boolean\n  isSortable?: boolean\n  name: string\n  relationTo?: RelationshipField['relationTo']\n  sortOptions?: RelationshipField['admin']['sortOptions']\n  width?: string\n} & FormFieldBase\n\nexport type Option = {\n  label: string\n  options?: Option[]\n  relationTo?: string\n  value: number | string\n}\n\nexport type OptionGroup = {\n  label: string\n  options: Option[]\n}\n\nexport type ValueWithRelation = {\n  relationTo: string\n  value: number | string\n}\n\nexport type Value = ValueWithRelation | number | string\n\ntype CLEAR = {\n  type: 'CLEAR'\n}\n\ntype UPDATE = {\n  collection: ClientCollectionConfig\n  config: SanitizedConfig\n  doc: any\n  i18n: I18nClient\n  type: 'UPDATE'\n}\n\ntype ADD = {\n  collection: ClientCollectionConfig\n  config: SanitizedConfig\n  docs: any[]\n  i18n: I18nClient\n  ids?: (number | string)[]\n  sort?: boolean\n  type: 'ADD'\n}\n\nexport type Action = ADD | CLEAR | UPDATE\n\nexport type GetResults = (args: {\n  lastFullyLoadedRelation?: number\n  lastLoadedPage: Record<string, number>\n  onSuccess?: () => void\n  search?: string\n  sort?: boolean\n  value?: Value | Value[]\n}) => Promise<void>\n"],"names":[],"mappings":"AA0DA,WAOmB"}