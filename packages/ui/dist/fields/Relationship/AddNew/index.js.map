{"version":3,"sources":["../../../../src/fields/Relationship/AddNew/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientCollectionConfig } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React, { Fragment, useCallback, useEffect, useState } from 'react'\n\nimport type { DocumentInfoContext } from '../../../providers/DocumentInfo/types.js'\nimport type { Value } from '../types.js'\nimport type { Props } from './types.js'\n\nimport { Button } from '../../../elements/Button/index.js'\nimport { useDocumentDrawer } from '../../../elements/DocumentDrawer/index.js'\nimport * as PopupList from '../../../elements/Popup/PopupButtonList/index.js'\nimport { Popup } from '../../../elements/Popup/index.js'\nimport { Tooltip } from '../../../elements/Tooltip/index.js'\nimport { PlusIcon } from '../../../icons/Plus/index.js'\nimport { useAuth } from '../../../providers/Auth/index.js'\nimport { useTranslation } from '../../../providers/Translation/index.js'\nimport './index.scss'\nimport { useRelatedCollections } from './useRelatedCollections.js'\n\nconst baseClass = 'relationship-add-new'\n\nexport const AddNewRelation: React.FC<Props> = ({\n  // dispatchOptions,\n  hasMany,\n  path,\n  relationTo,\n  setValue,\n  value,\n}) => {\n  const relatedCollections = useRelatedCollections(relationTo)\n  const { permissions } = useAuth()\n  const [show, setShow] = useState(false)\n  const [selectedCollection, setSelectedCollection] = useState<string>()\n  const relatedToMany = relatedCollections.length > 1\n  const [collectionConfig, setCollectionConfig] = useState<ClientCollectionConfig>(() =>\n    !relatedToMany ? relatedCollections[0] : undefined,\n  )\n  const [popupOpen, setPopupOpen] = useState(false)\n  const { i18n, t } = useTranslation()\n  const [showTooltip, setShowTooltip] = useState(false)\n\n  const [DocumentDrawer, DocumentDrawerToggler, { isDrawerOpen, toggleDrawer }] = useDocumentDrawer(\n    {\n      collectionSlug: collectionConfig?.slug,\n    },\n  )\n\n  const onSave: DocumentInfoContext['onSave'] = useCallback(\n    ({ doc, operation }) => {\n      if (operation === 'create') {\n        const newValue: Value = Array.isArray(relationTo)\n          ? {\n              relationTo: collectionConfig?.slug,\n              value: doc.id,\n            }\n          : doc.id\n\n        // ensure the value is not already in the array\n        const isNewValue =\n          Array.isArray(relationTo) && Array.isArray(value)\n            ? !value.some((v) => v && typeof v === 'object' && v.value === doc.id)\n            : value !== doc.id\n\n        if (isNewValue) {\n          // dispatchOptions({\n          //   collection: collectionConfig,\n          //   // TODO: fix this\n          //   // @ts-expect-error-next-line\n          //   type: 'ADD',\n          //   config,\n          //   docs: [doc],\n          //   i18n,\n          //   sort: true,\n          // })\n\n          if (hasMany) {\n            setValue([...(Array.isArray(value) ? value : []), newValue])\n          } else {\n            setValue(newValue)\n          }\n        }\n\n        setSelectedCollection(undefined)\n      }\n    },\n    [relationTo, collectionConfig, hasMany, setValue, value],\n  )\n\n  const onPopupToggle = useCallback((state) => {\n    setPopupOpen(state)\n  }, [])\n\n  useEffect(() => {\n    if (permissions) {\n      if (relatedCollections.length === 1) {\n        setShow(permissions.collections[relatedCollections[0]?.slug]?.create?.permission)\n      } else {\n        setShow(\n          relatedCollections.some(\n            (collection) => permissions.collections[collection?.slug]?.create?.permission,\n          ),\n        )\n      }\n    }\n  }, [permissions, relatedCollections])\n\n  useEffect(() => {\n    if (relatedToMany && selectedCollection) {\n      setCollectionConfig(\n        relatedCollections.find((collection) => collection?.slug === selectedCollection),\n      )\n    }\n  }, [selectedCollection, relatedToMany, relatedCollections])\n\n  useEffect(() => {\n    if (relatedToMany && collectionConfig) {\n      // the drawer must be rendered on the page before before opening it\n      // this is why 'selectedCollection' is different from 'collectionConfig'\n      toggleDrawer()\n      setSelectedCollection(undefined)\n    }\n  }, [toggleDrawer, relatedToMany, collectionConfig])\n\n  useEffect(() => {\n    if (relatedToMany && !isDrawerOpen) {\n      setCollectionConfig(undefined)\n    }\n  }, [isDrawerOpen, relatedToMany])\n\n  if (show) {\n    return (\n      <div className={baseClass} id={`${path}-add-new`}>\n        {relatedCollections.length === 1 && (\n          <Fragment>\n            <DocumentDrawerToggler\n              className={`${baseClass}__add-button`}\n              onClick={() => setShowTooltip(false)}\n              onMouseEnter={() => setShowTooltip(true)}\n              onMouseLeave={() => setShowTooltip(false)}\n            >\n              <Tooltip className={`${baseClass}__tooltip`} show={showTooltip}>\n                {t('fields:addNewLabel', {\n                  label: getTranslation(relatedCollections[0].labels.singular, i18n),\n                })}\n              </Tooltip>\n              <PlusIcon />\n            </DocumentDrawerToggler>\n            <DocumentDrawer onSave={onSave} />\n          </Fragment>\n        )}\n        {relatedCollections.length > 1 && (\n          <Fragment>\n            <Popup\n              button={\n                <Button\n                  buttonStyle=\"none\"\n                  className={`${baseClass}__add-button`}\n                  tooltip={popupOpen ? undefined : t('fields:addNew')}\n                >\n                  <PlusIcon />\n                </Button>\n              }\n              buttonType=\"custom\"\n              horizontalAlign=\"center\"\n              onToggleOpen={onPopupToggle}\n              render={({ close: closePopup }) => (\n                <PopupList.ButtonGroup>\n                  {relatedCollections.map((relatedCollection) => {\n                    if (permissions.collections[relatedCollection?.slug].create.permission) {\n                      return (\n                        <PopupList.Button\n                          className={`${baseClass}__relation-button--${relatedCollection?.slug}`}\n                          key={relatedCollection?.slug}\n                          onClick={() => {\n                            closePopup()\n                            setSelectedCollection(relatedCollection?.slug)\n                          }}\n                        >\n                          {getTranslation(relatedCollection?.labels?.singular, i18n)}\n                        </PopupList.Button>\n                      )\n                    }\n\n                    return null\n                  })}\n                </PopupList.ButtonGroup>\n              )}\n              size=\"medium\"\n            />\n            {collectionConfig &&\n              permissions.collections[collectionConfig?.slug]?.create?.permission && (\n                <DocumentDrawer onSave={onSave} />\n              )}\n          </Fragment>\n        )}\n      </div>\n    )\n  }\n  return null\n}\n"],"names":["getTranslation","React","Fragment","useCallback","useEffect","useState","Button","useDocumentDrawer","PopupList","Popup","Tooltip","PlusIcon","useAuth","useTranslation","useRelatedCollections","baseClass","AddNewRelation","hasMany","path","relationTo","setValue","value","relatedCollections","permissions","show","setShow","selectedCollection","setSelectedCollection","relatedToMany","length","collectionConfig","setCollectionConfig","undefined","popupOpen","setPopupOpen","i18n","t","showTooltip","setShowTooltip","DocumentDrawer","DocumentDrawerToggler","isDrawerOpen","toggleDrawer","collectionSlug","slug","onSave","doc","operation","newValue","Array","isArray","id","isNewValue","some","v","onPopupToggle","state","collections","create","permission","collection","find","div","className","onClick","onMouseEnter","onMouseLeave","label","labels","singular","button","buttonStyle","tooltip","buttonType","horizontalAlign","onToggleOpen","render","close","closePopup","ButtonGroup","map","relatedCollection","size"],"mappings":"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"}