{"version":3,"sources":["../../../src/providers/ClientFunction/index.tsx"],"sourcesContent":["'use client'\nimport React from 'react'\n\ntype ModifyClientFunctionContextType = {\n  addClientFunction: (args: ModifyFunctionArgs) => void\n  removeClientFunction: (args: ModifyFunctionArgs) => void\n}\ntype ClientFunctionsContextType = Record<string, any>\n\nconst ModifyClientFunctionContext = React.createContext<ModifyClientFunctionContextType>({\n  addClientFunction: () => null,\n  removeClientFunction: () => null,\n})\nconst ClientFunctionsContext = React.createContext<ClientFunctionsContextType>({})\n\ntype ModifyFunctionArgs = { func: any; key: string }\n\nexport const ClientFunctionProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [clientFunctions, setClientFunctions] = React.useState({})\n\n  const addClientFunction = React.useCallback((args: ModifyFunctionArgs) => {\n    setClientFunctions((state) => {\n      const newState = { ...state }\n      newState[args.key] = args.func\n      return newState\n    })\n  }, [])\n\n  const removeClientFunction = React.useCallback((args: ModifyFunctionArgs) => {\n    setClientFunctions((state) => {\n      const newState = { ...state }\n      delete newState[args.key]\n      return newState\n    })\n  }, [])\n\n  return (\n    <ModifyClientFunctionContext.Provider\n      value={{\n        addClientFunction,\n        removeClientFunction,\n      }}\n    >\n      <ClientFunctionsContext.Provider value={clientFunctions}>\n        {children}\n      </ClientFunctionsContext.Provider>\n    </ModifyClientFunctionContext.Provider>\n  )\n}\n\nexport const useAddClientFunction = (key: string, func: any) => {\n  const { addClientFunction, removeClientFunction } = React.useContext(ModifyClientFunctionContext)\n\n  React.useEffect(() => {\n    addClientFunction({\n      func,\n      key,\n    })\n\n    return () => {\n      removeClientFunction({\n        func,\n        key,\n      })\n    }\n  }, [func, key, addClientFunction, removeClientFunction])\n}\n\nexport const useClientFunctions = () => {\n  return React.useContext(ClientFunctionsContext)\n}\n"],"names":["React","ModifyClientFunctionContext","createContext","addClientFunction","removeClientFunction","ClientFunctionsContext","ClientFunctionProvider","children","clientFunctions","setClientFunctions","useState","useCallback","args","state","newState","key","func","Provider","value","useAddClientFunction","useContext","useEffect","useClientFunctions"],"mappings":"AAAA;;AACA,OAAOA,WAAW,QAAO;AAQzB,MAAMC,4CAA8BD,MAAME,aAAa,CAAkC;IACvFC,mBAAmB,IAAM;IACzBC,sBAAsB,IAAM;AAC9B;AACA,MAAMC,uCAAyBL,MAAME,aAAa,CAA6B,CAAC;AAIhF,OAAO,MAAMI,yBAAkE,CAAC,EAAEC,QAAQ,EAAE;IAC1F,MAAM,CAACC,iBAAiBC,mBAAmB,GAAGT,MAAMU,QAAQ,CAAC,CAAC;IAE9D,MAAMP,oBAAoBH,MAAMW,WAAW,CAAC,CAACC;QAC3CH,mBAAmB,CAACI;YAClB,MAAMC,WAAW;gBAAE,GAAGD,KAAK;YAAC;YAC5BC,QAAQ,CAACF,KAAKG,GAAG,CAAC,GAAGH,KAAKI,IAAI;YAC9B,OAAOF;QACT;IACF,GAAG,EAAE;IAEL,MAAMV,uBAAuBJ,MAAMW,WAAW,CAAC,CAACC;QAC9CH,mBAAmB,CAACI;YAClB,MAAMC,WAAW;gBAAE,GAAGD,KAAK;YAAC;YAC5B,OAAOC,QAAQ,CAACF,KAAKG,GAAG,CAAC;YACzB,OAAOD;QACT;IACF,GAAG,EAAE;IAEL,qBACE,KAACb,4BAA4BgB,QAAQ;QACnCC,OAAO;YACLf;YACAC;QACF;kBAEA,cAAA,KAACC,uBAAuBY,QAAQ;YAACC,OAAOV;sBACrCD;;;AAIT,EAAC;AAED,OAAO,MAAMY,uBAAuB,CAACJ,KAAaC;IAChD,MAAM,EAAEb,iBAAiB,EAAEC,oBAAoB,EAAE,GAAGJ,MAAMoB,UAAU,CAACnB;IAErED,MAAMqB,SAAS,CAAC;QACdlB,kBAAkB;YAChBa;YACAD;QACF;QAEA,OAAO;YACLX,qBAAqB;gBACnBY;gBACAD;YACF;QACF;IACF,GAAG;QAACC;QAAMD;QAAKZ;QAAmBC;KAAqB;AACzD,EAAC;AAED,OAAO,MAAMkB,qBAAqB;IAChC,OAAOtB,MAAMoB,UAAU,CAACf;AAC1B,EAAC"}