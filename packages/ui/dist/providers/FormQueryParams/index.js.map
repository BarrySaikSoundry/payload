{"version":3,"sources":["../../../src/providers/FormQueryParams/index.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext } from 'react'\n\nimport type { Action, FormQueryParamsContext, State } from './types.js'\n\nimport { useLocale } from '../Locale/index.js'\n\nexport type * from './types.js'\n\nexport const FormQueryParams = createContext({} as FormQueryParamsContext)\n\nexport const FormQueryParamsProvider: React.FC<{\n  children: React.ReactNode\n  initialParams?: State\n}> = ({ children, initialParams: formQueryParamsFromProps }) => {\n  const [formQueryParams, dispatchFormQueryParams] = React.useReducer(\n    (state: State, action: Action) => {\n      const newState = { ...state }\n\n      switch (action.type) {\n        case 'SET':\n          if (action.params?.uploadEdits === null && newState?.uploadEdits) {\n            delete newState.uploadEdits\n          }\n          if (action.params?.uploadEdits?.crop === null && newState?.uploadEdits?.crop) {\n            delete newState.uploadEdits.crop\n          }\n          if (\n            action.params?.uploadEdits?.focalPoint === null &&\n            newState?.uploadEdits?.focalPoint\n          ) {\n            delete newState.uploadEdits.focalPoint\n          }\n          return {\n            ...newState,\n            ...action.params,\n          }\n        default:\n          return state\n      }\n    },\n    formQueryParamsFromProps || ({} as State),\n  )\n\n  const locale = useLocale()\n\n  React.useEffect(() => {\n    if (locale?.code) {\n      dispatchFormQueryParams({\n        type: 'SET',\n        params: {\n          locale: locale.code,\n        },\n      })\n    }\n  }, [locale.code])\n\n  return (\n    <FormQueryParams.Provider value={{ dispatchFormQueryParams, formQueryParams }}>\n      {children}\n    </FormQueryParams.Provider>\n  )\n}\n\nexport const useFormQueryParams = (): {\n  dispatchFormQueryParams: React.Dispatch<Action>\n  formQueryParams: State\n} => useContext(FormQueryParams)\n"],"names":["React","createContext","useContext","useLocale","FormQueryParams","FormQueryParamsProvider","children","initialParams","formQueryParamsFromProps","formQueryParams","dispatchFormQueryParams","useReducer","state","action","newState","type","params","uploadEdits","crop","focalPoint","locale","useEffect","code","Provider","value","useFormQueryParams"],"mappings":"AAAA;;AAEA,OAAOA,SAASC,aAAa,EAAEC,UAAU,QAAQ,QAAO;AAIxD,SAASC,SAAS,QAAQ,qBAAoB;AAI9C,OAAO,MAAMC,gCAAkBH,cAAc,CAAC,GAA4B;AAE1E,OAAO,MAAMI,0BAGR,CAAC,EAAEC,QAAQ,EAAEC,eAAeC,wBAAwB,EAAE;IACzD,MAAM,CAACC,iBAAiBC,wBAAwB,GAAGV,MAAMW,UAAU,CACjE,CAACC,OAAcC;QACb,MAAMC,WAAW;YAAE,GAAGF,KAAK;QAAC;QAE5B,OAAQC,OAAOE,IAAI;YACjB,KAAK;gBACH,IAAIF,OAAOG,MAAM,EAAEC,gBAAgB,QAAQH,UAAUG,aAAa;oBAChE,OAAOH,SAASG,WAAW;gBAC7B;gBACA,IAAIJ,OAAOG,MAAM,EAAEC,aAAaC,SAAS,QAAQJ,UAAUG,aAAaC,MAAM;oBAC5E,OAAOJ,SAASG,WAAW,CAACC,IAAI;gBAClC;gBACA,IACEL,OAAOG,MAAM,EAAEC,aAAaE,eAAe,QAC3CL,UAAUG,aAAaE,YACvB;oBACA,OAAOL,SAASG,WAAW,CAACE,UAAU;gBACxC;gBACA,OAAO;oBACL,GAAGL,QAAQ;oBACX,GAAGD,OAAOG,MAAM;gBAClB;YACF;gBACE,OAAOJ;QACX;IACF,GACAJ,4BAA6B,CAAC;IAGhC,MAAMY,SAASjB;IAEfH,MAAMqB,SAAS,CAAC;QACd,IAAID,QAAQE,MAAM;YAChBZ,wBAAwB;gBACtBK,MAAM;gBACNC,QAAQ;oBACNI,QAAQA,OAAOE,IAAI;gBACrB;YACF;QACF;IACF,GAAG;QAACF,OAAOE,IAAI;KAAC;IAEhB,qBACE,KAAClB,gBAAgBmB,QAAQ;QAACC,OAAO;YAAEd;YAAyBD;QAAgB;kBACzEH;;AAGP,EAAC;AAED,OAAO,MAAMmB,qBAAqB,IAG7BvB,WAAWE,iBAAgB"}