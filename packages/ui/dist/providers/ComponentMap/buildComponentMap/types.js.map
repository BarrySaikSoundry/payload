{"version":3,"sources":["../../../../src/providers/ComponentMap/buildComponentMap/types.ts"],"sourcesContent":["import type {\n  BlockField,\n  CellComponentProps,\n  FieldTypes,\n  SanitizedCollectionConfig,\n  SanitizedGlobalConfig,\n  TabsField,\n} from 'payload'\n\nimport type { ArrayFieldProps } from '../../../fields/Array/index.js'\nimport type { BlocksFieldProps } from '../../../fields/Blocks/index.js'\nimport type { CheckboxFieldProps } from '../../../fields/Checkbox/types.js'\nimport type { CodeFieldProps } from '../../../fields/Code/index.js'\nimport type { CollapsibleFieldProps } from '../../../fields/Collapsible/index.js'\nimport type { DateFieldProps } from '../../../fields/DateTime/index.js'\nimport type { EmailFieldProps } from '../../../fields/Email/index.js'\nimport type { GroupFieldProps } from '../../../fields/Group/index.js'\nimport type { HiddenInputFieldProps } from '../../../fields/Hidden/index.js'\nimport type { JSONFieldProps } from '../../../fields/JSON/index.js'\nimport type { NumberFieldProps } from '../../../fields/Number/index.js'\nimport type { PointFieldProps } from '../../../fields/Point/index.js'\nimport type { RelationshipFieldProps } from '../../../fields/Relationship/index.js'\nimport type { RichTextFieldProps } from '../../../fields/RichText/index.js'\nimport type { RowFieldProps } from '../../../fields/Row/types.js'\nimport type { SelectFieldProps } from '../../../fields/Select/index.js'\nimport type { TabsFieldProps } from '../../../fields/Tabs/index.js'\nimport type { TextFieldProps } from '../../../fields/Text/types.js'\nimport type { TextareaFieldProps } from '../../../fields/Textarea/types.js'\nimport type { UploadFieldProps } from '../../../fields/Upload/types.js'\n\nexport type MappedTab = {\n  fieldMap?: FieldMap\n  label: TabsField['tabs'][0]['label']\n  name?: string\n}\n\nexport type ReducedBlock = {\n  custom?: Record<any, string>\n  fieldMap: FieldMap\n  imageAltText?: string\n  imageURL?: string\n  labels: BlockField['labels']\n  slug: string\n}\n\nexport type FieldComponentProps =\n  | ArrayFieldProps\n  | BlocksFieldProps\n  | CheckboxFieldProps\n  | CodeFieldProps\n  | CollapsibleFieldProps\n  | DateFieldProps\n  | EmailFieldProps\n  | GroupFieldProps\n  | HiddenInputFieldProps\n  | JSONFieldProps\n  | NumberFieldProps\n  | PointFieldProps\n  | RelationshipFieldProps\n  | RichTextFieldProps\n  | RowFieldProps\n  | SelectFieldProps\n  | TabsFieldProps\n  | TextFieldProps\n  | TextareaFieldProps\n  | UploadFieldProps\n\nexport type MappedField = {\n  CustomCell?: React.ReactNode\n  CustomField?: React.ReactNode\n  cellComponentProps: CellComponentProps\n  custom?: Record<any, string>\n  disableBulkEdit?: boolean\n  disableListColumn?: boolean\n  disableListFilter?: boolean\n  disabled?: boolean\n  fieldComponentProps: FieldComponentProps\n  fieldIsPresentational: boolean\n  isFieldAffectingData: boolean\n  isHidden?: boolean\n  isSidebar?: boolean\n  localized: boolean\n  name?: string\n  type: keyof FieldTypes\n  unique?: boolean\n}\n\nexport type FieldMap = MappedField[]\n\nexport type ActionMap = {\n  Edit: {\n    [view: string]: React.ReactNode[]\n  }\n  List: React.ReactNode[]\n}\n\nexport type CollectionComponentMap = {\n  AfterList: React.ReactNode\n  AfterListTable: React.ReactNode\n  BeforeList: React.ReactNode\n  BeforeListTable: React.ReactNode\n  List: React.ReactNode\n} & ConfigComponentMapBase\n\nexport type GlobalComponentMap = ConfigComponentMapBase\n\nexport type ConfigComponentMapBase = {\n  Description: React.ReactNode\n  Edit: React.ReactNode\n  PreviewButton: React.ReactNode\n  PublishButton: React.ReactNode\n  SaveButton: React.ReactNode\n  SaveDraftButton: React.ReactNode\n  Upload: React.ReactNode\n  actionsMap: ActionMap\n  fieldMap: FieldMap\n  isPreviewEnabled: boolean\n}\n\nexport type ComponentMap = {\n  Icon: React.ReactNode\n  LogoutButton: React.ReactNode\n  actions: React.ReactNode[]\n  collections: {\n    [slug: SanitizedCollectionConfig['slug']]: CollectionComponentMap\n  }\n  globals: {\n    [slug: SanitizedGlobalConfig['slug']]: GlobalComponentMap\n  }\n}\n"],"names":[],"mappings":"AAuHA,WAUC"}