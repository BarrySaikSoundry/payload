{"version":3,"sources":["../../../src/providers/Params/index.tsx"],"sourcesContent":["'use client'\nimport type { Params } from 'next/dist/shared/lib/router/utils/route-matcher.js'\n\nimport { useParams as useNextParams } from 'next/navigation.js'\nimport React, { createContext, useContext } from 'react'\n\ninterface IParamsContext extends Params {}\n\nconst Context = createContext<IParamsContext>({} as IParamsContext)\n\n// TODO: abstract the `next/navigation` dependency out from this provider so that it can be used in other contexts\nexport const ParamsProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const params = useNextParams()\n  return <Context.Provider value={params}>{children}</Context.Provider>\n}\n\nexport const useParams = (): IParamsContext => useContext(Context)\n"],"names":["useParams","useNextParams","React","createContext","useContext","Context","ParamsProvider","children","params","Provider","value"],"mappings":"AAAA;;AAGA,SAASA,aAAaC,aAAa,QAAQ,qBAAoB;AAC/D,OAAOC,SAASC,aAAa,EAAEC,UAAU,QAAQ,QAAO;AAIxD,MAAMC,wBAAUF,cAA8B,CAAC;AAE/C,kHAAkH;AAClH,OAAO,MAAMG,iBAA2D,CAAC,EAAEC,QAAQ,EAAE;IACnF,MAAMC,SAASP;IACf,qBAAO,KAACI,QAAQI,QAAQ;QAACC,OAAOF;kBAASD;;AAC3C,EAAC;AAED,OAAO,MAAMP,YAAY,IAAsBI,WAAWC,SAAQ"}