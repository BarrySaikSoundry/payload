{"version":3,"sources":["../../../src/providers/SearchParams/index.tsx"],"sourcesContent":["'use client'\nimport { useSearchParams as useNextSearchParams } from 'next/navigation.js'\nimport * as qs from 'qs-esm'\nimport React, { createContext, useContext } from 'react'\n\nexport type SearchParamsContext = {\n  searchParams: qs.ParsedQs\n  stringifyParams: ({ params, replace }: { params: State; replace?: boolean }) => string\n}\n\nexport type State = qs.ParsedQs\n\nconst initialContext: SearchParamsContext = {\n  searchParams: {},\n  stringifyParams: () => '',\n}\n\nconst Context = createContext(initialContext)\n\nfunction createParams(search: string) {\n  return qs.parse(search, {\n    depth: 10,\n    ignoreQueryPrefix: true,\n  })\n}\n\n// TODO: abstract the `next/navigation` dependency out from this provider so that it can be used in other contexts\nexport const SearchParamsProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const nextSearchParams = useNextSearchParams()\n  const searchString = nextSearchParams.toString()\n  const initialParams = createParams(searchString)\n\n  const [searchParams, setSearchParams] = React.useState(initialParams)\n\n  const stringifyParams = React.useCallback(\n    ({ params, replace = false }: { params: State; replace?: boolean }) => {\n      return qs.stringify(\n        {\n          ...(replace ? {} : searchParams),\n          ...params,\n        },\n        { addQueryPrefix: true },\n      )\n    },\n    [searchParams],\n  )\n\n  React.useEffect(() => {\n    setSearchParams(createParams(searchString))\n  }, [searchString])\n\n  return <Context.Provider value={{ searchParams, stringifyParams }}>{children}</Context.Provider>\n}\n\nexport const useSearchParams = (): SearchParamsContext => useContext(Context)\n"],"names":["useSearchParams","useNextSearchParams","qs","React","createContext","useContext","initialContext","searchParams","stringifyParams","Context","createParams","search","parse","depth","ignoreQueryPrefix","SearchParamsProvider","children","nextSearchParams","searchString","toString","initialParams","setSearchParams","useState","useCallback","params","replace","stringify","addQueryPrefix","useEffect","Provider","value"],"mappings":"AAAA;;AACA,SAASA,mBAAmBC,mBAAmB,QAAQ,qBAAoB;AAC3E,YAAYC,QAAQ,SAAQ;AAC5B,OAAOC,SAASC,aAAa,EAAEC,UAAU,QAAQ,QAAO;AASxD,MAAMC,iBAAsC;IAC1CC,cAAc,CAAC;IACfC,iBAAiB,IAAM;AACzB;AAEA,MAAMC,wBAAUL,cAAcE;AAE9B,SAASI,aAAaC,MAAc;IAClC,OAAOT,GAAGU,KAAK,CAACD,QAAQ;QACtBE,OAAO;QACPC,mBAAmB;IACrB;AACF;AAEA,kHAAkH;AAClH,OAAO,MAAMC,uBAAiE,CAAC,EAAEC,QAAQ,EAAE;IACzF,MAAMC,mBAAmBhB;IACzB,MAAMiB,eAAeD,iBAAiBE,QAAQ;IAC9C,MAAMC,gBAAgBV,aAAaQ;IAEnC,MAAM,CAACX,cAAcc,gBAAgB,GAAGlB,MAAMmB,QAAQ,CAACF;IAEvD,MAAMZ,kBAAkBL,MAAMoB,WAAW,CACvC,CAAC,EAAEC,MAAM,EAAEC,UAAU,KAAK,EAAwC;QAChE,OAAOvB,GAAGwB,SAAS,CACjB;YACE,GAAID,UAAU,CAAC,IAAIlB,YAAY;YAC/B,GAAGiB,MAAM;QACX,GACA;YAAEG,gBAAgB;QAAK;IAE3B,GACA;QAACpB;KAAa;IAGhBJ,MAAMyB,SAAS,CAAC;QACdP,gBAAgBX,aAAaQ;IAC/B,GAAG;QAACA;KAAa;IAEjB,qBAAO,KAACT,QAAQoB,QAAQ;QAACC,OAAO;YAAEvB;YAAcC;QAAgB;kBAAIQ;;AACtE,EAAC;AAED,OAAO,MAAMhB,kBAAkB,IAA2BK,WAAWI,SAAQ"}