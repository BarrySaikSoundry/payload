{"version":3,"sources":["../../../src/providers/DocumentInfo/index.tsx"],"sourcesContent":["'use client'\nimport type {\n  Data,\n  DocumentPermissions,\n  DocumentPreferences,\n  FormState,\n  PaginatedDocs,\n  TypeWithID,\n  TypeWithTimestamps,\n  TypeWithVersion,\n  Where,\n} from 'payload'\n\nimport { notFound } from 'next/navigation.js'\nimport { reduceFieldsToValues } from 'payload/shared'\nimport * as qs from 'qs-esm'\nimport React, { createContext, useCallback, useContext, useEffect, useRef, useState } from 'react'\n\nimport type { DocumentInfoContext, DocumentInfoProps } from './types.js'\n\nimport { formatDocTitle } from '../../utilities/formatDocTitle.js'\nimport { getFormState } from '../../utilities/getFormState.js'\nimport { hasSavePermission as getHasSavePermission } from '../../utilities/hasSavePermission.js'\nimport { isEditing as getIsEditing } from '../../utilities/isEditing.js'\nimport { useAuth } from '../Auth/index.js'\nimport { useConfig } from '../Config/index.js'\nimport { useLocale } from '../Locale/index.js'\nimport { usePreferences } from '../Preferences/index.js'\nimport { useTranslation } from '../Translation/index.js'\n\nconst Context = createContext({} as DocumentInfoContext)\n\nexport type * from './types.js'\n\nexport const useDocumentInfo = (): DocumentInfoContext => useContext(Context)\n\nexport const DocumentInfoProvider: React.FC<\n  {\n    children: React.ReactNode\n  } & DocumentInfoProps\n> = ({ children, ...props }) => {\n  const {\n    id,\n    collectionSlug,\n    docPermissions: docPermissionsFromProps,\n    globalSlug,\n    hasPublishPermission: hasPublishPermissionFromProps,\n    hasSavePermission: hasSavePermissionFromProps,\n    initialData: initialDataFromProps,\n    initialState: initialStateFromProps,\n    onLoadError,\n    onSave: onSaveFromProps,\n  } = props\n\n  const {\n    admin: { dateFormat },\n    collections,\n    globals,\n    routes: { api },\n    serverURL,\n  } = useConfig()\n\n  const collectionConfig = collections.find((c) => c.slug === collectionSlug)\n  const globalConfig = globals.find((g) => g.slug === globalSlug)\n  const docConfig = collectionConfig || globalConfig\n\n  const { i18n } = useTranslation()\n\n  const [documentTitle, setDocumentTitle] = useState(() => {\n    if (!initialDataFromProps) return ''\n\n    return formatDocTitle({\n      collectionConfig,\n      data: { ...initialDataFromProps, id },\n      dateFormat,\n      fallback: id?.toString(),\n      globalConfig,\n      i18n,\n    })\n  })\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [isError, setIsError] = useState(false)\n  const [data, setData] = useState<Data>(initialDataFromProps)\n  const [initialState, setInitialState] = useState<FormState>(initialStateFromProps)\n  const [publishedDoc, setPublishedDoc] = useState<TypeWithID & TypeWithTimestamps>(null)\n  const [versions, setVersions] = useState<PaginatedDocs<TypeWithVersion<any>>>(null)\n  const [docPermissions, setDocPermissions] = useState<DocumentPermissions>(docPermissionsFromProps)\n  const [hasSavePermission, setHasSavePermission] = useState<boolean>(hasSavePermissionFromProps)\n  const [hasPublishPermission, setHasPublishPermission] = useState<boolean>(\n    hasPublishPermissionFromProps,\n  )\n  const isInitializing = initialState === undefined || data === undefined\n  const hasInitializedDocPermissions = useRef(false)\n  const [unpublishedVersions, setUnpublishedVersions] =\n    useState<PaginatedDocs<TypeWithVersion<any>>>(null)\n\n  const { getPreference, setPreference } = usePreferences()\n  const { permissions } = useAuth()\n  const { code: locale } = useLocale()\n  const prevLocale = useRef(locale)\n\n  const versionsConfig = docConfig?.versions\n\n  const baseURL = `${serverURL}${api}`\n  let slug: string\n  let preferencesKey: string\n\n  if (globalSlug) {\n    slug = globalSlug\n    preferencesKey = `global-${slug}`\n  }\n\n  if (collectionSlug) {\n    slug = collectionSlug\n\n    if (id) {\n      preferencesKey = `collection-${slug}-${id}`\n    }\n  }\n\n  const isEditing = getIsEditing({ id, collectionSlug, globalSlug })\n  const operation = isEditing ? 'update' : 'create'\n  const shouldFetchVersions = Boolean(versionsConfig && docPermissions?.readVersions?.permission)\n\n  const getVersions = useCallback(async () => {\n    let versionFetchURL\n    let publishedFetchURL\n    let unpublishedVersionJSON = null\n    let versionJSON = null\n    let shouldFetch = true\n\n    const versionParams = {\n      depth: 0,\n      where: {\n        and: [],\n      },\n    }\n\n    const publishedVersionParams: { depth: number; locale: string; where: Where } = {\n      depth: 0,\n      locale: locale || undefined,\n      where: {\n        and: [\n          {\n            or: [\n              {\n                _status: {\n                  equals: 'published',\n                },\n              },\n              {\n                _status: {\n                  exists: false,\n                },\n              },\n            ],\n          },\n        ],\n      },\n    }\n\n    if (globalSlug) {\n      versionFetchURL = `${baseURL}/globals/${globalSlug}/versions`\n      publishedFetchURL = `${baseURL}/globals/${globalSlug}?${qs.stringify(publishedVersionParams)}`\n    }\n\n    if (collectionSlug) {\n      versionFetchURL = `${baseURL}/${collectionSlug}/versions`\n\n      publishedVersionParams.where.and.push({\n        id: {\n          equals: id,\n        },\n      })\n\n      publishedFetchURL = `${baseURL}/${collectionSlug}?${qs.stringify(publishedVersionParams)}`\n\n      if (!id) {\n        shouldFetch = false\n      }\n\n      versionParams.where.and.push({\n        parent: {\n          equals: id,\n        },\n      })\n    }\n\n    if (shouldFetch) {\n      let publishedJSON\n\n      if (versionsConfig?.drafts) {\n        publishedJSON = await fetch(publishedFetchURL, {\n          credentials: 'include',\n          headers: {\n            'Accept-Language': i18n.language,\n          },\n        }).then((res) => res.json())\n\n        if (collectionSlug) {\n          publishedJSON = publishedJSON?.docs?.[0]\n        }\n      }\n\n      if (shouldFetchVersions) {\n        versionJSON = await fetch(`${versionFetchURL}?${qs.stringify(versionParams)}`, {\n          credentials: 'include',\n          headers: {\n            'Accept-Language': i18n.language,\n          },\n        }).then((res) => res.json())\n\n        if (publishedJSON?.updatedAt) {\n          const newerVersionParams = {\n            ...versionParams,\n            where: {\n              ...versionParams.where,\n              and: [\n                ...versionParams.where.and,\n                {\n                  updatedAt: {\n                    greater_than: publishedJSON?.updatedAt,\n                  },\n                },\n              ],\n            },\n          }\n\n          // Get any newer versions available\n          const newerVersionRes = await fetch(\n            `${versionFetchURL}?${qs.stringify(newerVersionParams)}`,\n            {\n              credentials: 'include',\n              headers: {\n                'Accept-Language': i18n.language,\n              },\n            },\n          )\n\n          if (newerVersionRes.status === 200) {\n            unpublishedVersionJSON = await newerVersionRes.json()\n          }\n        }\n      }\n\n      setPublishedDoc(publishedJSON)\n      setVersions(versionJSON)\n      setUnpublishedVersions(unpublishedVersionJSON)\n    }\n  }, [i18n, globalSlug, collectionSlug, id, baseURL, locale, versionsConfig, shouldFetchVersions])\n\n  const getDocPermissions = React.useCallback(\n    async (data: Data) => {\n      const params = {\n        locale: locale || undefined,\n      }\n\n      const newIsEditing = getIsEditing({ id: data?.id, collectionSlug, globalSlug })\n\n      if (newIsEditing) {\n        const docAccessURL = collectionSlug\n          ? `/${collectionSlug}/access/${data.id}`\n          : globalSlug\n            ? `/globals/${globalSlug}/access`\n            : null\n\n        if (docAccessURL) {\n          const res = await fetch(`${serverURL}${api}${docAccessURL}?${qs.stringify(params)}`, {\n            credentials: 'include',\n            headers: {\n              'Accept-Language': i18n.language,\n            },\n          })\n\n          const json: DocumentPermissions = await res.json()\n          const publishedAccessJSON = await fetch(\n            `${serverURL}${api}${docAccessURL}?${qs.stringify(params)}`,\n            {\n              body: JSON.stringify({\n                data: {\n                  ...(data || {}),\n                  _status: 'published',\n                },\n              }),\n              credentials: 'include',\n              headers: {\n                'Accept-Language': i18n.language,\n              },\n              method: 'POST',\n            },\n          ).then((res) => res.json())\n\n          setDocPermissions(json)\n\n          setHasSavePermission(\n            getHasSavePermission({\n              collectionSlug,\n              docPermissions: json,\n              globalSlug,\n              isEditing: newIsEditing,\n            }),\n          )\n\n          setHasPublishPermission(publishedAccessJSON?.update?.permission)\n        }\n      } else {\n        // when creating new documents, there is no permissions saved for this document yet\n        // use the generic entity permissions instead\n        const newDocPermissions = collectionSlug\n          ? permissions?.collections?.[collectionSlug]\n          : permissions?.globals?.[globalSlug]\n\n        setDocPermissions(newDocPermissions)\n\n        setHasSavePermission(\n          getHasSavePermission({\n            collectionSlug,\n            docPermissions: newDocPermissions,\n            globalSlug,\n            isEditing: newIsEditing,\n          }),\n        )\n      }\n    },\n    [serverURL, api, permissions, i18n.language, locale, collectionSlug, globalSlug],\n  )\n\n  const getDocPreferences = useCallback(() => {\n    return getPreference<DocumentPreferences>(preferencesKey)\n  }, [getPreference, preferencesKey])\n\n  const setDocFieldPreferences = useCallback<DocumentInfoContext['setDocFieldPreferences']>(\n    async (path, fieldPreferences) => {\n      const allPreferences = await getDocPreferences()\n\n      if (preferencesKey) {\n        try {\n          await setPreference(preferencesKey, {\n            ...allPreferences,\n            fields: {\n              ...(allPreferences?.fields || {}),\n              [path]: {\n                ...allPreferences?.fields?.[path],\n                ...fieldPreferences,\n              },\n            },\n          })\n        } catch (e) {\n          console.error(e) // eslint-disable-line no-console\n        }\n      }\n    },\n    [setPreference, preferencesKey, getDocPreferences],\n  )\n\n  const onSave = React.useCallback<DocumentInfoContext['onSave']>(\n    async (json) => {\n      if (typeof onSaveFromProps === 'function') {\n        void onSaveFromProps(json)\n      }\n\n      const docPreferences = await getDocPreferences()\n\n      const newData = collectionSlug ? json.doc : json.result\n\n      const newState = await getFormState({\n        apiRoute: api,\n        body: {\n          id,\n          collectionSlug,\n          data: newData,\n          docPreferences,\n          globalSlug,\n          locale,\n          operation,\n          schemaPath: collectionSlug || globalSlug,\n        },\n        serverURL,\n      })\n\n      setInitialState(newState)\n      setData(newData)\n      await getDocPermissions(newData)\n    },\n    [\n      api,\n      collectionSlug,\n      getDocPreferences,\n      globalSlug,\n      id,\n      operation,\n      locale,\n      onSaveFromProps,\n      serverURL,\n      getDocPermissions,\n    ],\n  )\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    const localeChanged = locale !== prevLocale.current\n\n    if (\n      initialStateFromProps === undefined ||\n      initialDataFromProps === undefined ||\n      localeChanged\n    ) {\n      if (localeChanged) prevLocale.current = locale\n\n      const getInitialState = async () => {\n        setIsError(false)\n        setIsLoading(true)\n\n        try {\n          const result = await getFormState({\n            apiRoute: api,\n            body: {\n              id,\n              collectionSlug,\n              globalSlug,\n              locale,\n              operation,\n              schemaPath: collectionSlug || globalSlug,\n            },\n            onError: onLoadError,\n            serverURL,\n            signal: abortController.signal,\n          })\n\n          setData(reduceFieldsToValues(result, true))\n          setInitialState(result)\n        } catch (err) {\n          if (!abortController.signal.aborted) {\n            if (typeof onLoadError === 'function') {\n              void onLoadError()\n            }\n            setIsError(true)\n            setIsLoading(false)\n          }\n        }\n        setIsLoading(false)\n      }\n\n      void getInitialState()\n    }\n\n    return () => {\n      abortController.abort()\n    }\n  }, [\n    api,\n    operation,\n    collectionSlug,\n    serverURL,\n    id,\n    globalSlug,\n    locale,\n    onLoadError,\n    initialDataFromProps,\n    initialStateFromProps,\n  ])\n\n  useEffect(() => {\n    void getVersions()\n  }, [getVersions])\n\n  useEffect(() => {\n    setDocumentTitle(\n      formatDocTitle({\n        collectionConfig,\n        data: { ...data, id },\n        dateFormat,\n        fallback: id?.toString(),\n        globalConfig,\n        i18n,\n      }),\n    )\n  }, [collectionConfig, data, dateFormat, i18n, id, globalConfig])\n\n  useEffect(() => {\n    const loadDocPermissions = async () => {\n      const docPermissions: DocumentPermissions = docPermissionsFromProps\n      const hasSavePermission: boolean = hasSavePermissionFromProps\n      const hasPublishPermission: boolean = hasPublishPermissionFromProps\n\n      if (\n        !docPermissions ||\n        hasSavePermission === undefined ||\n        hasSavePermission === null ||\n        hasPublishPermission === undefined ||\n        hasPublishPermission === null\n      ) {\n        await getDocPermissions(data)\n      }\n    }\n\n    if (!hasInitializedDocPermissions.current && data && (collectionSlug || globalSlug)) {\n      hasInitializedDocPermissions.current = true\n      void loadDocPermissions()\n    }\n  }, [\n    getDocPermissions,\n    docPermissionsFromProps,\n    hasSavePermissionFromProps,\n    hasPublishPermissionFromProps,\n    setDocPermissions,\n    collectionSlug,\n    globalSlug,\n    data,\n  ])\n\n  if (isError) notFound()\n\n  const value: DocumentInfoContext = {\n    ...props,\n    docConfig,\n    docPermissions,\n    getDocPermissions,\n    getDocPreferences,\n    getVersions,\n    hasPublishPermission,\n    hasSavePermission,\n    initialData: data,\n    initialState,\n    isInitializing,\n    isLoading,\n    onSave,\n    publishedDoc,\n    setDocFieldPreferences,\n    setDocumentTitle,\n    title: documentTitle,\n    unpublishedVersions,\n    versions,\n  }\n\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n"],"names":["notFound","reduceFieldsToValues","qs","React","createContext","useCallback","useContext","useEffect","useRef","useState","formatDocTitle","getFormState","hasSavePermission","getHasSavePermission","isEditing","getIsEditing","useAuth","useConfig","useLocale","usePreferences","useTranslation","Context","useDocumentInfo","DocumentInfoProvider","children","props","id","collectionSlug","docPermissions","docPermissionsFromProps","globalSlug","hasPublishPermission","hasPublishPermissionFromProps","hasSavePermissionFromProps","initialData","initialDataFromProps","initialState","initialStateFromProps","onLoadError","onSave","onSaveFromProps","admin","dateFormat","collections","globals","routes","api","serverURL","collectionConfig","find","c","slug","globalConfig","g","docConfig","i18n","documentTitle","setDocumentTitle","data","fallback","toString","isLoading","setIsLoading","isError","setIsError","setData","setInitialState","publishedDoc","setPublishedDoc","versions","setVersions","setDocPermissions","setHasSavePermission","setHasPublishPermission","isInitializing","undefined","hasInitializedDocPermissions","unpublishedVersions","setUnpublishedVersions","getPreference","setPreference","permissions","code","locale","prevLocale","versionsConfig","baseURL","preferencesKey","operation","shouldFetchVersions","Boolean","readVersions","permission","getVersions","versionFetchURL","publishedFetchURL","unpublishedVersionJSON","versionJSON","shouldFetch","versionParams","depth","where","and","publishedVersionParams","or","_status","equals","exists","stringify","push","parent","publishedJSON","drafts","fetch","credentials","headers","language","then","res","json","docs","updatedAt","newerVersionParams","greater_than","newerVersionRes","status","getDocPermissions","params","newIsEditing","docAccessURL","publishedAccessJSON","body","JSON","method","update","newDocPermissions","getDocPreferences","setDocFieldPreferences","path","fieldPreferences","allPreferences","fields","e","console","error","docPreferences","newData","doc","result","newState","apiRoute","schemaPath","abortController","AbortController","localeChanged","current","getInitialState","onError","signal","err","aborted","abort","loadDocPermissions","value","title","Provider"],"mappings":"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"}