{"version":3,"sources":["../../../src/providers/Locale/index.tsx"],"sourcesContent":["'use client'\n\nimport type { Locale } from 'payload'\n\nimport React, { createContext, useContext, useEffect, useState } from 'react'\n\nimport { findLocaleFromCode } from '../../utilities/findLocaleFromCode.js'\nimport { useAuth } from '../Auth/index.js'\nimport { useConfig } from '../Config/index.js'\nimport { usePreferences } from '../Preferences/index.js'\nimport { useSearchParams } from '../SearchParams/index.js'\n\nconst LocaleContext = createContext({} as Locale)\n\nexport const LocaleProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const { localization } = useConfig()\n\n  const { user } = useAuth()\n  const defaultLocale =\n    localization && localization.defaultLocale ? localization.defaultLocale : 'en'\n\n  const { searchParams } = useSearchParams()\n  const localeFromParams = searchParams?.locale\n\n  const [localeCode, setLocaleCode] = useState<string>(\n    (localeFromParams as string) || defaultLocale,\n  )\n\n  const [locale, setLocale] = useState<Locale | null>(\n    localization && findLocaleFromCode(localization, localeCode),\n  )\n\n  const { getPreference, setPreference } = usePreferences()\n\n  const switchLocale = React.useCallback(\n    async (newLocale: string) => {\n      if (!localization) {\n        return\n      }\n\n      const localeToSet =\n        localization.localeCodes.indexOf(newLocale) > -1 ? newLocale : defaultLocale\n\n      if (localeToSet !== localeCode) {\n        setLocaleCode(localeToSet)\n        setLocale(findLocaleFromCode(localization, localeToSet))\n        try {\n          if (user) await setPreference('locale', localeToSet)\n        } catch (error) {\n          // swallow error\n        }\n      }\n    },\n    [localization, setPreference, user, defaultLocale, localeCode],\n  )\n\n  useEffect(() => {\n    async function setInitialLocale() {\n      let localeToSet = defaultLocale\n\n      if (typeof localeFromParams === 'string') {\n        localeToSet = localeFromParams\n      } else if (user) {\n        try {\n          localeToSet = await getPreference<string>('locale')\n        } catch (error) {\n          // swallow error\n        }\n      }\n\n      await switchLocale(localeToSet)\n    }\n\n    void setInitialLocale()\n  }, [\n    defaultLocale,\n    getPreference,\n    localization,\n    localeFromParams,\n    setPreference,\n    user,\n    switchLocale,\n  ])\n\n  return <LocaleContext.Provider value={locale}>{children}</LocaleContext.Provider>\n}\n\n/**\n * A hook that returns the current locale object.\n */\nexport const useLocale = (): Locale => useContext(LocaleContext)\n"],"names":["React","createContext","useContext","useEffect","useState","findLocaleFromCode","useAuth","useConfig","usePreferences","useSearchParams","LocaleContext","LocaleProvider","children","localization","user","defaultLocale","searchParams","localeFromParams","locale","localeCode","setLocaleCode","setLocale","getPreference","setPreference","switchLocale","useCallback","newLocale","localeToSet","localeCodes","indexOf","error","setInitialLocale","Provider","value","useLocale"],"mappings":"AAAA;;AAIA,OAAOA,SAASC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,QAAO;AAE7E,SAASC,kBAAkB,QAAQ,wCAAuC;AAC1E,SAASC,OAAO,QAAQ,mBAAkB;AAC1C,SAASC,SAAS,QAAQ,qBAAoB;AAC9C,SAASC,cAAc,QAAQ,0BAAyB;AACxD,SAASC,eAAe,QAAQ,2BAA0B;AAE1D,MAAMC,8BAAgBT,cAAc,CAAC;AAErC,OAAO,MAAMU,iBAA2D,CAAC,EAAEC,QAAQ,EAAE;IACnF,MAAM,EAAEC,YAAY,EAAE,GAAGN;IAEzB,MAAM,EAAEO,IAAI,EAAE,GAAGR;IACjB,MAAMS,gBACJF,gBAAgBA,aAAaE,aAAa,GAAGF,aAAaE,aAAa,GAAG;IAE5E,MAAM,EAAEC,YAAY,EAAE,GAAGP;IACzB,MAAMQ,mBAAmBD,cAAcE;IAEvC,MAAM,CAACC,YAAYC,cAAc,GAAGhB,SAClC,AAACa,oBAA+BF;IAGlC,MAAM,CAACG,QAAQG,UAAU,GAAGjB,SAC1BS,gBAAgBR,mBAAmBQ,cAAcM;IAGnD,MAAM,EAAEG,aAAa,EAAEC,aAAa,EAAE,GAAGf;IAEzC,MAAMgB,eAAexB,MAAMyB,WAAW,CACpC,OAAOC;QACL,IAAI,CAACb,cAAc;YACjB;QACF;QAEA,MAAMc,cACJd,aAAae,WAAW,CAACC,OAAO,CAACH,aAAa,CAAC,IAAIA,YAAYX;QAEjE,IAAIY,gBAAgBR,YAAY;YAC9BC,cAAcO;YACdN,UAAUhB,mBAAmBQ,cAAcc;YAC3C,IAAI;gBACF,IAAIb,MAAM,MAAMS,cAAc,UAAUI;YAC1C,EAAE,OAAOG,OAAO;YACd,gBAAgB;YAClB;QACF;IACF,GACA;QAACjB;QAAcU;QAAeT;QAAMC;QAAeI;KAAW;IAGhEhB,UAAU;QACR,eAAe4B;YACb,IAAIJ,cAAcZ;YAElB,IAAI,OAAOE,qBAAqB,UAAU;gBACxCU,cAAcV;YAChB,OAAO,IAAIH,MAAM;gBACf,IAAI;oBACFa,cAAc,MAAML,cAAsB;gBAC5C,EAAE,OAAOQ,OAAO;gBACd,gBAAgB;gBAClB;YACF;YAEA,MAAMN,aAAaG;QACrB;QAEA,KAAKI;IACP,GAAG;QACDhB;QACAO;QACAT;QACAI;QACAM;QACAT;QACAU;KACD;IAED,qBAAO,KAACd,cAAcsB,QAAQ;QAACC,OAAOf;kBAASN;;AACjD,EAAC;AAED;;CAEC,GACD,OAAO,MAAMsB,YAAY,IAAchC,WAAWQ,eAAc"}