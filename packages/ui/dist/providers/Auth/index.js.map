{"version":3,"sources":["../../../src/providers/Auth/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientUser, MeOperationResult, Permissions } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport { usePathname, useRouter } from 'next/navigation.js'\nimport * as qs from 'qs-esm'\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react'\nimport { toast } from 'sonner'\n\nimport { stayLoggedInModalSlug } from '../../elements/StayLoggedIn/index.js'\nimport { useDebounce } from '../../hooks/useDebounce.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { requests } from '../../utilities/api.js'\nimport { useConfig } from '../Config/index.js'\nimport { useSearchParams } from '../SearchParams/index.js'\n\nexport type AuthContext<T = ClientUser> = {\n  fetchFullUser: () => Promise<void>\n  logOut: () => void\n  permissions?: Permissions\n  refreshCookie: (forceRefresh?: boolean) => void\n  refreshCookieAsync: () => Promise<ClientUser>\n  refreshPermissions: () => Promise<void>\n  setPermissions: (permissions: Permissions) => void\n  setUser: (user: T) => void\n  strategy?: string\n  token?: string\n  tokenExpiration?: number\n  user?: T | null\n}\n\nconst Context = createContext({} as AuthContext)\n\nconst maxTimeoutTime = 2147483647\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { searchParams } = useSearchParams()\n  const [user, setUser] = useState<ClientUser | null>()\n  const [tokenInMemory, setTokenInMemory] = useState<string>()\n  const [tokenExpiration, setTokenExpiration] = useState<number>()\n  const [strategy, setStrategy] = useState<string>()\n  const pathname = usePathname()\n  const router = useRouter()\n  // const { code } = useLocale()\n  const code = 'en' // TODO: re-enable i18n asap\n\n  const config = useConfig()\n\n  const {\n    admin: {\n      autoLogin,\n      routes: { inactivity: logoutInactivityRoute },\n      routes: { login: loginRoute },\n      user: userSlug,\n    },\n    routes: { admin, api },\n    serverURL,\n  } = config\n\n  const [permissions, setPermissions] = useState<Permissions>()\n\n  const { i18n } = useTranslation()\n  const { closeAllModals, openModal } = useModal()\n  const [lastLocationChange, setLastLocationChange] = useState(0)\n  const debouncedLocationChange = useDebounce(lastLocationChange, 10000)\n\n  const id = user?.id\n\n  const redirectToInactivityRoute = useCallback(() => {\n    if (window.location.pathname.startsWith(admin)) {\n      const redirectParam = `?redirect=${encodeURIComponent(window.location.pathname)}`\n      router.replace(`${admin}${logoutInactivityRoute}${redirectParam}`)\n    } else {\n      router.replace(`${admin}${logoutInactivityRoute}`)\n    }\n    closeAllModals()\n  }, [router, admin, logoutInactivityRoute, closeAllModals])\n\n  const revokeTokenAndExpire = useCallback(() => {\n    setTokenInMemory(undefined)\n    setTokenExpiration(undefined)\n    setStrategy(undefined)\n  }, [])\n\n  const setTokenAndExpiration = useCallback(\n    (json) => {\n      const token = json?.token || json?.refreshedToken\n      if (token && json?.exp) {\n        setTokenInMemory(token)\n        setTokenExpiration(json.exp)\n        if (json.strategy) setStrategy(json.strategy)\n      } else {\n        revokeTokenAndExpire()\n      }\n    },\n    [revokeTokenAndExpire],\n  )\n\n  const refreshCookie = useCallback(\n    (forceRefresh?: boolean) => {\n      const now = Math.round(new Date().getTime() / 1000)\n      const remainingTime = (typeof tokenExpiration === 'number' ? tokenExpiration : 0) - now\n\n      if (forceRefresh || (tokenExpiration && remainingTime < 120)) {\n        setTimeout(async () => {\n          try {\n            const request = await requests.post(`${serverURL}${api}/${userSlug}/refresh-token`, {\n              headers: {\n                'Accept-Language': i18n.language,\n              },\n            })\n\n            if (request.status === 200) {\n              const json = await request.json()\n              setUser(json.user)\n\n              setTokenAndExpiration(json)\n            } else {\n              setUser(null)\n              redirectToInactivityRoute()\n            }\n          } catch (e) {\n            toast.error(e.message)\n          }\n        }, 1000)\n      }\n    },\n    [\n      tokenExpiration,\n      serverURL,\n      api,\n      userSlug,\n      i18n,\n      redirectToInactivityRoute,\n      setTokenAndExpiration,\n    ],\n  )\n\n  const refreshCookieAsync = useCallback(\n    async (skipSetUser?: boolean): Promise<ClientUser> => {\n      try {\n        const request = await requests.post(`${serverURL}${api}/${userSlug}/refresh-token`, {\n          headers: {\n            'Accept-Language': i18n.language,\n          },\n        })\n\n        if (request.status === 200) {\n          const json = await request.json()\n          if (!skipSetUser) {\n            setUser(json.user)\n            setTokenAndExpiration(json)\n          }\n          return json.user\n        }\n\n        setUser(null)\n        redirectToInactivityRoute()\n        return null\n      } catch (e) {\n        toast.error(`Refreshing token failed: ${e.message}`)\n        return null\n      }\n    },\n    [serverURL, api, userSlug, i18n, redirectToInactivityRoute, setTokenAndExpiration],\n  )\n\n  const logOut = useCallback(async () => {\n    setUser(null)\n    revokeTokenAndExpire()\n    try {\n      await requests.post(`${serverURL}${api}/${userSlug}/logout`)\n    } catch (e) {\n      toast.error(`Logging out failed: ${e.message}`)\n    }\n  }, [serverURL, api, userSlug, revokeTokenAndExpire])\n\n  const refreshPermissions = useCallback(async () => {\n    const params = {\n      locale: code,\n    }\n\n    try {\n      const request = await requests.get(`${serverURL}${api}/access?${qs.stringify(params)}`, {\n        headers: {\n          'Accept-Language': i18n.language,\n        },\n      })\n\n      if (request.status === 200) {\n        const json: Permissions = await request.json()\n        setPermissions(json)\n      } else {\n        throw new Error(`Fetching permissions failed with status code ${request.status}`)\n      }\n    } catch (e) {\n      toast.error(`Refreshing permissions failed: ${e.message}`)\n    }\n  }, [serverURL, api, i18n, code])\n\n  const fetchFullUser = React.useCallback(async () => {\n    try {\n      const request = await requests.get(`${serverURL}${api}/${userSlug}/me`, {\n        headers: {\n          'Accept-Language': i18n.language,\n        },\n      })\n\n      if (request.status === 200) {\n        const json: MeOperationResult = await request.json()\n\n        if (json?.user) {\n          setUser(json.user)\n\n          if (json?.token) {\n            setTokenAndExpiration(json)\n          }\n        } else if (autoLogin && autoLogin.prefillOnly !== true) {\n          // auto log-in with the provided autoLogin credentials. This is used in dev mode\n          // so you don't have to log in over and over again\n          const autoLoginResult = await requests.post(\n            `${serverURL}${api}/${userSlug}${loginRoute}`,\n            {\n              body: JSON.stringify({\n                email: autoLogin.email,\n                password: autoLogin.password,\n                username: autoLogin.username,\n              }),\n              headers: {\n                'Accept-Language': i18n.language,\n                'Content-Type': 'application/json',\n              },\n            },\n          )\n          if (autoLoginResult.status === 200) {\n            const autoLoginJson = await autoLoginResult.json()\n            setUser(autoLoginJson.user)\n            if (autoLoginJson?.token) {\n              setTokenAndExpiration(autoLoginJson)\n            }\n            router.replace(\n              typeof searchParams['redirect'] === 'string' ? searchParams['redirect'] : admin,\n            )\n          } else {\n            setUser(null)\n            revokeTokenAndExpire()\n          }\n        } else {\n          setUser(null)\n          revokeTokenAndExpire()\n        }\n      }\n    } catch (e) {\n      toast.error(`Fetching user failed: ${e.message}`)\n    }\n  }, [\n    serverURL,\n    api,\n    userSlug,\n    i18n.language,\n    autoLogin,\n    setTokenAndExpiration,\n    router,\n    searchParams,\n    admin,\n    revokeTokenAndExpire,\n    strategy,\n    tokenExpiration,\n    loginRoute,\n  ])\n\n  // On mount, get user and set\n  useEffect(() => {\n    void fetchFullUser()\n  }, [fetchFullUser])\n\n  // When location changes, refresh cookie\n  useEffect(() => {\n    if (id) {\n      refreshCookie()\n    }\n  }, [debouncedLocationChange, refreshCookie, id])\n\n  useEffect(() => {\n    setLastLocationChange(Date.now())\n  }, [pathname])\n\n  useEffect(() => {\n    let reminder: ReturnType<typeof setTimeout>\n    const now = Math.round(new Date().getTime() / 1000)\n    const remainingTime = typeof tokenExpiration === 'number' ? tokenExpiration - now : 0\n\n    if (remainingTime > 0) {\n      reminder = setTimeout(\n        () => {\n          openModal(stayLoggedInModalSlug)\n        },\n        Math.max(Math.min((remainingTime - 60) * 1000, maxTimeoutTime)),\n      )\n    }\n\n    return () => {\n      if (reminder) clearTimeout(reminder)\n    }\n  }, [tokenExpiration, openModal])\n\n  useEffect(() => {\n    let forceLogOut: ReturnType<typeof setTimeout>\n    const now = Math.round(new Date().getTime() / 1000)\n    const remainingTime = typeof tokenExpiration === 'number' ? tokenExpiration - now : 0\n\n    if (remainingTime > 0) {\n      forceLogOut = setTimeout(\n        () => {\n          setUser(null)\n          revokeTokenAndExpire()\n          redirectToInactivityRoute()\n        },\n        Math.max(Math.min(remainingTime * 1000, maxTimeoutTime), 0),\n      )\n    }\n\n    return () => {\n      if (forceLogOut) clearTimeout(forceLogOut)\n    }\n  }, [tokenExpiration, closeAllModals, i18n, redirectToInactivityRoute, revokeTokenAndExpire])\n\n  return (\n    <Context.Provider\n      value={{\n        fetchFullUser,\n        logOut,\n        permissions,\n        refreshCookie,\n        refreshCookieAsync,\n        refreshPermissions,\n        setPermissions,\n        setUser,\n        token: tokenInMemory,\n        user,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport const useAuth = <T = ClientUser,>(): AuthContext<T> => useContext(Context) as AuthContext<T>\n"],"names":["useModal","usePathname","useRouter","qs","React","createContext","useCallback","useContext","useEffect","useState","toast","stayLoggedInModalSlug","useDebounce","useTranslation","requests","useConfig","useSearchParams","Context","maxTimeoutTime","AuthProvider","children","searchParams","user","setUser","tokenInMemory","setTokenInMemory","tokenExpiration","setTokenExpiration","strategy","setStrategy","pathname","router","code","config","admin","autoLogin","routes","inactivity","logoutInactivityRoute","login","loginRoute","userSlug","api","serverURL","permissions","setPermissions","i18n","closeAllModals","openModal","lastLocationChange","setLastLocationChange","debouncedLocationChange","id","redirectToInactivityRoute","window","location","startsWith","redirectParam","encodeURIComponent","replace","revokeTokenAndExpire","undefined","setTokenAndExpiration","json","token","refreshedToken","exp","refreshCookie","forceRefresh","now","Math","round","Date","getTime","remainingTime","setTimeout","request","post","headers","language","status","e","error","message","refreshCookieAsync","skipSetUser","logOut","refreshPermissions","params","locale","get","stringify","Error","fetchFullUser","prefillOnly","autoLoginResult","body","JSON","email","password","username","autoLoginJson","reminder","max","min","clearTimeout","forceLogOut","Provider","value","useAuth"],"mappings":"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"}