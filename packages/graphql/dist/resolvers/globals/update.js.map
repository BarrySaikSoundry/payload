{"version":3,"sources":["../../../src/resolvers/globals/update.ts"],"sourcesContent":["import type { DataFromGlobalSlug, GlobalSlug, PayloadRequest, SanitizedGlobalConfig } from 'payload'\nimport type { DeepPartial } from 'ts-essentials'\n\nimport { isolateObjectProperty, updateOperationGlobal } from 'payload'\n\nimport type { Context } from '../types.js'\n\ntype Resolver<TSlug extends GlobalSlug> = (\n  _: unknown,\n  args: {\n    data?: DeepPartial<Omit<DataFromGlobalSlug<TSlug>, 'id'>>\n    draft?: boolean\n    fallbackLocale?: string\n    locale?: string\n  },\n  context: {\n    req: PayloadRequest\n  },\n) => Promise<DataFromGlobalSlug<TSlug>>\n\nexport default function updateResolver<TSlug extends GlobalSlug>(\n  globalConfig: SanitizedGlobalConfig,\n): Resolver<TSlug> {\n  return async function resolver(_, args, context: Context) {\n    if (args.locale) context.req.locale = args.locale\n    if (args.fallbackLocale) context.req.fallbackLocale = args.fallbackLocale\n\n    const { slug } = globalConfig\n\n    const options = {\n      slug,\n      data: args.data,\n      depth: 0,\n      draft: args.draft,\n      globalConfig,\n      req: isolateObjectProperty(context.req, 'transactionID'),\n    }\n\n    const result = await updateOperationGlobal<TSlug>(options)\n    return result\n  }\n}\n"],"names":["isolateObjectProperty","updateOperationGlobal","updateResolver","globalConfig","resolver","_","args","context","locale","req","fallbackLocale","slug","options","data","depth","draft","result"],"mappings":"AAGA,SAASA,qBAAqB,EAAEC,qBAAqB,QAAQ,UAAS;AAiBtE,eAAe,SAASC,eACtBC,YAAmC;IAEnC,OAAO,eAAeC,SAASC,CAAC,EAAEC,IAAI,EAAEC,OAAgB;QACtD,IAAID,KAAKE,MAAM,EAAED,QAAQE,GAAG,CAACD,MAAM,GAAGF,KAAKE,MAAM;QACjD,IAAIF,KAAKI,cAAc,EAAEH,QAAQE,GAAG,CAACC,cAAc,GAAGJ,KAAKI,cAAc;QAEzE,MAAM,EAAEC,IAAI,EAAE,GAAGR;QAEjB,MAAMS,UAAU;YACdD;YACAE,MAAMP,KAAKO,IAAI;YACfC,OAAO;YACPC,OAAOT,KAAKS,KAAK;YACjBZ;YACAM,KAAKT,sBAAsBO,QAAQE,GAAG,EAAE;QAC1C;QAEA,MAAMO,SAAS,MAAMf,sBAA6BW;QAClD,OAAOI;IACT;AACF"}