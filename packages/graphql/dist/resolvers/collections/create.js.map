{"version":3,"sources":["../../../src/resolvers/collections/create.ts"],"sourcesContent":["import type {\n  Collection,\n  CollectionSlug,\n  DataFromCollectionSlug,\n  PayloadRequest,\n  RequiredDataFromCollectionSlug,\n} from 'payload'\n\nimport { createOperation, isolateObjectProperty } from 'payload'\n\nimport type { Context } from '../types.js'\n\nexport type Resolver<TSlug extends CollectionSlug> = (\n  _: unknown,\n  args: {\n    data: RequiredDataFromCollectionSlug<TSlug>\n    draft: boolean\n    locale?: string\n  },\n  context: {\n    req: PayloadRequest\n  },\n) => Promise<DataFromCollectionSlug<TSlug>>\n\nexport default function createResolver<TSlug extends CollectionSlug>(\n  collection: Collection,\n): Resolver<TSlug> {\n  return async function resolver(_, args, context: Context) {\n    if (args.locale) {\n      context.req.locale = args.locale\n    }\n\n    const options = {\n      collection,\n      data: args.data,\n      depth: 0,\n      draft: args.draft,\n      req: isolateObjectProperty(context.req, 'transactionID'),\n    }\n\n    const result = await createOperation(options)\n\n    return result\n  }\n}\n"],"names":["createOperation","isolateObjectProperty","createResolver","collection","resolver","_","args","context","locale","req","options","data","depth","draft","result"],"mappings":"AAQA,SAASA,eAAe,EAAEC,qBAAqB,QAAQ,UAAS;AAgBhE,eAAe,SAASC,eACtBC,UAAsB;IAEtB,OAAO,eAAeC,SAASC,CAAC,EAAEC,IAAI,EAAEC,OAAgB;QACtD,IAAID,KAAKE,MAAM,EAAE;YACfD,QAAQE,GAAG,CAACD,MAAM,GAAGF,KAAKE,MAAM;QAClC;QAEA,MAAME,UAAU;YACdP;YACAQ,MAAML,KAAKK,IAAI;YACfC,OAAO;YACPC,OAAOP,KAAKO,KAAK;YACjBJ,KAAKR,sBAAsBM,QAAQE,GAAG,EAAE;QAC1C;QAEA,MAAMK,SAAS,MAAMd,gBAAgBU;QAErC,OAAOI;IACT;AACF"}