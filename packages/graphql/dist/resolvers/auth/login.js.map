{"version":3,"sources":["../../../src/resolvers/auth/login.ts"],"sourcesContent":["import type { Collection } from 'payload'\n\nimport { generatePayloadCookie, isolateObjectProperty, loginOperation } from 'payload'\n\nimport type { Context } from '../types.js'\n\nfunction loginResolver(collection: Collection): any {\n  async function resolver(_, args, context: Context) {\n    const options = {\n      collection,\n      data: {\n        email: args.email,\n        password: args.password,\n        username: args.username,\n      },\n      depth: 0,\n      req: isolateObjectProperty(context.req, 'transactionID'),\n    }\n\n    const result = await loginOperation(options)\n    const cookie = generatePayloadCookie({\n      collectionConfig: collection.config,\n      payload: context.req.payload,\n      token: result.token,\n    })\n\n    context.headers['Set-Cookie'] = cookie\n\n    if (collection.config.auth.removeTokenFromResponses) {\n      delete result.token\n    }\n\n    return result\n  }\n\n  return resolver\n}\n\nexport default loginResolver\n"],"names":["generatePayloadCookie","isolateObjectProperty","loginOperation","loginResolver","collection","resolver","_","args","context","options","data","email","password","username","depth","req","result","cookie","collectionConfig","config","payload","token","headers","auth","removeTokenFromResponses"],"mappings":"AAEA,SAASA,qBAAqB,EAAEC,qBAAqB,EAAEC,cAAc,QAAQ,UAAS;AAItF,SAASC,cAAcC,UAAsB;IAC3C,eAAeC,SAASC,CAAC,EAAEC,IAAI,EAAEC,OAAgB;QAC/C,MAAMC,UAAU;YACdL;YACAM,MAAM;gBACJC,OAAOJ,KAAKI,KAAK;gBACjBC,UAAUL,KAAKK,QAAQ;gBACvBC,UAAUN,KAAKM,QAAQ;YACzB;YACAC,OAAO;YACPC,KAAKd,sBAAsBO,QAAQO,GAAG,EAAE;QAC1C;QAEA,MAAMC,SAAS,MAAMd,eAAeO;QACpC,MAAMQ,SAASjB,sBAAsB;YACnCkB,kBAAkBd,WAAWe,MAAM;YACnCC,SAASZ,QAAQO,GAAG,CAACK,OAAO;YAC5BC,OAAOL,OAAOK,KAAK;QACrB;QAEAb,QAAQc,OAAO,CAAC,aAAa,GAAGL;QAEhC,IAAIb,WAAWe,MAAM,CAACI,IAAI,CAACC,wBAAwB,EAAE;YACnD,OAAOR,OAAOK,KAAK;QACrB;QAEA,OAAOL;IACT;IAEA,OAAOX;AACT;AAEA,eAAeF,cAAa"}