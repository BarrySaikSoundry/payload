{"version":3,"sources":["../../src/utilities/populateBreadcrumbs.ts"],"sourcesContent":["import type { CollectionConfig } from 'payload'\n\nimport type { NestedDocsPluginConfig } from '../types.js'\n\nimport { formatBreadcrumb } from './formatBreadcrumb.js'\nimport { getParents } from './getParents.js'\n\nexport const populateBreadcrumbs = async (\n  req: any,\n  pluginConfig: NestedDocsPluginConfig,\n  collection: CollectionConfig,\n  data: any,\n  originalDoc?: any,\n): Promise<any> => {\n  const newData = data\n  const breadcrumbDocs = [\n    ...(await getParents(req, pluginConfig, collection, {\n      ...originalDoc,\n      ...data,\n    })),\n  ]\n\n  const currentDocBreadcrumb = {\n    ...originalDoc,\n    ...data,\n  }\n\n  if (originalDoc?.id) {\n    currentDocBreadcrumb.id = originalDoc?.id\n  }\n\n  breadcrumbDocs.push(currentDocBreadcrumb)\n\n  const breadcrumbs = breadcrumbDocs.map((_, i) =>\n    formatBreadcrumb(pluginConfig, collection, breadcrumbDocs.slice(0, i + 1)),\n  )  \n\n  return {\n    ...newData,\n    [pluginConfig?.breadcrumbsFieldSlug || 'breadcrumbs']: breadcrumbs,\n  }\n}\n"],"names":["formatBreadcrumb","getParents","populateBreadcrumbs","req","pluginConfig","collection","data","originalDoc","newData","breadcrumbDocs","currentDocBreadcrumb","id","push","breadcrumbs","map","_","i","slice","breadcrumbsFieldSlug"],"mappings":"AAIA,SAASA,gBAAgB,QAAQ,wBAAuB;AACxD,SAASC,UAAU,QAAQ,kBAAiB;AAE5C,OAAO,MAAMC,sBAAsB,OACjCC,KACAC,cACAC,YACAC,MACAC;IAEA,MAAMC,UAAUF;IAChB,MAAMG,iBAAiB;WACjB,MAAMR,WAAWE,KAAKC,cAAcC,YAAY;YAClD,GAAGE,WAAW;YACd,GAAGD,IAAI;QACT;KACD;IAED,MAAMI,uBAAuB;QAC3B,GAAGH,WAAW;QACd,GAAGD,IAAI;IACT;IAEA,IAAIC,aAAaI,IAAI;QACnBD,qBAAqBC,EAAE,GAAGJ,aAAaI;IACzC;IAEAF,eAAeG,IAAI,CAACF;IAEpB,MAAMG,cAAcJ,eAAeK,GAAG,CAAC,CAACC,GAAGC,IACzChB,iBAAiBI,cAAcC,YAAYI,eAAeQ,KAAK,CAAC,GAAGD,IAAI;IAGzE,OAAO;QACL,GAAGR,OAAO;QACV,CAACJ,cAAcc,wBAAwB,cAAc,EAAEL;IACzD;AACF,EAAC"}