{"version":3,"sources":["../../src/utilities/getParents.ts"],"sourcesContent":["import type { CollectionConfig } from 'payload'\n\nimport type { NestedDocsPluginConfig } from '../types.js'\n\nexport const getParents = async (\n  req: any,\n  pluginConfig: NestedDocsPluginConfig,\n  collection: CollectionConfig,\n  doc: Record<string, unknown>,\n  docs: Array<Record<string, unknown>> = [],\n): Promise<Array<Record<string, unknown>>> => {\n  const parentSlug = pluginConfig?.parentFieldSlug || 'parent'\n  const parent = doc[parentSlug]\n  let retrievedParent\n\n  if (parent) {\n    // If not auto-populated, and we have an ID\n    if (typeof parent === 'string' || typeof parent === 'number') {\n      retrievedParent = await req.payload.findByID({\n        id: parent,\n        collection: collection.slug,\n        depth: 0,\n        disableErrors: true,\n        req,\n      })\n    }\n\n    // If auto-populated\n    if (typeof parent === 'object') {\n      retrievedParent = parent\n    }\n\n    if (retrievedParent) {\n      if (retrievedParent[parentSlug]) {\n        return getParents(req, pluginConfig, collection, retrievedParent, [\n          retrievedParent,\n          ...docs,\n        ])\n      }\n\n      return [retrievedParent, ...docs]\n    }\n  }\n\n  return docs\n}\n"],"names":["getParents","req","pluginConfig","collection","doc","docs","parentSlug","parentFieldSlug","parent","retrievedParent","payload","findByID","id","slug","depth","disableErrors"],"mappings":"AAIA,OAAO,MAAMA,aAAa,OACxBC,KACAC,cACAC,YACAC,KACAC,OAAuC,EAAE;IAEzC,MAAMC,aAAaJ,cAAcK,mBAAmB;IACpD,MAAMC,SAASJ,GAAG,CAACE,WAAW;IAC9B,IAAIG;IAEJ,IAAID,QAAQ;QACV,2CAA2C;QAC3C,IAAI,OAAOA,WAAW,YAAY,OAAOA,WAAW,UAAU;YAC5DC,kBAAkB,MAAMR,IAAIS,OAAO,CAACC,QAAQ,CAAC;gBAC3CC,IAAIJ;gBACJL,YAAYA,WAAWU,IAAI;gBAC3BC,OAAO;gBACPC,eAAe;gBACfd;YACF;QACF;QAEA,oBAAoB;QACpB,IAAI,OAAOO,WAAW,UAAU;YAC9BC,kBAAkBD;QACpB;QAEA,IAAIC,iBAAiB;YACnB,IAAIA,eAAe,CAACH,WAAW,EAAE;gBAC/B,OAAON,WAAWC,KAAKC,cAAcC,YAAYM,iBAAiB;oBAChEA;uBACGJ;iBACJ;YACH;YAEA,OAAO;gBAACI;mBAAoBJ;aAAK;QACnC;IACF;IAEA,OAAOA;AACT,EAAC"}