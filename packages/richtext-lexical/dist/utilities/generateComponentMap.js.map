{"version":3,"sources":["../../src/utilities/generateComponentMap.tsx"],"sourcesContent":["import type { RichTextAdapter } from 'payload'\n\nimport { mapFields } from '@payloadcms/ui/utilities/buildComponentMap'\nimport React from 'react'\n\nimport type { ResolvedServerFeatureMap } from '../features/typesServer.js'\nimport type { GeneratedFeatureProviderComponent } from '../types.js'\n\nexport const getGenerateComponentMap =\n  (args: {\n    resolvedFeatureMap: ResolvedServerFeatureMap\n  }): RichTextAdapter['generateComponentMap'] =>\n  ({ WithServerSideProps, config, i18n, schemaPath }) => {\n    const componentMap = new Map()\n\n    // turn args.resolvedFeatureMap into an array of [key, value] pairs, ordered by value.order, lowest order first:\n    const resolvedFeatureMapArray = Array.from(args.resolvedFeatureMap.entries()).sort(\n      (a, b) => a[1].order - b[1].order,\n    )\n\n    componentMap.set(\n      `features`,\n      resolvedFeatureMapArray\n        .map(([featureKey, resolvedFeature]) => {\n          const ClientComponent = resolvedFeature.ClientFeature\n          const clientComponentProps = resolvedFeature.clientFeatureProps\n\n          /**\n           * Handle Feature Component Maps\n           */\n          if (\n            'generateComponentMap' in resolvedFeature &&\n            typeof resolvedFeature.generateComponentMap === 'function'\n          ) {\n            const components = resolvedFeature.generateComponentMap({\n              config,\n              i18n,\n              props: resolvedFeature.sanitizedServerFeatureProps,\n              schemaPath,\n            })\n\n            for (const componentKey in components) {\n              const Component = components[componentKey]\n\n              if (Component) {\n                componentMap.set(\n                  `lexical_internal_feature.${featureKey}.lexical_internal_components.${componentKey}`,\n                  <WithServerSideProps\n                    Component={Component}\n                    componentKey={componentKey}\n                    featureKey={resolvedFeature.key}\n                    key={`${resolvedFeature.key}-${componentKey}`}\n                  />,\n                )\n              }\n            }\n          }\n\n          /**\n           * Handle Feature Schema Maps (rendered fields)\n           */\n          if (\n            'generateSchemaMap' in resolvedFeature &&\n            typeof resolvedFeature.generateSchemaMap === 'function'\n          ) {\n            const schemas = resolvedFeature.generateSchemaMap({\n              config,\n              i18n,\n              props: resolvedFeature.sanitizedServerFeatureProps,\n              schemaMap: new Map(),\n              schemaPath,\n            })\n\n            if (schemas) {\n              for (const [schemaKey, fields] of schemas.entries()) {\n                const mappedFields = mapFields({\n                  WithServerSideProps,\n                  config,\n                  disableAddingID: true,\n                  fieldSchema: fields,\n                  i18n,\n                  parentPath: `${schemaPath}.lexical_internal_feature.${featureKey}.fields.${schemaKey}`,\n                  readOnly: false,\n                })\n\n                componentMap.set(\n                  `lexical_internal_feature.${featureKey}.fields.${schemaKey}`,\n                  mappedFields,\n                )\n              }\n            }\n          }\n\n          if (!ClientComponent) {\n            return null\n          }\n\n          return {\n            ClientFeature:\n              clientComponentProps && typeof clientComponentProps === 'object' ? (\n                <ClientComponent\n                  {...clientComponentProps}\n                  featureKey={resolvedFeature.key}\n                  key={resolvedFeature.key}\n                  order={resolvedFeature.order}\n                />\n              ) : (\n                <ClientComponent\n                  featureKey={resolvedFeature.key}\n                  key={resolvedFeature.key}\n                  order={resolvedFeature.order}\n                />\n              ),\n            key: resolvedFeature.key,\n            order: resolvedFeature.order,\n          } as GeneratedFeatureProviderComponent\n        })\n        .filter((feature) => feature !== null),\n    )\n\n    return componentMap\n  }\n"],"names":["mapFields","React","getGenerateComponentMap","args","WithServerSideProps","config","i18n","schemaPath","componentMap","Map","resolvedFeatureMapArray","Array","from","resolvedFeatureMap","entries","sort","a","b","order","set","map","featureKey","resolvedFeature","ClientComponent","ClientFeature","clientComponentProps","clientFeatureProps","generateComponentMap","components","props","sanitizedServerFeatureProps","componentKey","Component","key","generateSchemaMap","schemas","schemaMap","schemaKey","fields","mappedFields","disableAddingID","fieldSchema","parentPath","readOnly","filter","feature"],"mappings":";;AAEA,SAASA,SAAS,QAAQ,6CAA4C;AACtE,OAAOC,WAAW,QAAO;AAKzB,OAAO,MAAMC,0BACX,CAACC,OAGD,CAAC,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAE;QAChD,MAAMC,eAAe,IAAIC;QAEzB,gHAAgH;QAChH,MAAMC,0BAA0BC,MAAMC,IAAI,CAACT,KAAKU,kBAAkB,CAACC,OAAO,IAAIC,IAAI,CAChF,CAACC,GAAGC,IAAMD,CAAC,CAAC,EAAE,CAACE,KAAK,GAAGD,CAAC,CAAC,EAAE,CAACC,KAAK;QAGnCV,aAAaW,GAAG,CACd,CAAC,QAAQ,CAAC,EACVT,wBACGU,GAAG,CAAC,CAAC,CAACC,YAAYC,gBAAgB;YACjC,MAAMC,kBAAkBD,gBAAgBE,aAAa;YACrD,MAAMC,uBAAuBH,gBAAgBI,kBAAkB;YAE/D;;WAEC,GACD,IACE,0BAA0BJ,mBAC1B,OAAOA,gBAAgBK,oBAAoB,KAAK,YAChD;gBACA,MAAMC,aAAaN,gBAAgBK,oBAAoB,CAAC;oBACtDtB;oBACAC;oBACAuB,OAAOP,gBAAgBQ,2BAA2B;oBAClDvB;gBACF;gBAEA,IAAK,MAAMwB,gBAAgBH,WAAY;oBACrC,MAAMI,YAAYJ,UAAU,CAACG,aAAa;oBAE1C,IAAIC,WAAW;wBACbxB,aAAaW,GAAG,CACd,CAAC,yBAAyB,EAAEE,WAAW,6BAA6B,EAAEU,aAAa,CAAC,gBACpF,KAAC3B;4BACC4B,WAAWA;4BACXD,cAAcA;4BACdV,YAAYC,gBAAgBW,GAAG;2BAC1B,CAAC,EAAEX,gBAAgBW,GAAG,CAAC,CAAC,EAAEF,aAAa,CAAC;oBAGnD;gBACF;YACF;YAEA;;WAEC,GACD,IACE,uBAAuBT,mBACvB,OAAOA,gBAAgBY,iBAAiB,KAAK,YAC7C;gBACA,MAAMC,UAAUb,gBAAgBY,iBAAiB,CAAC;oBAChD7B;oBACAC;oBACAuB,OAAOP,gBAAgBQ,2BAA2B;oBAClDM,WAAW,IAAI3B;oBACfF;gBACF;gBAEA,IAAI4B,SAAS;oBACX,KAAK,MAAM,CAACE,WAAWC,OAAO,IAAIH,QAAQrB,OAAO,GAAI;wBACnD,MAAMyB,eAAevC,UAAU;4BAC7BI;4BACAC;4BACAmC,iBAAiB;4BACjBC,aAAaH;4BACbhC;4BACAoC,YAAY,CAAC,EAAEnC,WAAW,0BAA0B,EAAEc,WAAW,QAAQ,EAAEgB,UAAU,CAAC;4BACtFM,UAAU;wBACZ;wBAEAnC,aAAaW,GAAG,CACd,CAAC,yBAAyB,EAAEE,WAAW,QAAQ,EAAEgB,UAAU,CAAC,EAC5DE;oBAEJ;gBACF;YACF;YAEA,IAAI,CAAChB,iBAAiB;gBACpB,OAAO;YACT;YAEA,OAAO;gBACLC,eACEC,wBAAwB,OAAOA,yBAAyB,yBACtD,eAACF;oBACE,GAAGE,oBAAoB;oBACxBJ,YAAYC,gBAAgBW,GAAG;oBAC/BA,KAAKX,gBAAgBW,GAAG;oBACxBf,OAAOI,gBAAgBJ,KAAK;mCAG9B,KAACK;oBACCF,YAAYC,gBAAgBW,GAAG;oBAE/Bf,OAAOI,gBAAgBJ,KAAK;mBADvBI,gBAAgBW,GAAG;gBAI9BA,KAAKX,gBAAgBW,GAAG;gBACxBf,OAAOI,gBAAgBJ,KAAK;YAC9B;QACF,GACC0B,MAAM,CAAC,CAACC,UAAYA,YAAY;QAGrC,OAAOrC;IACT,EAAC"}