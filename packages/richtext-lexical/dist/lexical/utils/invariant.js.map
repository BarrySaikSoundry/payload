{"version":3,"sources":["../../../src/lexical/utils/invariant.ts"],"sourcesContent":["// Taken from https://github.com/facebook/lexical/blob/176b8cf16ecb332ee5efe2c75219e223b7b019f2/packages/shared/src/invariant.ts\n\n// invariant(condition, message) will refine types based on \"condition\", and\n// if \"condition\" is false will throw an error. This function is special-cased\n// in flow itself, so we can't name it anything else.\nexport function invariant(cond?: boolean, message?: string, ...args: string[]): asserts cond {\n  if (cond) {\n    return\n  }\n\n  throw new Error(\n    'Internal Lexical error: invariant() is meant to be replaced at compile ' +\n      'time. There is no runtime version. Error: ' +\n      message,\n  )\n}\n"],"names":["invariant","cond","message","args","Error"],"mappings":"AAAA,gIAAgI;AAEhI,4EAA4E;AAC5E,8EAA8E;AAC9E,qDAAqD;AACrD,OAAO,SAASA,UAAUC,IAAc,EAAEC,OAAgB,EAAE,GAAGC,IAAc;IAC3E,IAAIF,MAAM;QACR;IACF;IAEA,MAAM,IAAIG,MACR,4EACE,+CACAF;AAEN"}