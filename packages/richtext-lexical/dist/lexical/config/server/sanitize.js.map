{"version":3,"sources":["../../../../src/lexical/config/server/sanitize.ts"],"sourcesContent":["import type { SanitizedConfig } from 'payload'\n\nimport type {\n  ResolvedServerFeatureMap,\n  SanitizedServerFeatures,\n} from '../../../features/typesServer.js'\nimport type { SanitizedServerEditorConfig, ServerEditorConfig } from '../types.js'\n\nimport { loadFeatures } from './loader.js'\n\nexport const sanitizeServerFeatures = (\n  features: ResolvedServerFeatureMap,\n): SanitizedServerFeatures => {\n  const sanitized: SanitizedServerFeatures = {\n    converters: {\n      html: [],\n    },\n    enabledFeatures: [],\n    generatedTypes: {\n      modifyOutputSchemas: [],\n    },\n    getSubFields: new Map(),\n    getSubFieldsData: new Map(),\n    graphQLPopulationPromises: new Map(),\n    hooks: {\n      afterChange: new Map(),\n      afterRead: new Map(),\n      beforeChange: new Map(),\n      beforeValidate: new Map(),\n    },\n    i18n: {},\n    markdownTransformers: [],\n    nodes: [],\n\n    validations: new Map(),\n  }\n\n  if (!features?.size) {\n    return sanitized\n  }\n\n  features.forEach((feature) => {\n    if (feature?.generatedTypes?.modifyOutputSchema) {\n      sanitized.generatedTypes.modifyOutputSchemas.push(feature.generatedTypes.modifyOutputSchema)\n    }\n\n    if (feature?.i18n) {\n      for (const lang in feature.i18n) {\n        if (!sanitized.i18n[lang]) {\n          sanitized.i18n[lang] = {\n            lexical: {},\n          }\n        }\n        sanitized.i18n[lang].lexical[feature.key] = feature.i18n[lang]\n      }\n    }\n\n    if (feature.nodes?.length) {\n      sanitized.nodes = sanitized.nodes.concat(feature.nodes)\n      feature.nodes.forEach((node) => {\n        const nodeType = 'with' in node.node ? node.node.replace.getType() : node.node.getType() // TODO: Idk if this works for node replacements\n        if (node?.graphQLPopulationPromises?.length) {\n          sanitized.graphQLPopulationPromises.set(nodeType, node.graphQLPopulationPromises)\n        }\n        if (node?.validations?.length) {\n          sanitized.validations.set(nodeType, node.validations)\n        }\n        if (node?.converters?.html) {\n          sanitized.converters.html.push(node.converters.html)\n        }\n        if (node?.hooks?.afterChange) {\n          sanitized.hooks.afterChange.set(nodeType, node.hooks.afterChange)\n        }\n        if (node?.hooks?.afterRead) {\n          sanitized.hooks.afterRead.set(nodeType, node.hooks.afterRead)\n        }\n        if (node?.hooks?.beforeChange) {\n          sanitized.hooks.beforeChange.set(nodeType, node.hooks.beforeChange)\n        }\n        if (node?.hooks?.beforeValidate) {\n          sanitized.hooks.beforeValidate.set(nodeType, node.hooks.beforeValidate)\n        }\n        if (node?.getSubFields) {\n          sanitized.getSubFields.set(nodeType, node.getSubFields)\n        }\n        if (node?.getSubFieldsData) {\n          sanitized.getSubFieldsData.set(nodeType, node.getSubFieldsData)\n        }\n      })\n    }\n\n    if (feature.markdownTransformers?.length) {\n      sanitized.markdownTransformers = sanitized.markdownTransformers.concat(\n        feature.markdownTransformers,\n      )\n    }\n\n    sanitized.enabledFeatures.push(feature.key)\n  })\n\n  return sanitized\n}\n\nexport async function sanitizeServerEditorConfig(\n  editorConfig: ServerEditorConfig,\n  config: SanitizedConfig,\n): Promise<SanitizedServerEditorConfig> {\n  const resolvedFeatureMap = await loadFeatures({\n    config,\n    unSanitizedEditorConfig: editorConfig,\n  })\n\n  return {\n    features: sanitizeServerFeatures(resolvedFeatureMap),\n    lexical: editorConfig.lexical,\n    resolvedFeatureMap,\n  }\n}\n"],"names":["loadFeatures","sanitizeServerFeatures","features","sanitized","converters","html","enabledFeatures","generatedTypes","modifyOutputSchemas","getSubFields","Map","getSubFieldsData","graphQLPopulationPromises","hooks","afterChange","afterRead","beforeChange","beforeValidate","i18n","markdownTransformers","nodes","validations","size","forEach","feature","modifyOutputSchema","push","lang","lexical","key","length","concat","node","nodeType","replace","getType","set","sanitizeServerEditorConfig","editorConfig","config","resolvedFeatureMap","unSanitizedEditorConfig"],"mappings":"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"}