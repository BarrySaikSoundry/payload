{"version":3,"sources":["../../../../src/features/link/nodes/AutoLinkNode.ts"],"sourcesContent":["import type { ElementNode, LexicalNode, RangeSelection } from 'lexical'\n\nimport { $applyNodeReplacement, $isElementNode } from 'lexical'\n\nimport type { LinkFields, SerializedAutoLinkNode } from './types.js'\n\nimport { LinkNode } from './LinkNode.js'\n\n// Custom node type to override `canInsertTextAfter` that will\n// allow typing within the link\n\nexport class AutoLinkNode extends LinkNode {\n  static clone(node: AutoLinkNode): AutoLinkNode {\n    return new AutoLinkNode({ id: undefined, fields: node.__fields, key: node.__key })\n  }\n\n  static getType(): string {\n    return 'autolink'\n  }\n\n  static importDOM(): null {\n    // TODO: Should link node should handle the import over autolink?\n    return null\n  }\n\n  static importJSON(serializedNode: SerializedAutoLinkNode): AutoLinkNode {\n    if (\n      serializedNode.version === 1 &&\n      typeof serializedNode.fields?.doc?.value === 'object' &&\n      serializedNode.fields?.doc?.value?.id\n    ) {\n      serializedNode.fields.doc.value = serializedNode.fields.doc.value.id\n      serializedNode.version = 2\n    }\n\n    const node = $createAutoLinkNode({ fields: serializedNode.fields })\n\n    node.setFormat(serializedNode.format)\n    node.setIndent(serializedNode.indent)\n    node.setDirection(serializedNode.direction)\n    return node\n  }\n\n  // @ts-expect-error\n  exportJSON(): SerializedAutoLinkNode {\n    const serialized = super.exportJSON()\n    return {\n      type: 'autolink',\n      children: serialized.children,\n      direction: serialized.direction,\n      fields: serialized.fields,\n      format: serialized.format,\n      indent: serialized.indent,\n      version: 2,\n    }\n  }\n\n  insertNewAfter(selection: RangeSelection, restoreSelection = true): ElementNode | null {\n    const element = this.getParentOrThrow().insertNewAfter(selection, restoreSelection)\n    if ($isElementNode(element)) {\n      const linkNode = $createAutoLinkNode({ fields: this.__fields })\n      element.append(linkNode)\n      return linkNode\n    }\n    return null\n  }\n}\n\nexport function $createAutoLinkNode({ fields }: { fields: LinkFields }): AutoLinkNode {\n  return $applyNodeReplacement(new AutoLinkNode({ id: undefined, fields }))\n}\nexport function $isAutoLinkNode(node: LexicalNode | null | undefined): node is AutoLinkNode {\n  return node instanceof AutoLinkNode\n}\n"],"names":["$applyNodeReplacement","$isElementNode","LinkNode","AutoLinkNode","clone","node","id","undefined","fields","__fields","key","__key","getType","importDOM","importJSON","serializedNode","version","doc","value","$createAutoLinkNode","setFormat","format","setIndent","indent","setDirection","direction","exportJSON","serialized","type","children","insertNewAfter","selection","restoreSelection","element","getParentOrThrow","linkNode","append","$isAutoLinkNode"],"mappings":"AAEA,SAASA,qBAAqB,EAAEC,cAAc,QAAQ,UAAS;AAI/D,SAASC,QAAQ,QAAQ,gBAAe;AAExC,8DAA8D;AAC9D,+BAA+B;AAE/B,OAAO,MAAMC,qBAAqBD;IAChC,OAAOE,MAAMC,IAAkB,EAAgB;QAC7C,OAAO,IAAIF,aAAa;YAAEG,IAAIC;YAAWC,QAAQH,KAAKI,QAAQ;YAAEC,KAAKL,KAAKM,KAAK;QAAC;IAClF;IAEA,OAAOC,UAAkB;QACvB,OAAO;IACT;IAEA,OAAOC,YAAkB;QACvB,iEAAiE;QACjE,OAAO;IACT;IAEA,OAAOC,WAAWC,cAAsC,EAAgB;QACtE,IACEA,eAAeC,OAAO,KAAK,KAC3B,OAAOD,eAAeP,MAAM,EAAES,KAAKC,UAAU,YAC7CH,eAAeP,MAAM,EAAES,KAAKC,OAAOZ,IACnC;YACAS,eAAeP,MAAM,CAACS,GAAG,CAACC,KAAK,GAAGH,eAAeP,MAAM,CAACS,GAAG,CAACC,KAAK,CAACZ,EAAE;YACpES,eAAeC,OAAO,GAAG;QAC3B;QAEA,MAAMX,OAAOc,oBAAoB;YAAEX,QAAQO,eAAeP,MAAM;QAAC;QAEjEH,KAAKe,SAAS,CAACL,eAAeM,MAAM;QACpChB,KAAKiB,SAAS,CAACP,eAAeQ,MAAM;QACpClB,KAAKmB,YAAY,CAACT,eAAeU,SAAS;QAC1C,OAAOpB;IACT;IAEA,mBAAmB;IACnBqB,aAAqC;QACnC,MAAMC,aAAa,KAAK,CAACD;QACzB,OAAO;YACLE,MAAM;YACNC,UAAUF,WAAWE,QAAQ;YAC7BJ,WAAWE,WAAWF,SAAS;YAC/BjB,QAAQmB,WAAWnB,MAAM;YACzBa,QAAQM,WAAWN,MAAM;YACzBE,QAAQI,WAAWJ,MAAM;YACzBP,SAAS;QACX;IACF;IAEAc,eAAeC,SAAyB,EAAEC,mBAAmB,IAAI,EAAsB;QACrF,MAAMC,UAAU,IAAI,CAACC,gBAAgB,GAAGJ,cAAc,CAACC,WAAWC;QAClE,IAAI/B,eAAegC,UAAU;YAC3B,MAAME,WAAWhB,oBAAoB;gBAAEX,QAAQ,IAAI,CAACC,QAAQ;YAAC;YAC7DwB,QAAQG,MAAM,CAACD;YACf,OAAOA;QACT;QACA,OAAO;IACT;AACF;AAEA,OAAO,SAAShB,oBAAoB,EAAEX,MAAM,EAA0B;IACpE,OAAOR,sBAAsB,IAAIG,aAAa;QAAEG,IAAIC;QAAWC;IAAO;AACxE;AACA,OAAO,SAAS6B,gBAAgBhC,IAAoC;IAClE,OAAOA,gBAAgBF;AACzB"}