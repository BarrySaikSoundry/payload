{"version":3,"sources":["../../../src/features/link/feature.client.tsx"],"sourcesContent":["'use client'\n\nimport type { LexicalNode } from 'lexical'\n\nimport { $findMatchingParent } from '@lexical/utils'\nimport { $getSelection, $isRangeSelection } from 'lexical'\n\nimport type { ToolbarGroup } from '../toolbars/types.js'\nimport type { ExclusiveLinkCollectionsProps } from './feature.server.js'\nimport type { LinkFields } from './nodes/types.js'\n\nimport { LinkIcon } from '../../lexical/ui/icons/Link/index.js'\nimport { getSelectedNode } from '../../lexical/utils/getSelectedNode.js'\nimport { createClientFeature } from '../../utilities/createClientFeature.js'\nimport { toolbarFeatureButtonsGroupWithItems } from '../shared/toolbar/featureButtonsGroup.js'\nimport { LinkMarkdownTransformer } from './markdownTransformer.js'\nimport { AutoLinkNode } from './nodes/AutoLinkNode.js'\nimport { $isLinkNode, LinkNode, TOGGLE_LINK_COMMAND } from './nodes/LinkNode.js'\nimport { AutoLinkPlugin } from './plugins/autoLink/index.js'\nimport { ClickableLinkPlugin } from './plugins/clickableLink/index.js'\nimport { TOGGLE_LINK_WITH_MODAL_COMMAND } from './plugins/floatingLinkEditor/LinkEditor/commands.js'\nimport { FloatingLinkEditorPlugin } from './plugins/floatingLinkEditor/index.js'\nimport { LinkPlugin } from './plugins/link/index.js'\n\nexport type ClientProps = ExclusiveLinkCollectionsProps\n\nconst toolbarGroups: ToolbarGroup[] = [\n  toolbarFeatureButtonsGroupWithItems([\n    {\n      ChildComponent: LinkIcon,\n      isActive: ({ selection }) => {\n        if ($isRangeSelection(selection)) {\n          const selectedNode = getSelectedNode(selection)\n          const linkParent = $findMatchingParent(selectedNode, $isLinkNode)\n          return linkParent != null\n        }\n        return false\n      },\n      isEnabled: ({ selection }) => {\n        return !!($isRangeSelection(selection) && $getSelection()?.getTextContent()?.length)\n      },\n      key: 'link',\n      label: ({ i18n }) => {\n        return i18n.t('lexical:link:label')\n      },\n      onSelect: ({ editor, isActive }) => {\n        if (!isActive) {\n          let selectedText: string = null\n          let selectedNodes: LexicalNode[] = []\n          editor.getEditorState().read(() => {\n            selectedText = $getSelection()?.getTextContent()\n            // We need to selected nodes here before the drawer opens, as clicking around in the drawer may change the original selection\n            selectedNodes = $getSelection()?.getNodes() ?? []\n          })\n\n          if (!selectedText?.length) {\n            return\n          }\n\n          const linkFields: LinkFields = {\n            doc: null,\n            linkType: 'custom',\n            newTab: false,\n            url: 'https://',\n          }\n\n          editor.dispatchCommand(TOGGLE_LINK_WITH_MODAL_COMMAND, {\n            fields: linkFields,\n            selectedNodes,\n            text: selectedText,\n          })\n        } else {\n          // remove link\n          editor.dispatchCommand(TOGGLE_LINK_COMMAND, null)\n        }\n      },\n      order: 1,\n    },\n  ]),\n]\n\nexport const LinkFeatureClient = createClientFeature({\n  markdownTransformers: [LinkMarkdownTransformer],\n  nodes: [LinkNode, AutoLinkNode],\n  plugins: [\n    {\n      Component: LinkPlugin,\n      position: 'normal',\n    },\n    {\n      Component: AutoLinkPlugin,\n      position: 'normal',\n    },\n    {\n      Component: ClickableLinkPlugin,\n      position: 'normal',\n    },\n    {\n      Component: FloatingLinkEditorPlugin,\n      position: 'floatingAnchorElem',\n    },\n  ],\n  toolbarFixed: {\n    groups: toolbarGroups,\n  },\n  toolbarInline: {\n    groups: toolbarGroups,\n  },\n})\n"],"names":["$findMatchingParent","$getSelection","$isRangeSelection","LinkIcon","getSelectedNode","createClientFeature","toolbarFeatureButtonsGroupWithItems","LinkMarkdownTransformer","AutoLinkNode","$isLinkNode","LinkNode","TOGGLE_LINK_COMMAND","AutoLinkPlugin","ClickableLinkPlugin","TOGGLE_LINK_WITH_MODAL_COMMAND","FloatingLinkEditorPlugin","LinkPlugin","toolbarGroups","ChildComponent","isActive","selection","selectedNode","linkParent","isEnabled","getTextContent","length","key","label","i18n","t","onSelect","editor","selectedText","selectedNodes","getEditorState","read","getNodes","linkFields","doc","linkType","newTab","url","dispatchCommand","fields","text","order","LinkFeatureClient","markdownTransformers","nodes","plugins","Component","position","toolbarFixed","groups","toolbarInline"],"mappings":"AAAA;AAIA,SAASA,mBAAmB,QAAQ,iBAAgB;AACpD,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,UAAS;AAM1D,SAASC,QAAQ,QAAQ,uCAAsC;AAC/D,SAASC,eAAe,QAAQ,yCAAwC;AACxE,SAASC,mBAAmB,QAAQ,yCAAwC;AAC5E,SAASC,mCAAmC,QAAQ,2CAA0C;AAC9F,SAASC,uBAAuB,QAAQ,2BAA0B;AAClE,SAASC,YAAY,QAAQ,0BAAyB;AACtD,SAASC,WAAW,EAAEC,QAAQ,EAAEC,mBAAmB,QAAQ,sBAAqB;AAChF,SAASC,cAAc,QAAQ,8BAA6B;AAC5D,SAASC,mBAAmB,QAAQ,mCAAkC;AACtE,SAASC,8BAA8B,QAAQ,sDAAqD;AACpG,SAASC,wBAAwB,QAAQ,wCAAuC;AAChF,SAASC,UAAU,QAAQ,0BAAyB;AAIpD,MAAMC,gBAAgC;IACpCX,oCAAoC;QAClC;YACEY,gBAAgBf;YAChBgB,UAAU,CAAC,EAAEC,SAAS,EAAE;gBACtB,IAAIlB,kBAAkBkB,YAAY;oBAChC,MAAMC,eAAejB,gBAAgBgB;oBACrC,MAAME,aAAatB,oBAAoBqB,cAAcZ;oBACrD,OAAOa,cAAc;gBACvB;gBACA,OAAO;YACT;YACAC,WAAW,CAAC,EAAEH,SAAS,EAAE;gBACvB,OAAO,CAAC,CAAElB,CAAAA,kBAAkBkB,cAAcnB,iBAAiBuB,kBAAkBC,MAAK;YACpF;YACAC,KAAK;YACLC,OAAO,CAAC,EAAEC,IAAI,EAAE;gBACd,OAAOA,KAAKC,CAAC,CAAC;YAChB;YACAC,UAAU,CAAC,EAAEC,MAAM,EAAEZ,QAAQ,EAAE;gBAC7B,IAAI,CAACA,UAAU;oBACb,IAAIa,eAAuB;oBAC3B,IAAIC,gBAA+B,EAAE;oBACrCF,OAAOG,cAAc,GAAGC,IAAI,CAAC;wBAC3BH,eAAe/B,iBAAiBuB;wBAChC,6HAA6H;wBAC7HS,gBAAgBhC,iBAAiBmC,cAAc,EAAE;oBACnD;oBAEA,IAAI,CAACJ,cAAcP,QAAQ;wBACzB;oBACF;oBAEA,MAAMY,aAAyB;wBAC7BC,KAAK;wBACLC,UAAU;wBACVC,QAAQ;wBACRC,KAAK;oBACP;oBAEAV,OAAOW,eAAe,CAAC5B,gCAAgC;wBACrD6B,QAAQN;wBACRJ;wBACAW,MAAMZ;oBACR;gBACF,OAAO;oBACL,cAAc;oBACdD,OAAOW,eAAe,CAAC/B,qBAAqB;gBAC9C;YACF;YACAkC,OAAO;QACT;KACD;CACF;AAED,OAAO,MAAMC,oBAAoBzC,oBAAoB;IACnD0C,sBAAsB;QAACxC;KAAwB;IAC/CyC,OAAO;QAACtC;QAAUF;KAAa;IAC/ByC,SAAS;QACP;YACEC,WAAWlC;YACXmC,UAAU;QACZ;QACA;YACED,WAAWtC;YACXuC,UAAU;QACZ;QACA;YACED,WAAWrC;YACXsC,UAAU;QACZ;QACA;YACED,WAAWnC;YACXoC,UAAU;QACZ;KACD;IACDC,cAAc;QACZC,QAAQpC;IACV;IACAqC,eAAe;QACbD,QAAQpC;IACV;AACF,GAAE"}