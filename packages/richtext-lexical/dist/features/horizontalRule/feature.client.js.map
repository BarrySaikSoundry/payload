{"version":3,"sources":["../../../src/features/horizontalRule/feature.client.tsx"],"sourcesContent":["'use client'\n\nimport { $isNodeSelection } from 'lexical'\n\nimport { HorizontalRuleIcon } from '../../lexical/ui/icons/HorizontalRule/index.js'\nimport { createClientFeature } from '../../utilities/createClientFeature.js'\nimport { slashMenuBasicGroupWithItems } from '../shared/slashMenu/basicGroup.js'\nimport { toolbarAddDropdownGroupWithItems } from '../shared/toolbar/addDropdownGroup.js'\nimport { MarkdownTransformer } from './markdownTransformer.js'\nimport {\n  $isHorizontalRuleNode,\n  HorizontalRuleNode,\n  INSERT_HORIZONTAL_RULE_COMMAND,\n} from './nodes/HorizontalRuleNode.js'\nimport { HorizontalRulePlugin } from './plugin/index.js'\n\nexport const HorizontalRuleFeatureClient = createClientFeature({\n  markdownTransformers: [MarkdownTransformer],\n  nodes: [HorizontalRuleNode],\n  plugins: [\n    {\n      Component: HorizontalRulePlugin,\n      position: 'normal',\n    },\n  ],\n  slashMenu: {\n    groups: [\n      slashMenuBasicGroupWithItems([\n        {\n          Icon: HorizontalRuleIcon,\n          key: 'horizontalRule',\n          keywords: ['hr', 'horizontal rule', 'line', 'separator'],\n          label: ({ i18n }) => {\n            return i18n.t('lexical:horizontalRule:label')\n          },\n\n          onSelect: ({ editor }) => {\n            editor.dispatchCommand(INSERT_HORIZONTAL_RULE_COMMAND, undefined)\n          },\n        },\n      ]),\n    ],\n  },\n  toolbarFixed: {\n    groups: [\n      toolbarAddDropdownGroupWithItems([\n        {\n          ChildComponent: HorizontalRuleIcon,\n          isActive: ({ selection }) => {\n            if (!$isNodeSelection(selection) || !selection.getNodes().length) {\n              return false\n            }\n\n            const firstNode = selection.getNodes()[0]\n            return $isHorizontalRuleNode(firstNode)\n          },\n          key: 'horizontalRule',\n          label: ({ i18n }) => {\n            return i18n.t('lexical:horizontalRule:label')\n          },\n          onSelect: ({ editor }) => {\n            editor.dispatchCommand(INSERT_HORIZONTAL_RULE_COMMAND, undefined)\n          },\n        },\n      ]),\n    ],\n  },\n})\n"],"names":["$isNodeSelection","HorizontalRuleIcon","createClientFeature","slashMenuBasicGroupWithItems","toolbarAddDropdownGroupWithItems","MarkdownTransformer","$isHorizontalRuleNode","HorizontalRuleNode","INSERT_HORIZONTAL_RULE_COMMAND","HorizontalRulePlugin","HorizontalRuleFeatureClient","markdownTransformers","nodes","plugins","Component","position","slashMenu","groups","Icon","key","keywords","label","i18n","t","onSelect","editor","dispatchCommand","undefined","toolbarFixed","ChildComponent","isActive","selection","getNodes","length","firstNode"],"mappings":"AAAA;AAEA,SAASA,gBAAgB,QAAQ,UAAS;AAE1C,SAASC,kBAAkB,QAAQ,iDAAgD;AACnF,SAASC,mBAAmB,QAAQ,yCAAwC;AAC5E,SAASC,4BAA4B,QAAQ,oCAAmC;AAChF,SAASC,gCAAgC,QAAQ,wCAAuC;AACxF,SAASC,mBAAmB,QAAQ,2BAA0B;AAC9D,SACEC,qBAAqB,EACrBC,kBAAkB,EAClBC,8BAA8B,QACzB,gCAA+B;AACtC,SAASC,oBAAoB,QAAQ,oBAAmB;AAExD,OAAO,MAAMC,8BAA8BR,oBAAoB;IAC7DS,sBAAsB;QAACN;KAAoB;IAC3CO,OAAO;QAACL;KAAmB;IAC3BM,SAAS;QACP;YACEC,WAAWL;YACXM,UAAU;QACZ;KACD;IACDC,WAAW;QACTC,QAAQ;YACNd,6BAA6B;gBAC3B;oBACEe,MAAMjB;oBACNkB,KAAK;oBACLC,UAAU;wBAAC;wBAAM;wBAAmB;wBAAQ;qBAAY;oBACxDC,OAAO,CAAC,EAAEC,IAAI,EAAE;wBACd,OAAOA,KAAKC,CAAC,CAAC;oBAChB;oBAEAC,UAAU,CAAC,EAAEC,MAAM,EAAE;wBACnBA,OAAOC,eAAe,CAAClB,gCAAgCmB;oBACzD;gBACF;aACD;SACF;IACH;IACAC,cAAc;QACZX,QAAQ;YACNb,iCAAiC;gBAC/B;oBACEyB,gBAAgB5B;oBAChB6B,UAAU,CAAC,EAAEC,SAAS,EAAE;wBACtB,IAAI,CAAC/B,iBAAiB+B,cAAc,CAACA,UAAUC,QAAQ,GAAGC,MAAM,EAAE;4BAChE,OAAO;wBACT;wBAEA,MAAMC,YAAYH,UAAUC,QAAQ,EAAE,CAAC,EAAE;wBACzC,OAAO1B,sBAAsB4B;oBAC/B;oBACAf,KAAK;oBACLE,OAAO,CAAC,EAAEC,IAAI,EAAE;wBACd,OAAOA,KAAKC,CAAC,CAAC;oBAChB;oBACAC,UAAU,CAAC,EAAEC,MAAM,EAAE;wBACnBA,OAAOC,eAAe,CAAClB,gCAAgCmB;oBACzD;gBACF;aACD;SACF;IACH;AACF,GAAE"}