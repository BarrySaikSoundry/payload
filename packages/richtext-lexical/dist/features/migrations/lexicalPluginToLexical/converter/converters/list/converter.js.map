{"version":3,"sources":["../../../../../../../src/features/migrations/lexicalPluginToLexical/converter/converters/list/converter.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { SerializedListNode } from '../../../../../lists/plugin/index.js'\nimport type { LexicalPluginNodeConverter } from '../../types.js'\n\nimport { convertLexicalPluginNodesToLexical } from '../../index.js'\n\nexport const _ListConverter: LexicalPluginNodeConverter = {\n  converter({ converters, lexicalPluginNode }) {\n    return {\n      ...lexicalPluginNode,\n      type: 'list',\n      children: convertLexicalPluginNodesToLexical({\n        converters,\n        lexicalPluginNodes: lexicalPluginNode.children,\n        parentNodeType: 'list',\n      }),\n      listType: (lexicalPluginNode as any)?.listType || 'number',\n      tag: (lexicalPluginNode as any)?.tag || 'ol',\n      version: 1,\n    } as const as SerializedListNode\n  },\n  nodeTypes: ['list'],\n}\n"],"names":["convertLexicalPluginNodesToLexical","_ListConverter","converter","converters","lexicalPluginNode","type","children","lexicalPluginNodes","parentNodeType","listType","tag","version","nodeTypes"],"mappings":"AAAA,qDAAqD,GAKrD,SAASA,kCAAkC,QAAQ,iBAAgB;AAEnE,OAAO,MAAMC,iBAA6C;IACxDC,WAAU,EAAEC,UAAU,EAAEC,iBAAiB,EAAE;QACzC,OAAO;YACL,GAAGA,iBAAiB;YACpBC,MAAM;YACNC,UAAUN,mCAAmC;gBAC3CG;gBACAI,oBAAoBH,kBAAkBE,QAAQ;gBAC9CE,gBAAgB;YAClB;YACAC,UAAU,AAACL,mBAA2BK,YAAY;YAClDC,KAAK,AAACN,mBAA2BM,OAAO;YACxCC,SAAS;QACX;IACF;IACAC,WAAW;QAAC;KAAO;AACrB,EAAC"}