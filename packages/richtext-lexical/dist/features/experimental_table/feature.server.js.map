{"version":3,"sources":["../../../src/features/experimental_table/feature.server.ts"],"sourcesContent":["import type { Config, Field } from 'payload'\n\nimport { TableCellNode, TableNode, TableRowNode } from '@lexical/table'\nimport { sanitizeFields } from 'payload'\n\n// eslint-disable-next-line payload/no-imports-from-exports-dir\nimport { TableFeatureClient } from '../../exports/client/index.js'\nimport { createServerFeature } from '../../utilities/createServerFeature.js'\n\nconst fields: Field[] = [\n  {\n    name: 'rows',\n    type: 'number',\n    defaultValue: 5,\n    required: true,\n  },\n  {\n    name: 'columns',\n    type: 'number',\n    defaultValue: 5,\n    required: true,\n  },\n]\nexport const EXPERIMENTAL_TableFeature = createServerFeature({\n  feature: async ({ config, isRoot }) => {\n    const validRelationships = config.collections.map((c) => c.slug) || []\n\n    const sanitizedFields = await sanitizeFields({\n      config: config as unknown as Config,\n      fields,\n      requireFieldLevelRichTextEditor: isRoot,\n      validRelationships,\n    })\n    return {\n      ClientFeature: TableFeatureClient,\n      generateSchemaMap: () => {\n        const schemaMap = new Map<string, Field[]>()\n\n        schemaMap.set('fields', sanitizedFields)\n\n        return schemaMap\n      },\n      nodes: [\n        {\n          node: TableNode,\n        },\n        {\n          node: TableCellNode,\n        },\n        {\n          node: TableRowNode,\n        },\n      ],\n    }\n  },\n  key: 'experimental_table',\n})\n"],"names":["TableCellNode","TableNode","TableRowNode","sanitizeFields","TableFeatureClient","createServerFeature","fields","name","type","defaultValue","required","EXPERIMENTAL_TableFeature","feature","config","isRoot","validRelationships","collections","map","c","slug","sanitizedFields","requireFieldLevelRichTextEditor","ClientFeature","generateSchemaMap","schemaMap","Map","set","nodes","node","key"],"mappings":"AAEA,SAASA,aAAa,EAAEC,SAAS,EAAEC,YAAY,QAAQ,iBAAgB;AACvE,SAASC,cAAc,QAAQ,UAAS;AAExC,+DAA+D;AAC/D,SAASC,kBAAkB,QAAQ,gCAA+B;AAClE,SAASC,mBAAmB,QAAQ,yCAAwC;AAE5E,MAAMC,SAAkB;IACtB;QACEC,MAAM;QACNC,MAAM;QACNC,cAAc;QACdC,UAAU;IACZ;IACA;QACEH,MAAM;QACNC,MAAM;QACNC,cAAc;QACdC,UAAU;IACZ;CACD;AACD,OAAO,MAAMC,4BAA4BN,oBAAoB;IAC3DO,SAAS,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAE;QAChC,MAAMC,qBAAqBF,OAAOG,WAAW,CAACC,GAAG,CAAC,CAACC,IAAMA,EAAEC,IAAI,KAAK,EAAE;QAEtE,MAAMC,kBAAkB,MAAMjB,eAAe;YAC3CU,QAAQA;YACRP;YACAe,iCAAiCP;YACjCC;QACF;QACA,OAAO;YACLO,eAAelB;YACfmB,mBAAmB;gBACjB,MAAMC,YAAY,IAAIC;gBAEtBD,UAAUE,GAAG,CAAC,UAAUN;gBAExB,OAAOI;YACT;YACAG,OAAO;gBACL;oBACEC,MAAM3B;gBACR;gBACA;oBACE2B,MAAM5B;gBACR;gBACA;oBACE4B,MAAM1B;gBACR;aACD;QACH;IACF;IACA2B,KAAK;AACP,GAAE"}