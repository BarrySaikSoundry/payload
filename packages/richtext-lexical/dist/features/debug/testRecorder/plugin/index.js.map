{"version":3,"sources":["../../../../../src/features/debug/testRecorder/plugin/index.tsx"],"sourcesContent":["'use client'\nimport type { BaseSelection, LexicalEditor } from 'lexical'\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext.js'\nimport { $createParagraphNode, $createTextNode, $getRoot } from 'lexical'\nimport * as React from 'react'\nimport { type JSX, useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react'\n\nimport type { PluginComponent } from '../../../typesClient.js'\n\nimport { IS_APPLE } from '../../../../lexical/utils/environment.js'\nimport './index.scss'\n\nconst copy = (text: null | string) => {\n  const textArea = document.createElement('textarea')\n  textArea.value = text || ''\n  textArea.style.position = 'absolute'\n  textArea.style.opacity = '0'\n  document.body?.appendChild(textArea)\n  textArea.focus()\n  textArea.select()\n  try {\n    const result = document.execCommand('copy')\n    // eslint-disable-next-line no-console\n    console.log(result)\n  } catch (error) {\n    console.error(error)\n  }\n  document.body?.removeChild(textArea)\n}\n\nconst download = (filename: string, text: null | string) => {\n  const a = document.createElement('a')\n  a.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text || ''))\n  a.setAttribute('download', filename)\n  a.style.display = 'none'\n  document.body?.appendChild(a)\n  a.click()\n  document.body?.removeChild(a)\n}\n\nconst formatStep = (step: Step) => {\n  const formatOneStep = (name: string, value: Step['value']) => {\n    switch (name) {\n      case 'click': {\n        return `      await page.mouse.click(${value.x}, ${value.y});`\n      }\n      case 'press': {\n        return `      await page.keyboard.press('${value}');`\n      }\n      case 'keydown': {\n        return `      await page.keyboard.keydown('${value}');`\n      }\n      case 'keyup': {\n        return `      await page.keyboard.keyup('${value}');`\n      }\n      case 'type': {\n        return `      await page.keyboard.type('${value}');`\n      }\n      case 'selectAll': {\n        return `      await selectAll(page);`\n      }\n      case 'snapshot': {\n        return `      await assertHTMLSnapshot(page);\n      await assertSelection(page, {\n        anchorPath: [${value.anchorPath.toString()}],\n        anchorOffset: ${value.anchorOffset},\n        focusPath: [${value.focusPath.toString()}],\n        focusOffset: ${value.focusOffset},\n      });\n`\n      }\n      default:\n        return ``\n    }\n  }\n  const formattedStep = formatOneStep(step.name, step.value)\n  switch (step.count) {\n    case 1:\n      return formattedStep\n    case 2:\n      return [formattedStep, formattedStep].join(`\\n`)\n    default:\n      return `      await repeat(${step.count}, async () => {\n  ${formattedStep}\n      );`\n  }\n}\n\nexport function isSelectAll(event: KeyboardEvent): boolean {\n  return event.key.toLowerCase() === 'a' && (IS_APPLE ? event.metaKey : event.ctrlKey)\n}\n\n// stolen from LexicalSelection-test\nfunction sanitizeSelection(selection: Selection) {\n  const { anchorNode, focusNode } = selection\n  let { anchorOffset, focusOffset } = selection\n  if (anchorOffset !== 0) {\n    anchorOffset--\n  }\n  if (focusOffset !== 0) {\n    focusOffset--\n  }\n  return { anchorNode, anchorOffset, focusNode, focusOffset }\n}\n\nfunction getPathFromNodeToEditor(node: Node, rootElement: HTMLElement | null) {\n  let currentNode: Node | null | undefined = node\n  const path = []\n  while (currentNode !== rootElement) {\n    if (currentNode !== null && currentNode !== undefined) {\n      path.unshift(\n        Array.from(currentNode?.parentNode?.childNodes ?? []).indexOf(currentNode as ChildNode),\n      )\n    }\n    currentNode = currentNode?.parentNode\n  }\n  return path\n}\n\nconst keyPresses = new Set([\n  'Enter',\n  'Backspace',\n  'Delete',\n  'Escape',\n  'ArrowLeft',\n  'ArrowRight',\n  'ArrowUp',\n  'ArrowDown',\n])\n\ntype Step = {\n  count: number\n  name: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any\n}\n\ntype Steps = Step[]\n\nfunction useTestRecorder(editor: LexicalEditor): [JSX.Element, JSX.Element | null] {\n  const [steps, setSteps] = useState<Steps>([])\n  const [isRecording, setIsRecording] = useState(false)\n  const [, setCurrentInnerHTML] = useState('')\n  const [templatedTest, setTemplatedTest] = useState('')\n  const previousSelectionRef = useRef<BaseSelection | null>(null)\n  const skipNextSelectionChangeRef = useRef(false)\n  const preRef = useRef<HTMLPreElement>(null)\n\n  const getCurrentEditor = useCallback(() => {\n    return editor\n  }, [editor])\n\n  const generateTestContent = useCallback(() => {\n    const rootElement = editor.getRootElement()\n    const browserSelection = window.getSelection()\n\n    if (\n      rootElement == null ||\n      browserSelection == null ||\n      browserSelection.anchorNode == null ||\n      browserSelection.focusNode == null ||\n      !rootElement.contains(browserSelection.anchorNode) ||\n      !rootElement.contains(browserSelection.focusNode)\n    ) {\n      return null\n    }\n\n    return `\nimport {\n  initializeE2E,\n  assertHTMLSnapshot,\n  assertSelection,\n  repeat,\n} from '../utils';\nimport {selectAll} from '../keyboardShortcuts';\nimport { RangeSelection } from 'lexical';\nimport { NodeSelection } from 'lexical';\n\ndescribe('Test case', () => {\n  initializeE2E((e2e) => {\n    it('Should pass this test', async () => {\n      const {page} = e2e;\n\n      await page.focus('div[contenteditable=\"true\"]');\n${steps.map(formatStep).join(`\\n`)}\n    });\n});\n    `\n  }, [editor, steps])\n\n  // just a wrapper around inserting new actions so that we can\n  // coalesce some actions like insertText/moveNativeSelection\n  const pushStep = useCallback(\n    (name: string, value: Step['value']) => {\n      setSteps((currentSteps) => {\n        // trying to group steps\n        const currentIndex = steps.length - 1\n        const lastStep = steps[currentIndex]\n        if (lastStep) {\n          if (lastStep.name === name) {\n            if (name === 'type') {\n              // for typing events we just append the text\n              return [\n                ...steps.slice(0, currentIndex),\n                { ...lastStep, value: lastStep.value + value },\n              ]\n            } else {\n              // for other events we bump the counter if their values are the same\n              if (lastStep.value === value) {\n                return [...steps.slice(0, currentIndex), { ...lastStep, count: lastStep.count + 1 }]\n              }\n            }\n          }\n        }\n        // could not group, just append a new one\n        return [...currentSteps, { name, count: 1, value }]\n      })\n    },\n    [steps, setSteps],\n  )\n\n  useLayoutEffect(() => {\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (!isRecording) {\n        return\n      }\n      const key = event.key\n      if (isSelectAll(event)) {\n        pushStep('selectAll', '')\n      } else if (keyPresses.has(key)) {\n        pushStep('press', event.key)\n      } else if ([...key].length > 1) {\n        pushStep('keydown', event.key)\n      } else {\n        pushStep('type', event.key)\n      }\n    }\n\n    const onKeyUp = (event: KeyboardEvent) => {\n      if (!isRecording) {\n        return\n      }\n      const key = event.key\n      if (!keyPresses.has(key) && [...key].length > 1) {\n        pushStep('keyup', event.key)\n      }\n    }\n\n    return editor.registerRootListener(\n      (rootElement: HTMLElement | null, prevRootElement: HTMLElement | null) => {\n        if (prevRootElement !== null) {\n          prevRootElement.removeEventListener('keydown', onKeyDown)\n          prevRootElement.removeEventListener('keyup', onKeyUp)\n        }\n        if (rootElement !== null) {\n          rootElement.addEventListener('keydown', onKeyDown)\n          rootElement.addEventListener('keyup', onKeyUp)\n        }\n      },\n    )\n  }, [editor, isRecording, pushStep])\n\n  useLayoutEffect(() => {\n    if (preRef.current) {\n      preRef.current.scrollTo(0, preRef.current.scrollHeight)\n    }\n  }, [generateTestContent])\n\n  useEffect(() => {\n    if (steps) {\n      const testContent = generateTestContent()\n      if (testContent !== null) {\n        setTemplatedTest(testContent)\n      }\n      if (preRef.current) {\n        preRef.current.scrollTo(0, preRef.current.scrollHeight)\n      }\n    }\n  }, [generateTestContent, steps])\n\n  useEffect(() => {\n    const removeUpdateListener = editor.registerUpdateListener(\n      ({ dirtyElements, dirtyLeaves, editorState }) => {\n        if (!isRecording) {\n          return\n        }\n        const currentSelection = editorState._selection\n        const previousSelection = previousSelectionRef.current\n        const skipNextSelectionChange = skipNextSelectionChangeRef.current\n        if (previousSelection !== currentSelection) {\n          if (dirtyLeaves.size === 0 && dirtyElements.size === 0 && !skipNextSelectionChange) {\n            const browserSelection = window.getSelection()\n            if (\n              browserSelection &&\n              (browserSelection.anchorNode == null || browserSelection.focusNode == null)\n            ) {\n              return\n            }\n          }\n          previousSelectionRef.current = currentSelection\n        }\n        skipNextSelectionChangeRef.current = false\n        const testContent = generateTestContent()\n        if (testContent !== null) {\n          setTemplatedTest(testContent)\n        }\n      },\n    )\n    return removeUpdateListener\n  }, [editor, generateTestContent, isRecording, pushStep])\n\n  // save innerHTML\n  useEffect(() => {\n    if (!isRecording) {\n      return\n    }\n    const removeUpdateListener = editor.registerUpdateListener(() => {\n      const rootElement = editor.getRootElement()\n      if (rootElement !== null) {\n        setCurrentInnerHTML(rootElement?.innerHTML)\n      }\n    })\n    return removeUpdateListener\n  }, [editor, isRecording])\n\n  // clear editor and start recording\n  const toggleEditorSelection = useCallback(\n    (currentEditor: LexicalEditor) => {\n      if (!isRecording) {\n        currentEditor.update(() => {\n          const root = $getRoot()\n          root.clear()\n          const text = $createTextNode()\n          root.append($createParagraphNode().append(text))\n          text.select()\n        })\n        setSteps([])\n      }\n      setIsRecording((currentIsRecording) => !currentIsRecording)\n    },\n    [isRecording],\n  )\n\n  const onSnapshotClick = useCallback(() => {\n    if (!isRecording) {\n      return\n    }\n    const browserSelection = window.getSelection()\n    if (\n      browserSelection === null ||\n      browserSelection.anchorNode == null ||\n      browserSelection.focusNode == null\n    ) {\n      return\n    }\n    const { anchorNode, anchorOffset, focusNode, focusOffset } = sanitizeSelection(browserSelection)\n    const rootElement = getCurrentEditor().getRootElement()\n    let anchorPath\n    if (anchorNode !== null) {\n      anchorPath = getPathFromNodeToEditor(anchorNode, rootElement)\n    }\n    let focusPath\n    if (focusNode !== null) {\n      focusPath = getPathFromNodeToEditor(focusNode, rootElement)\n    }\n    pushStep('snapshot', {\n      anchorNode,\n      anchorOffset,\n      anchorPath,\n      focusNode,\n      focusOffset,\n      focusPath,\n    })\n  }, [pushStep, isRecording, getCurrentEditor])\n\n  const onCopyClick = useCallback(() => {\n    copy(generateTestContent())\n  }, [generateTestContent])\n\n  const onDownloadClick = useCallback(() => {\n    download('test.js', generateTestContent())\n  }, [generateTestContent])\n\n  const button = (\n    <button\n      className={`editor-dev-button ${isRecording ? 'active' : ''}`}\n      id=\"test-recorder-button\"\n      onClick={(e) => {\n        toggleEditorSelection(getCurrentEditor())\n        e.preventDefault()\n      }}\n      title={isRecording ? 'Disable test recorder' : 'Enable test recorder'}\n      type=\"button\"\n    >\n      {isRecording ? 'Disable test recorder' : 'Enable test recorder'}\n    </button>\n  )\n  const output = isRecording ? (\n    <div className=\"test-recorder-output\">\n      <div className=\"test-recorder-toolbar\">\n        <button\n          className=\"test-recorder-button\"\n          id=\"test-recorder-button-snapshot\"\n          onClick={(e) => {\n            onSnapshotClick()\n            e.preventDefault()\n          }}\n          title=\"Insert snapshot\"\n          type=\"button\"\n        >\n          Insert Snapshot\n        </button>\n        <button\n          className=\"test-recorder-button\"\n          id=\"test-recorder-button-copy\"\n          onClick={(e) => {\n            onCopyClick()\n            e.preventDefault()\n          }}\n          title=\"Copy to clipboard\"\n          type=\"button\"\n        >\n          Copy\n        </button>\n        <button\n          className=\"test-recorder-button\"\n          id=\"test-recorder-button-download\"\n          onClick={(e) => {\n            onDownloadClick()\n            e.preventDefault()\n          }}\n          title=\"Download as a file\"\n          type=\"button\"\n        >\n          Download\n        </button>\n      </div>\n      <pre id=\"test-recorder\" ref={preRef}>\n        {templatedTest}\n      </pre>\n    </div>\n  ) : null\n\n  return [button, output]\n}\nexport const TestRecorderPlugin: PluginComponent<undefined> = () => {\n  const [editor] = useLexicalComposerContext()\n  const [testRecorderButton, testRecorderOutput] = useTestRecorder(editor)\n\n  return (\n    <React.Fragment>\n      <p>HI</p>\n      {testRecorderButton}\n      {testRecorderOutput}\n      <p>DONE</p>\n    </React.Fragment>\n  )\n}\n"],"names":["useLexicalComposerContext","$createParagraphNode","$createTextNode","$getRoot","React","useCallback","useEffect","useLayoutEffect","useRef","useState","IS_APPLE","copy","text","textArea","document","createElement","value","style","position","opacity","body","appendChild","focus","select","result","execCommand","console","log","error","removeChild","download","filename","a","setAttribute","encodeURIComponent","display","click","formatStep","step","formatOneStep","name","x","y","anchorPath","toString","anchorOffset","focusPath","focusOffset","formattedStep","count","join","isSelectAll","event","key","toLowerCase","metaKey","ctrlKey","sanitizeSelection","selection","anchorNode","focusNode","getPathFromNodeToEditor","node","rootElement","currentNode","path","undefined","unshift","Array","from","parentNode","childNodes","indexOf","keyPresses","Set","useTestRecorder","editor","steps","setSteps","isRecording","setIsRecording","setCurrentInnerHTML","templatedTest","setTemplatedTest","previousSelectionRef","skipNextSelectionChangeRef","preRef","getCurrentEditor","generateTestContent","getRootElement","browserSelection","window","getSelection","contains","map","pushStep","currentSteps","currentIndex","length","lastStep","slice","onKeyDown","has","onKeyUp","registerRootListener","prevRootElement","removeEventListener","addEventListener","current","scrollTo","scrollHeight","testContent","removeUpdateListener","registerUpdateListener","dirtyElements","dirtyLeaves","editorState","currentSelection","_selection","previousSelection","skipNextSelectionChange","size","innerHTML","toggleEditorSelection","currentEditor","update","root","clear","append","currentIsRecording","onSnapshotClick","onCopyClick","onDownloadClick","button","className","id","onClick","e","preventDefault","title","type","output","div","pre","ref","TestRecorderPlugin","testRecorderButton","testRecorderOutput","Fragment","p"],"mappings":"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"}