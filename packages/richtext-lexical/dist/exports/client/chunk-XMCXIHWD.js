import{b as g}from"./chunk-QZIAQPM7.js";import{Drawer as $}from"@payloadcms/ui";import{Form as R,FormSubmit as F,RenderFields as O,useConfig as E,useDocumentInfo as M,useFieldProps as T,useTranslation as A}from"@payloadcms/ui";import{getFormState as y}from"@payloadcms/ui/shared";import{useCallback as L,useEffect as k,useState as P}from"react";import{v4 as I}from"uuid";import{jsx as D,jsxs as N}from"react/jsx-runtime";var C=({data:e,featureKey:t,handleDrawerSubmit:o,schemaPathSuffix:a})=>{let{t:i}=A(),{id:n}=M(),{schemaPath:l}=T(),r=E(),[p,x]=P(!1),{field:{richTextComponentMap:_}}=g(),U=`lexical_internal_feature.${t}.fields${a?`.${a}`:""}`,s=`${l}.lexical_internal_feature.${t}${a?`.${a}`:""}`,d=_.get(U);k(()=>{(async()=>{let w=await y({apiRoute:r.routes.api,body:{id:n,data:e??{},operation:"update",schemaPath:s},serverURL:r.serverURL});x(w)})()},[r.routes.api,r.serverURL,s,n,e]);let m=L(async({formState:f})=>await y({apiRoute:r.routes.api,body:{id:n,formState:f,operation:"update",schemaPath:s},serverURL:r.serverURL}),[r.routes.api,r.serverURL,s,n]);return p===!1?null:N(R,{beforeSubmit:[m],disableValidationOnSubmit:!0,fields:Array.isArray(d)?d:[],initialState:p,onChange:[m],onSubmit:o,uuid:I(),children:[D(O,{fieldMap:Array.isArray(d)?d:[],forceRender:!0,path:"",readOnly:!1,schemaPath:s}),D(F,{children:i("fields:saveChanges")})]})};import{jsx as S}from"react/jsx-runtime";var lt=({className:e,data:t,drawerSlug:o,drawerTitle:a,featureKey:i,handleDrawerSubmit:n,schemaPathSuffix:l})=>S($,{className:e,slug:o,title:a??"",children:S(C,{data:t,featureKey:i,handleDrawerSubmit:n,schemaPathSuffix:l})});import{useAuth as H,useConfig as B,useEntityVisibility as K}from"@payloadcms/ui";import*as u from"react";var W=(e,t)=>e.filter(({slug:o,admin:{enableRichTextRelationship:a},upload:i})=>t.visibleEntities.collections.includes(o)?t?.uploads?a&&!!i:i?!1:a:!1),ut=e=>{let{children:t,uploads:o=!1,...a}=e,{collections:i}=B(),{user:n}=H(),{visibleEntities:l}=K(),[r]=u.useState(()=>W(i,{uploads:o,user:n,visibleEntities:l}).map(({slug:p})=>p));return r.length?u.cloneElement(t,{...a,enabledCollectionSlugs:r}):null};import{createCommand as J}from"lexical";var ft=J("INSERT_UPLOAD_WITH_DRAWER_COMMAND");import{DecoratorBlockNode as V}from"@lexical/react/LexicalDecoratorBlockNode.js";import h from"bson-objectid";import{$applyNodeReplacement as X}from"lexical";import*as b from"react";import{jsx as Q}from"react/jsx-runtime";var G=b.lazy(()=>import("./component-VQ4OUM2Q.js").then(e=>({default:e.UploadComponent})));function j(e){return e.parentElement!=null&&e.parentElement.tagName==="LI"&&e.previousSibling===null&&e.getAttribute("aria-roledescription")==="checkbox"}function q(e){if(e.hasAttribute("data-lexical-upload-relation-to")&&e.hasAttribute("data-lexical-upload-id")){let o=e.getAttribute("data-lexical-upload-id"),a=e.getAttribute("data-lexical-upload-relation-to");if(o!=null&&a!=null)return{node:v({data:{fields:{},relationTo:a,value:o}})}}let t=e;return t.src.startsWith("file:///")||j(t),null}var c=class e extends V{__data;constructor({data:t,format:o,key:a}){super(o,a),this.__data=t}static clone(t){return new e({data:t.__data,format:t.__format,key:t.__key})}static getType(){return"upload"}static importDOM(){return{img:t=>({conversion:q,priority:0})}}static importJSON(t){t.version===1&&t?.value?.id&&(t.value=t.value.id),t.version===2&&!t?.id&&(t.id=new h.default().toHexString(),t.version=3);let o={id:t.id,fields:t.fields,relationTo:t.relationTo,value:t.value},a=v({data:o});return a.setFormat(t.format),a}static isInline(){return!1}decorate(){return Q(G,{data:this.__data,format:this.__format,nodeKey:this.getKey()})}exportDOM(){let t=document.createElement("img");return t.setAttribute("data-lexical-upload-id",String(this.__data?.value)),t.setAttribute("data-lexical-upload-relation-to",this.__data?.relationTo),{element:t}}exportJSON(){return{...super.exportJSON(),...this.getData(),type:"upload",version:3}}getData(){return this.getLatest().__data}setData(t){let o=this.getWritable();o.__data=t}updateDOM(){return!1}};function v({data:e}){return e?.id||(e.id=new h.default().toHexString()),X(new c({data:e}))}function St(e){return e instanceof c}export{lt as a,ut as b,ft as c,c as d,v as e,St as f};
//# sourceMappingURL=chunk-XMCXIHWD.js.map
