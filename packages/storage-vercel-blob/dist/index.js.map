{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import type {\n  Adapter,\n  PluginOptions as CloudStoragePluginOptions,\n  CollectionOptions,\n  GeneratedAdapter,\n} from '@payloadcms/plugin-cloud-storage/types'\nimport type { Config, Plugin } from 'payload'\n\nimport { cloudStoragePlugin } from '@payloadcms/plugin-cloud-storage'\n\nimport { getGenerateUrl } from './generateURL.js'\nimport { getHandleDelete } from './handleDelete.js'\nimport { getHandleUpload } from './handleUpload.js'\nimport { getStaticHandler } from './staticHandler.js'\n\nexport type VercelBlobStorageOptions = {\n  /**\n   * Access control level. Currently, only 'public' is supported.\n   * Vercel plans on adding support for private blobs in the future.\n   *\n   * @default 'public'\n   */\n  access?: 'public'\n\n  /**\n   * Add a random suffix to the uploaded file name in Vercel Blob storage\n   *\n   * @default false\n   */\n  addRandomSuffix?: boolean\n\n  /**\n   * Cache-Control max-age in seconds\n   *\n   * @defaultvalue 365 * 24 * 60 * 60 (1 Year)\n   */\n  cacheControlMaxAge?: number\n\n  /**\n   * Collections to apply the Vercel Blob adapter to\n   */\n  collections: Record<string, Omit<CollectionOptions, 'adapter'> | true>\n\n  /**\n   * Whether or not to enable the plugin\n   *\n   * Default: true\n   */\n  enabled?: boolean\n\n  /**\n   * Vercel Blob storage read/write token\n   *\n   * Usually process.env.BLOB_READ_WRITE_TOKEN set by Vercel\n   */\n  token: string\n}\n\nconst defaultUploadOptions: Partial<VercelBlobStorageOptions> = {\n  access: 'public',\n  addRandomSuffix: false,\n  cacheControlMaxAge: 60 * 60 * 24 * 365, // 1 year\n  enabled: true,\n}\n\ntype VercelBlobStoragePlugin = (vercelBlobStorageOpts: VercelBlobStorageOptions) => Plugin\n\nexport const vercelBlobStorage: VercelBlobStoragePlugin =\n  (options: VercelBlobStorageOptions) =>\n  (incomingConfig: Config): Config => {\n    if (options.enabled === false) {\n      return incomingConfig\n    }\n\n    if (!options.token) {\n      throw new Error('The token argument is required for the Vercel Blob adapter.')\n    }\n\n    // Parse storeId from token\n    const storeId = options.token.match(/^vercel_blob_rw_([a-z\\d]+)_[a-z\\d]+$/i)?.[1]?.toLowerCase()\n\n    if (!storeId) {\n      throw new Error(\n        'Invalid token format for Vercel Blob adapter. Should be vercel_blob_rw_<store_id>_<random_string>.',\n      )\n    }\n\n    const optionsWithDefaults = {\n      ...defaultUploadOptions,\n      ...options,\n    }\n\n    const baseUrl = `https://${storeId}.${optionsWithDefaults.access}.blob.vercel-storage.com`\n\n    const adapter = vercelBlobStorageInternal({ ...optionsWithDefaults, baseUrl })\n\n    // Add adapter to each collection option object\n    const collectionsWithAdapter: CloudStoragePluginOptions['collections'] = Object.entries(\n      options.collections,\n    ).reduce(\n      (acc, [slug, collOptions]) => ({\n        ...acc,\n        [slug]: {\n          ...(collOptions === true ? {} : collOptions),\n          adapter,\n        },\n      }),\n      {} as Record<string, CollectionOptions>,\n    )\n\n    // Set disableLocalStorage: true for collections specified in the plugin options\n    const config = {\n      ...incomingConfig,\n      collections: (incomingConfig.collections || []).map((collection) => {\n        if (!collectionsWithAdapter[collection.slug]) {\n          return collection\n        }\n\n        return {\n          ...collection,\n          upload: {\n            ...(typeof collection.upload === 'object' ? collection.upload : {}),\n            disableLocalStorage: true,\n          },\n        }\n      }),\n    }\n\n    return cloudStoragePlugin({\n      collections: collectionsWithAdapter,\n    })(config)\n  }\n\nfunction vercelBlobStorageInternal(\n  options: { baseUrl: string } & VercelBlobStorageOptions,\n): Adapter {\n  return ({ collection, prefix }): GeneratedAdapter => {\n    const { access, addRandomSuffix, baseUrl, cacheControlMaxAge, token } = options\n    return {\n      name: 'vercel-blob',\n      generateURL: getGenerateUrl({ baseUrl, prefix }),\n      handleDelete: getHandleDelete({ baseUrl, prefix, token: options.token }),\n      handleUpload: getHandleUpload({\n        access,\n        addRandomSuffix,\n        baseUrl,\n        cacheControlMaxAge,\n        prefix,\n        token,\n      }),\n      staticHandler: getStaticHandler({ baseUrl, token }, collection),\n    }\n  }\n}\n"],"names":["cloudStoragePlugin","getGenerateUrl","getHandleDelete","getHandleUpload","getStaticHandler","defaultUploadOptions","access","addRandomSuffix","cacheControlMaxAge","enabled","vercelBlobStorage","options","incomingConfig","token","Error","storeId","match","toLowerCase","optionsWithDefaults","baseUrl","adapter","vercelBlobStorageInternal","collectionsWithAdapter","Object","entries","collections","reduce","acc","slug","collOptions","config","map","collection","upload","disableLocalStorage","prefix","name","generateURL","handleDelete","handleUpload","staticHandler"],"mappings":"AAQA,SAASA,kBAAkB,QAAQ,mCAAkC;AAErE,SAASC,cAAc,QAAQ,mBAAkB;AACjD,SAASC,eAAe,QAAQ,oBAAmB;AACnD,SAASC,eAAe,QAAQ,oBAAmB;AACnD,SAASC,gBAAgB,QAAQ,qBAAoB;AA6CrD,MAAMC,uBAA0D;IAC9DC,QAAQ;IACRC,iBAAiB;IACjBC,oBAAoB,KAAK,KAAK,KAAK;IACnCC,SAAS;AACX;AAIA,OAAO,MAAMC,oBACX,CAACC,UACD,CAACC;QACC,IAAID,QAAQF,OAAO,KAAK,OAAO;YAC7B,OAAOG;QACT;QAEA,IAAI,CAACD,QAAQE,KAAK,EAAE;YAClB,MAAM,IAAIC,MAAM;QAClB;QAEA,2BAA2B;QAC3B,MAAMC,UAAUJ,QAAQE,KAAK,CAACG,KAAK,CAAC,0CAA0C,CAAC,EAAE,EAAEC;QAEnF,IAAI,CAACF,SAAS;YACZ,MAAM,IAAID,MACR;QAEJ;QAEA,MAAMI,sBAAsB;YAC1B,GAAGb,oBAAoB;YACvB,GAAGM,OAAO;QACZ;QAEA,MAAMQ,UAAU,CAAC,QAAQ,EAAEJ,QAAQ,CAAC,EAAEG,oBAAoBZ,MAAM,CAAC,wBAAwB,CAAC;QAE1F,MAAMc,UAAUC,0BAA0B;YAAE,GAAGH,mBAAmB;YAAEC;QAAQ;QAE5E,+CAA+C;QAC/C,MAAMG,yBAAmEC,OAAOC,OAAO,CACrFb,QAAQc,WAAW,EACnBC,MAAM,CACN,CAACC,KAAK,CAACC,MAAMC,YAAY,GAAM,CAAA;gBAC7B,GAAGF,GAAG;gBACN,CAACC,KAAK,EAAE;oBACN,GAAIC,gBAAgB,OAAO,CAAC,IAAIA,WAAW;oBAC3CT;gBACF;YACF,CAAA,GACA,CAAC;QAGH,gFAAgF;QAChF,MAAMU,SAAS;YACb,GAAGlB,cAAc;YACjBa,aAAa,AAACb,CAAAA,eAAea,WAAW,IAAI,EAAE,AAAD,EAAGM,GAAG,CAAC,CAACC;gBACnD,IAAI,CAACV,sBAAsB,CAACU,WAAWJ,IAAI,CAAC,EAAE;oBAC5C,OAAOI;gBACT;gBAEA,OAAO;oBACL,GAAGA,UAAU;oBACbC,QAAQ;wBACN,GAAI,OAAOD,WAAWC,MAAM,KAAK,WAAWD,WAAWC,MAAM,GAAG,CAAC,CAAC;wBAClEC,qBAAqB;oBACvB;gBACF;YACF;QACF;QAEA,OAAOlC,mBAAmB;YACxByB,aAAaH;QACf,GAAGQ;IACL,EAAC;AAEH,SAAST,0BACPV,OAAuD;IAEvD,OAAO,CAAC,EAAEqB,UAAU,EAAEG,MAAM,EAAE;QAC5B,MAAM,EAAE7B,MAAM,EAAEC,eAAe,EAAEY,OAAO,EAAEX,kBAAkB,EAAEK,KAAK,EAAE,GAAGF;QACxE,OAAO;YACLyB,MAAM;YACNC,aAAapC,eAAe;gBAAEkB;gBAASgB;YAAO;YAC9CG,cAAcpC,gBAAgB;gBAAEiB;gBAASgB;gBAAQtB,OAAOF,QAAQE,KAAK;YAAC;YACtE0B,cAAcpC,gBAAgB;gBAC5BG;gBACAC;gBACAY;gBACAX;gBACA2B;gBACAtB;YACF;YACA2B,eAAepC,iBAAiB;gBAAEe;gBAASN;YAAM,GAAGmB;QACtD;IACF;AACF"}