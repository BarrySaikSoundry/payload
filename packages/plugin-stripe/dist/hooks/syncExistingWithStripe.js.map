{"version":3,"sources":["../../src/hooks/syncExistingWithStripe.ts"],"sourcesContent":["import type { CollectionBeforeChangeHook, CollectionConfig } from 'payload'\n\nimport { APIError } from 'payload'\nimport Stripe from 'stripe'\n\nimport type { StripePluginConfig } from '../types.js'\n\nimport { deepen } from '../utilities/deepen.js'\n\nconst stripeSecretKey = process.env.STRIPE_SECRET_KEY\n// api version can only be the latest, stripe recommends ts ignoring it\nconst stripe = new Stripe(stripeSecretKey || '', { apiVersion: '2022-08-01' })\n\ntype HookArgsWithCustomCollection = {\n  collection: CollectionConfig\n} & Omit<Parameters<CollectionBeforeChangeHook>[0], 'collection'>\n\nexport type CollectionBeforeChangeHookWithArgs = (\n  args: {\n    collection?: CollectionConfig\n    pluginConfig?: StripePluginConfig\n  } & HookArgsWithCustomCollection,\n) => void\n\nexport const syncExistingWithStripe: CollectionBeforeChangeHookWithArgs = async (args) => {\n  const { collection, data, operation, originalDoc, pluginConfig, req } = args\n\n  const { logs, sync } = pluginConfig || {}\n\n  const { payload } = req\n\n  const { slug: collectionSlug } = collection || {}\n\n  if (process.env.NODE_ENV !== 'test' && !data.skipSync) {\n    const syncConfig = sync?.find((conf) => conf.collection === collectionSlug)\n\n    if (syncConfig) {\n      if (operation === 'update') {\n        // combine all fields of this object and match their respective values within the document\n        let syncedFields = syncConfig.fields.reduce(\n          (acc, field) => {\n            const { fieldPath, stripeProperty } = field\n\n            acc[stripeProperty] = data[fieldPath]\n            return acc\n          },\n          {} as Record<string, any>,\n        )\n\n        syncedFields = deepen(syncedFields)\n\n        if (logs)\n          payload.logger.info(\n            `A '${collectionSlug}' document has changed in Payload with ID: '${originalDoc?._id}', syncing with Stripe...`,\n          )\n\n        if (!data.stripeID) {\n          // NOTE: the \"beforeValidate\" hook populates this\n          if (logs) payload.logger.error(`- There is no Stripe ID for this document, skipping.`)\n        } else {\n          if (logs)\n            payload.logger.info(`- Syncing to Stripe resource with ID: '${data.stripeID}'...`)\n\n          try {\n            const stripeResource = await stripe?.[syncConfig?.stripeResourceType]?.update(\n              data.stripeID,\n              syncedFields,\n            )\n\n            if (logs)\n              payload.logger.info(\n                `âœ… Successfully synced Stripe resource with ID: '${stripeResource.id}'.`,\n              )\n          } catch (error: unknown) {\n            const msg = error instanceof Error ? error.message : error\n            throw new APIError(`Failed to sync document with ID: '${data.id}' to Stripe: ${msg}`)\n          }\n        }\n      }\n    }\n  }\n\n  // Set back to 'false' so that all changes continue to sync to Stripe, see note in './createNewInStripe.ts'\n  data.skipSync = false\n\n  return data\n}\n"],"names":["APIError","Stripe","deepen","stripeSecretKey","process","env","STRIPE_SECRET_KEY","stripe","apiVersion","syncExistingWithStripe","args","collection","data","operation","originalDoc","pluginConfig","req","logs","sync","payload","slug","collectionSlug","NODE_ENV","skipSync","syncConfig","find","conf","syncedFields","fields","reduce","acc","field","fieldPath","stripeProperty","logger","info","_id","stripeID","error","stripeResource","stripeResourceType","update","id","msg","Error","message"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,UAAS;AAClC,OAAOC,YAAY,SAAQ;AAI3B,SAASC,MAAM,QAAQ,yBAAwB;AAE/C,MAAMC,kBAAkBC,QAAQC,GAAG,CAACC,iBAAiB;AACrD,uEAAuE;AACvE,MAAMC,SAAS,IAAIN,OAAOE,mBAAmB,IAAI;IAAEK,YAAY;AAAa;AAa5E,OAAO,MAAMC,yBAA6D,OAAOC;IAC/E,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,GAAG,EAAE,GAAGN;IAExE,MAAM,EAAEO,IAAI,EAAEC,IAAI,EAAE,GAAGH,gBAAgB,CAAC;IAExC,MAAM,EAAEI,OAAO,EAAE,GAAGH;IAEpB,MAAM,EAAEI,MAAMC,cAAc,EAAE,GAAGV,cAAc,CAAC;IAEhD,IAAIP,QAAQC,GAAG,CAACiB,QAAQ,KAAK,UAAU,CAACV,KAAKW,QAAQ,EAAE;QACrD,MAAMC,aAAaN,MAAMO,KAAK,CAACC,OAASA,KAAKf,UAAU,KAAKU;QAE5D,IAAIG,YAAY;YACd,IAAIX,cAAc,UAAU;gBAC1B,0FAA0F;gBAC1F,IAAIc,eAAeH,WAAWI,MAAM,CAACC,MAAM,CACzC,CAACC,KAAKC;oBACJ,MAAM,EAAEC,SAAS,EAAEC,cAAc,EAAE,GAAGF;oBAEtCD,GAAG,CAACG,eAAe,GAAGrB,IAAI,CAACoB,UAAU;oBACrC,OAAOF;gBACT,GACA,CAAC;gBAGHH,eAAezB,OAAOyB;gBAEtB,IAAIV,MACFE,QAAQe,MAAM,CAACC,IAAI,CACjB,CAAC,GAAG,EAAEd,eAAe,4CAA4C,EAAEP,aAAasB,IAAI,yBAAyB,CAAC;gBAGlH,IAAI,CAACxB,KAAKyB,QAAQ,EAAE;oBAClB,iDAAiD;oBACjD,IAAIpB,MAAME,QAAQe,MAAM,CAACI,KAAK,CAAC,CAAC,oDAAoD,CAAC;gBACvF,OAAO;oBACL,IAAIrB,MACFE,QAAQe,MAAM,CAACC,IAAI,CAAC,CAAC,uCAAuC,EAAEvB,KAAKyB,QAAQ,CAAC,IAAI,CAAC;oBAEnF,IAAI;wBACF,MAAME,iBAAiB,MAAMhC,QAAQ,CAACiB,YAAYgB,mBAAmB,EAAEC,OACrE7B,KAAKyB,QAAQ,EACbV;wBAGF,IAAIV,MACFE,QAAQe,MAAM,CAACC,IAAI,CACjB,CAAC,gDAAgD,EAAEI,eAAeG,EAAE,CAAC,EAAE,CAAC;oBAE9E,EAAE,OAAOJ,OAAgB;wBACvB,MAAMK,MAAML,iBAAiBM,QAAQN,MAAMO,OAAO,GAAGP;wBACrD,MAAM,IAAItC,SAAS,CAAC,kCAAkC,EAAEY,KAAK8B,EAAE,CAAC,aAAa,EAAEC,IAAI,CAAC;oBACtF;gBACF;YACF;QACF;IACF;IAEA,2GAA2G;IAC3G/B,KAAKW,QAAQ,GAAG;IAEhB,OAAOX;AACT,EAAC"}