{"version":3,"sources":["../../src/webhooks/handleCreatedOrUpdated.ts"],"sourcesContent":["import { v4 as uuid } from 'uuid'\n\nimport type { SanitizedStripePluginConfig, StripeWebhookHandler } from '../types.js'\n\nimport { deepen } from '../utilities/deepen.js'\n\ntype HandleCreatedOrUpdated = (\n  args: {\n    resourceType: string\n    syncConfig: SanitizedStripePluginConfig['sync'][0]\n  } & Parameters<StripeWebhookHandler>[0],\n) => void\n\nexport const handleCreatedOrUpdated: HandleCreatedOrUpdated = async (args) => {\n  const { config: payloadConfig, event, payload, pluginConfig, resourceType, syncConfig } = args\n\n  const { logs } = pluginConfig || {}\n\n  const stripeDoc: any = event?.data?.object || {}\n\n  const { id: stripeID, object: eventObject } = stripeDoc\n\n  // NOTE: the Stripe API does not nest fields, everything is an object at the top level\n  // if the event object and resource type don't match, this change was not top-level\n  const isNestedChange = eventObject !== resourceType\n\n  // let stripeID = docID;\n  // if (isNestedChange) {\n  //   const parentResource = stripeDoc[resourceType];\n  //   stripeID = parentResource;\n  // }\n\n  if (isNestedChange) {\n    if (logs)\n      payload.logger.info(\n        `- This change occurred on a nested field of ${resourceType}. Nested fields are not yet supported in auto-sync but can be manually setup.`,\n      )\n  }\n\n  if (!isNestedChange) {\n    if (logs)\n      payload.logger.info(\n        `- A new document was created or updated in Stripe, now syncing to Payload...`,\n      )\n\n    const collectionSlug = syncConfig?.collection\n\n    const isAuthCollection = Boolean(\n      payloadConfig?.collections?.find((collection) => collection.slug === collectionSlug)?.auth,\n    )\n\n    // First, search for an existing document in Payload\n    const payloadQuery = await payload.find({\n      collection: collectionSlug,\n      where: {\n        stripeID: {\n          equals: stripeID,\n        },\n      },\n    })\n\n    const foundDoc = payloadQuery.docs[0] as any\n\n    // combine all properties of the Stripe doc and match their respective fields within the document\n    let syncedData = syncConfig.fields.reduce(\n      (acc, field) => {\n        const { fieldPath, stripeProperty } = field\n\n        acc[fieldPath] = stripeDoc[stripeProperty]\n        return acc\n      },\n      {} as Record<string, any>,\n    )\n\n    syncedData = deepen({\n      ...syncedData,\n      skipSync: true,\n      stripeID,\n    })\n\n    if (!foundDoc) {\n      if (logs)\n        payload.logger.info(\n          `- No existing '${collectionSlug}' document found with Stripe ID: '${stripeID}', creating new...`,\n        )\n\n      // auth docs must use unique emails\n      let authDoc = null\n\n      if (isAuthCollection) {\n        try {\n          if (stripeDoc?.email) {\n            const authQuery = await payload.find({\n              collection: collectionSlug,\n              where: {\n                email: {\n                  equals: stripeDoc.email,\n                },\n              },\n            })\n\n            authDoc = authQuery.docs[0] as any\n\n            if (authDoc) {\n              if (logs)\n                payload.logger.info(\n                  `- Account already exists with e-mail: ${stripeDoc.email}, updating now...`,\n                )\n\n              // account exists by email, so update it instead\n              try {\n                await payload.update({\n                  id: authDoc.id,\n                  collection: collectionSlug,\n                  data: syncedData,\n                })\n\n                if (logs)\n                  payload.logger.info(\n                    `✅ Successfully updated '${collectionSlug}' document in Payload with ID: '${authDoc.id}.'`,\n                  )\n              } catch (err: unknown) {\n                const msg = err instanceof Error ? err.message : err\n                if (logs)\n                  payload.logger.error(\n                    `- Error updating existing '${collectionSlug}' document: ${msg}`,\n                  )\n              }\n            }\n          } else {\n            if (logs)\n              payload.logger.error(\n                `No email was provided from Stripe, cannot create new '${collectionSlug}' document.`,\n              )\n          }\n        } catch (error: unknown) {\n          const msg = error instanceof Error ? error.message : error\n          if (logs)\n            payload.logger.error(`Error looking up '${collectionSlug}' document in Payload: ${msg}`)\n        }\n      }\n\n      if (!isAuthCollection || (isAuthCollection && !authDoc)) {\n        try {\n          if (logs)\n            payload.logger.info(\n              `- Creating new '${collectionSlug}' document in Payload with Stripe ID: '${stripeID}'.`,\n            )\n\n          // generate a strong, unique password for the new user\n          const password: string = uuid()\n\n          await payload.create({\n            collection: collectionSlug,\n            data: {\n              ...syncedData,\n              password,\n              passwordConfirm: password,\n            },\n            disableVerificationEmail: isAuthCollection ? true : undefined,\n          })\n\n          if (logs)\n            payload.logger.info(\n              `✅ Successfully created new '${collectionSlug}' document in Payload with Stripe ID: '${stripeID}'.`,\n            )\n        } catch (error: unknown) {\n          const msg = error instanceof Error ? error.message : error\n          if (logs) payload.logger.error(`Error creating new document in Payload: ${msg}`)\n        }\n      }\n    } else {\n      if (logs)\n        payload.logger.info(\n          `- Existing '${collectionSlug}' document found in Payload with Stripe ID: '${stripeID}', updating now...`,\n        )\n\n      try {\n        await payload.update({\n          id: foundDoc.id,\n          collection: collectionSlug,\n          data: syncedData,\n        })\n\n        if (logs)\n          payload.logger.info(\n            `✅ Successfully updated '${collectionSlug}' document in Payload from Stripe ID: '${stripeID}'.`,\n          )\n      } catch (error: unknown) {\n        const msg = error instanceof Error ? error.message : error\n        if (logs)\n          payload.logger.error(`Error updating '${collectionSlug}' document in Payload: ${msg}`)\n      }\n    }\n  }\n}\n"],"names":["v4","uuid","deepen","handleCreatedOrUpdated","args","config","payloadConfig","event","payload","pluginConfig","resourceType","syncConfig","logs","stripeDoc","data","object","id","stripeID","eventObject","isNestedChange","logger","info","collectionSlug","collection","isAuthCollection","Boolean","collections","find","slug","auth","payloadQuery","where","equals","foundDoc","docs","syncedData","fields","reduce","acc","field","fieldPath","stripeProperty","skipSync","authDoc","email","authQuery","update","err","msg","Error","message","error","password","create","passwordConfirm","disableVerificationEmail","undefined"],"mappings":"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"}