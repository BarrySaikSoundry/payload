{"version":3,"sources":["../../src/routes/webhooks.ts"],"sourcesContent":["import type { Config as PayloadConfig, PayloadRequest } from 'payload'\n\nimport Stripe from 'stripe'\n\nimport type { StripePluginConfig } from '../types.js'\n\nimport { handleWebhooks } from '../webhooks/index.js'\n\nexport const stripeWebhooks = async (args: {\n  config: PayloadConfig\n  pluginConfig: StripePluginConfig\n  req: PayloadRequest\n}): Promise<any> => {\n  const { config, pluginConfig, req } = args\n  let returnStatus = 200\n\n  const { stripeSecretKey, stripeWebhooksEndpointSecret, webhooks } = pluginConfig\n\n  if (stripeWebhooksEndpointSecret) {\n    const stripe = new Stripe(stripeSecretKey, {\n      // api version can only be the latest, stripe recommends ts ignoring it\n      apiVersion: '2022-08-01',\n      appInfo: {\n        name: 'Stripe Payload Plugin',\n        url: 'https://payloadcms.com',\n      },\n    })\n\n    const body = await req.text()\n    const stripeSignature = req.headers.get('stripe-signature')\n\n    if (stripeSignature) {\n      let event: Stripe.Event | undefined\n\n      try {\n        event = stripe.webhooks.constructEvent(body, stripeSignature, stripeWebhooksEndpointSecret)\n      } catch (err: unknown) {\n        const msg: string = err instanceof Error ? err.message : JSON.stringify(err)\n        req.payload.logger.error(`Error constructing Stripe event: ${msg}`)\n        returnStatus = 400\n      }\n\n      if (event) {\n        handleWebhooks({\n          config,\n          event,\n          payload: req.payload,\n          pluginConfig,\n          req,\n          stripe,\n        })\n\n        // Fire external webhook handlers if they exist\n        if (typeof webhooks === 'function') {\n          webhooks({\n            config,\n            event,\n            payload: req.payload,\n            pluginConfig,\n            req,\n            stripe,\n          })\n        }\n\n        if (typeof webhooks === 'object') {\n          const webhookEventHandler = webhooks[event.type]\n          if (typeof webhookEventHandler === 'function') {\n            webhookEventHandler({\n              config,\n              event,\n              payload: req.payload,\n              pluginConfig,\n              req,\n              stripe,\n            })\n          }\n        }\n      }\n    }\n  }\n\n  return Response.json(\n    { received: true },\n    {\n      status: returnStatus,\n    },\n  )\n}\n"],"names":["Stripe","handleWebhooks","stripeWebhooks","args","config","pluginConfig","req","returnStatus","stripeSecretKey","stripeWebhooksEndpointSecret","webhooks","stripe","apiVersion","appInfo","name","url","body","text","stripeSignature","headers","get","event","constructEvent","err","msg","Error","message","JSON","stringify","payload","logger","error","webhookEventHandler","type","Response","json","received","status"],"mappings":"AAEA,OAAOA,YAAY,SAAQ;AAI3B,SAASC,cAAc,QAAQ,uBAAsB;AAErD,OAAO,MAAMC,iBAAiB,OAAOC;IAKnC,MAAM,EAAEC,MAAM,EAAEC,YAAY,EAAEC,GAAG,EAAE,GAAGH;IACtC,IAAII,eAAe;IAEnB,MAAM,EAAEC,eAAe,EAAEC,4BAA4B,EAAEC,QAAQ,EAAE,GAAGL;IAEpE,IAAII,8BAA8B;QAChC,MAAME,SAAS,IAAIX,OAAOQ,iBAAiB;YACzC,uEAAuE;YACvEI,YAAY;YACZC,SAAS;gBACPC,MAAM;gBACNC,KAAK;YACP;QACF;QAEA,MAAMC,OAAO,MAAMV,IAAIW,IAAI;QAC3B,MAAMC,kBAAkBZ,IAAIa,OAAO,CAACC,GAAG,CAAC;QAExC,IAAIF,iBAAiB;YACnB,IAAIG;YAEJ,IAAI;gBACFA,QAAQV,OAAOD,QAAQ,CAACY,cAAc,CAACN,MAAME,iBAAiBT;YAChE,EAAE,OAAOc,KAAc;gBACrB,MAAMC,MAAcD,eAAeE,QAAQF,IAAIG,OAAO,GAAGC,KAAKC,SAAS,CAACL;gBACxEjB,IAAIuB,OAAO,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,iCAAiC,EAAEP,IAAI,CAAC;gBAClEjB,eAAe;YACjB;YAEA,IAAIc,OAAO;gBACTpB,eAAe;oBACbG;oBACAiB;oBACAQ,SAASvB,IAAIuB,OAAO;oBACpBxB;oBACAC;oBACAK;gBACF;gBAEA,+CAA+C;gBAC/C,IAAI,OAAOD,aAAa,YAAY;oBAClCA,SAAS;wBACPN;wBACAiB;wBACAQ,SAASvB,IAAIuB,OAAO;wBACpBxB;wBACAC;wBACAK;oBACF;gBACF;gBAEA,IAAI,OAAOD,aAAa,UAAU;oBAChC,MAAMsB,sBAAsBtB,QAAQ,CAACW,MAAMY,IAAI,CAAC;oBAChD,IAAI,OAAOD,wBAAwB,YAAY;wBAC7CA,oBAAoB;4BAClB5B;4BACAiB;4BACAQ,SAASvB,IAAIuB,OAAO;4BACpBxB;4BACAC;4BACAK;wBACF;oBACF;gBACF;YACF;QACF;IACF;IAEA,OAAOuB,SAASC,IAAI,CAClB;QAAEC,UAAU;IAAK,GACjB;QACEC,QAAQ9B;IACV;AAEJ,EAAC"}