{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import type { Config, Endpoint } from 'payload'\n\nimport type { SanitizedStripePluginConfig, StripePluginConfig } from './types.js'\n\nimport { getFields } from './fields/getFields.js'\nimport { createNewInStripe } from './hooks/createNewInStripe.js'\nimport { deleteFromStripe } from './hooks/deleteFromStripe.js'\nimport { syncExistingWithStripe } from './hooks/syncExistingWithStripe.js'\nimport { stripeREST } from './routes/rest.js'\nimport { stripeWebhooks } from './routes/webhooks.js'\n\nexport { LinkToDoc } from './ui/LinkToDoc.js'\nexport { stripeProxy } from './utilities/stripeProxy.js'\n\nexport const stripePlugin =\n  (incomingStripeConfig: StripePluginConfig) =>\n  (config: Config): Config => {\n    const { collections } = config\n\n    // set config defaults here\n    const pluginConfig: SanitizedStripePluginConfig = {\n      ...incomingStripeConfig,\n      rest: incomingStripeConfig?.rest ?? false,\n      sync: incomingStripeConfig?.sync || [],\n    }\n\n    // NOTE: env variables are never passed to the client, but we need to know if `stripeSecretKey` is a test key\n    // unfortunately we must set the 'isTestKey' property on the config instead of using the following code:\n    // const isTestKey = stripeConfig.stripeSecretKey?.startsWith('sk_test_');\n\n    const endpoints: Endpoint[] = [\n      ...(config?.endpoints || []),\n      {\n        handler: async (req) => {\n          const res = await stripeWebhooks({\n            config,\n            pluginConfig,\n            req,\n          })\n\n          return res\n        },\n        method: 'post',\n        path: '/stripe/webhooks',\n      },\n    ]\n\n    if (incomingStripeConfig?.rest) {\n      endpoints.push({\n        handler: async (req) => {\n          const res = await stripeREST({\n            pluginConfig,\n            req,\n          })\n\n          return res\n        },\n        method: 'post' as Endpoint['method'],\n        path: '/stripe/rest',\n      })\n    }\n\n    return {\n      ...config,\n      collections: collections?.map((collection) => {\n        const { hooks: existingHooks } = collection\n\n        const syncConfig = pluginConfig.sync?.find((sync) => sync.collection === collection.slug)\n\n        if (syncConfig) {\n          const fields = getFields({\n            collection,\n            pluginConfig,\n            syncConfig,\n          })\n          return {\n            ...collection,\n            fields,\n            hooks: {\n              ...collection.hooks,\n              afterDelete: [\n                ...(existingHooks?.afterDelete || []),\n                (args) =>\n                  deleteFromStripe({\n                    ...args,\n                    collection,\n                    pluginConfig,\n                  }),\n              ],\n              beforeChange: [\n                ...(existingHooks?.beforeChange || []),\n                (args) =>\n                  syncExistingWithStripe({\n                    ...args,\n                    collection,\n                    pluginConfig,\n                  }),\n              ],\n              beforeValidate: [\n                ...(existingHooks?.beforeValidate || []),\n                (args) =>\n                  createNewInStripe({\n                    ...args,\n                    collection,\n                    pluginConfig,\n                  }),\n              ],\n            },\n          }\n        }\n\n        return collection\n      }),\n      endpoints,\n    }\n  }\n"],"names":["getFields","createNewInStripe","deleteFromStripe","syncExistingWithStripe","stripeREST","stripeWebhooks","LinkToDoc","stripeProxy","stripePlugin","incomingStripeConfig","config","collections","pluginConfig","rest","sync","endpoints","handler","req","res","method","path","push","map","collection","hooks","existingHooks","syncConfig","find","slug","fields","afterDelete","args","beforeChange","beforeValidate"],"mappings":"AAIA,SAASA,SAAS,QAAQ,wBAAuB;AACjD,SAASC,iBAAiB,QAAQ,+BAA8B;AAChE,SAASC,gBAAgB,QAAQ,8BAA6B;AAC9D,SAASC,sBAAsB,QAAQ,oCAAmC;AAC1E,SAASC,UAAU,QAAQ,mBAAkB;AAC7C,SAASC,cAAc,QAAQ,uBAAsB;AAErD,SAASC,SAAS,QAAQ,oBAAmB;AAC7C,SAASC,WAAW,QAAQ,6BAA4B;AAExD,OAAO,MAAMC,eACX,CAACC,uBACD,CAACC;QACC,MAAM,EAAEC,WAAW,EAAE,GAAGD;QAExB,2BAA2B;QAC3B,MAAME,eAA4C;YAChD,GAAGH,oBAAoB;YACvBI,MAAMJ,sBAAsBI,QAAQ;YACpCC,MAAML,sBAAsBK,QAAQ,EAAE;QACxC;QAEA,6GAA6G;QAC7G,wGAAwG;QACxG,0EAA0E;QAE1E,MAAMC,YAAwB;eACxBL,QAAQK,aAAa,EAAE;YAC3B;gBACEC,SAAS,OAAOC;oBACd,MAAMC,MAAM,MAAMb,eAAe;wBAC/BK;wBACAE;wBACAK;oBACF;oBAEA,OAAOC;gBACT;gBACAC,QAAQ;gBACRC,MAAM;YACR;SACD;QAED,IAAIX,sBAAsBI,MAAM;YAC9BE,UAAUM,IAAI,CAAC;gBACbL,SAAS,OAAOC;oBACd,MAAMC,MAAM,MAAMd,WAAW;wBAC3BQ;wBACAK;oBACF;oBAEA,OAAOC;gBACT;gBACAC,QAAQ;gBACRC,MAAM;YACR;QACF;QAEA,OAAO;YACL,GAAGV,MAAM;YACTC,aAAaA,aAAaW,IAAI,CAACC;gBAC7B,MAAM,EAAEC,OAAOC,aAAa,EAAE,GAAGF;gBAEjC,MAAMG,aAAad,aAAaE,IAAI,EAAEa,KAAK,CAACb,OAASA,KAAKS,UAAU,KAAKA,WAAWK,IAAI;gBAExF,IAAIF,YAAY;oBACd,MAAMG,SAAS7B,UAAU;wBACvBuB;wBACAX;wBACAc;oBACF;oBACA,OAAO;wBACL,GAAGH,UAAU;wBACbM;wBACAL,OAAO;4BACL,GAAGD,WAAWC,KAAK;4BACnBM,aAAa;mCACPL,eAAeK,eAAe,EAAE;gCACpC,CAACC,OACC7B,iBAAiB;wCACf,GAAG6B,IAAI;wCACPR;wCACAX;oCACF;6BACH;4BACDoB,cAAc;mCACRP,eAAeO,gBAAgB,EAAE;gCACrC,CAACD,OACC5B,uBAAuB;wCACrB,GAAG4B,IAAI;wCACPR;wCACAX;oCACF;6BACH;4BACDqB,gBAAgB;mCACVR,eAAeQ,kBAAkB,EAAE;gCACvC,CAACF,OACC9B,kBAAkB;wCAChB,GAAG8B,IAAI;wCACPR;wCACAX;oCACF;6BACH;wBACH;oBACF;gBACF;gBAEA,OAAOW;YACT;YACAR;QACF;IACF,EAAC"}