{"version":3,"sources":["../../../src/utilities/slate/serializeSlate.ts"],"sourcesContent":["import escapeHTML from 'escape-html'\n\nimport { replaceDoubleCurlys } from '../replaceDoubleCurlys.js'\n\ninterface Node {\n  bold?: boolean\n  children?: Node[]\n  code?: boolean\n  italic?: boolean\n  text?: string\n  type?: string\n  url?: string\n}\n\nconst isTextNode = (node: Node): node is { text: string } & Node => {\n  return 'text' in node\n}\n\nexport const serializeSlate = (children?: Node[], submissionData?: any): string | undefined =>\n  children\n    ?.map((node: Node) => {\n      if (isTextNode(node)) {\n        let text = `<span>${escapeHTML(replaceDoubleCurlys(node.text, submissionData))}</span>`\n\n        if (node.bold) {\n          text = `\n        <strong>\n          ${text}\n        </strong>\n      `\n        }\n\n        if (node.code) {\n          text = `\n        <code>\n          ${text}\n        </code>\n      `\n        }\n\n        if (node.italic) {\n          text = `\n        <em >\n          ${text}\n        </em>\n      `\n        }\n\n        return text\n      }\n\n      if (!node) {\n        return null\n      }\n\n      switch (node.type) {\n        case 'h1':\n          return `\n        <h1>\n          ${serializeSlate(node.children, submissionData)}\n        </h1>\n      `\n        case 'h2':\n          return `\n        <h2>\n          ${serializeSlate(node.children, submissionData)}\n        </h2>\n      `\n        case 'h3':\n          return `\n        <h3>\n          ${serializeSlate(node.children, submissionData)}\n        </h3>\n      `\n        case 'h4':\n          return `\n        <h4>\n          ${serializeSlate(node.children, submissionData)}\n        </h4>\n      `\n        case 'h5':\n          return `\n        <h5>\n          ${serializeSlate(node.children, submissionData)}\n        </h5>\n      `\n        case 'h6':\n          return `\n        <h6>\n          ${serializeSlate(node.children, submissionData)}\n        </h6>\n      `\n        case 'quote':\n          return `\n        <blockquote>\n          ${serializeSlate(node.children, submissionData)}\n        </blockquote>\n      `\n        case 'ul':\n          return `\n        <ul>\n          ${serializeSlate(node.children, submissionData)}\n        </ul>\n      `\n        case 'ol':\n          return `\n        <ol>\n          ${serializeSlate(node.children, submissionData)}\n        </ol>\n      `\n        case 'li':\n          return `\n        <li>\n          ${serializeSlate(node.children, submissionData)}\n        </li>\n      `\n        case 'indent':\n          return `\n          <p style=\"padding-left: 20px\">\n            ${serializeSlate(node.children, submissionData)}\n          </p>\n        `\n        case 'link':\n          return `\n          <a href={${escapeHTML(replaceDoubleCurlys(node.url, submissionData))}}>\n          ${serializeSlate(node.children, submissionData)}\n        </a>\n      `\n\n        default:\n          return `\n        <p>\n          ${serializeSlate(node.children, submissionData)}\n        </p>\n      `\n      }\n    })\n    .filter(Boolean)\n    .join('')\n"],"names":["escapeHTML","replaceDoubleCurlys","isTextNode","node","serializeSlate","children","submissionData","map","text","bold","code","italic","type","url","filter","Boolean","join"],"mappings":"AAAA,OAAOA,gBAAgB,cAAa;AAEpC,SAASC,mBAAmB,QAAQ,4BAA2B;AAY/D,MAAMC,aAAa,CAACC;IAClB,OAAO,UAAUA;AACnB;AAEA,OAAO,MAAMC,iBAAiB,CAACC,UAAmBC,iBAChDD,UACIE,IAAI,CAACJ;QACL,IAAID,WAAWC,OAAO;YACpB,IAAIK,OAAO,CAAC,MAAM,EAAER,WAAWC,oBAAoBE,KAAKK,IAAI,EAAEF,iBAAiB,OAAO,CAAC;YAEvF,IAAIH,KAAKM,IAAI,EAAE;gBACbD,OAAO,CAAC;;UAER,EAAEA,KAAK;;MAEX,CAAC;YACC;YAEA,IAAIL,KAAKO,IAAI,EAAE;gBACbF,OAAO,CAAC;;UAER,EAAEA,KAAK;;MAEX,CAAC;YACC;YAEA,IAAIL,KAAKQ,MAAM,EAAE;gBACfH,OAAO,CAAC;;UAER,EAAEA,KAAK;;MAEX,CAAC;YACC;YAEA,OAAOA;QACT;QAEA,IAAI,CAACL,MAAM;YACT,OAAO;QACT;QAEA,OAAQA,KAAKS,IAAI;YACf,KAAK;gBACH,OAAO,CAAC;;UAER,EAAER,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;YACC,KAAK;gBACH,OAAO,CAAC;;UAER,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;YACC,KAAK;gBACH,OAAO,CAAC;;UAER,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;YACC,KAAK;gBACH,OAAO,CAAC;;UAER,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;YACC,KAAK;gBACH,OAAO,CAAC;;UAER,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;YACC,KAAK;gBACH,OAAO,CAAC;;UAER,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;YACC,KAAK;gBACH,OAAO,CAAC;;UAER,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;YACC,KAAK;gBACH,OAAO,CAAC;;UAER,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;YACC,KAAK;gBACH,OAAO,CAAC;;UAER,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;YACC,KAAK;gBACH,OAAO,CAAC;;UAER,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;YACC,KAAK;gBACH,OAAO,CAAC;;YAEN,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;QAEpD,CAAC;YACD,KAAK;gBACH,OAAO,CAAC;mBACC,EAAEN,WAAWC,oBAAoBE,KAAKU,GAAG,EAAEP,iBAAiB;UACrE,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;YAEC;gBACE,OAAO,CAAC;;UAER,EAAEF,eAAeD,KAAKE,QAAQ,EAAEC,gBAAgB;;MAEpD,CAAC;QACD;IACF,GACCQ,OAAOC,SACPC,KAAK,IAAG"}