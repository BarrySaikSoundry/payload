{"version":3,"sources":["../../../src/collections/Forms/index.ts"],"sourcesContent":["import type { Block, CollectionConfig, Field } from 'payload'\n\nimport merge from 'deepmerge'\n\nimport type { FieldConfig, FormBuilderPluginConfig } from '../../types.js'\n\nimport { fields } from './fields.js'\n\n// all settings can be overridden by the config\nexport const generateFormCollection = (formConfig: FormBuilderPluginConfig): CollectionConfig => {\n  const redirect: Field = {\n    name: 'redirect',\n    type: 'group',\n    admin: {\n      condition: (_, siblingData) => siblingData?.confirmationType === 'redirect',\n      hideGutter: true,\n    },\n    fields: [\n      {\n        name: 'url',\n        type: 'text',\n        label: 'URL to redirect to',\n        required: true,\n      },\n    ],\n  }\n\n  if (formConfig.redirectRelationships) {\n    redirect.fields.unshift({\n      name: 'reference',\n      type: 'relationship',\n      admin: {\n        condition: (_, siblingData) => siblingData?.type === 'reference',\n      },\n      label: 'Document to link to',\n      maxDepth: 2,\n      relationTo: formConfig.redirectRelationships,\n      required: true,\n    })\n\n    redirect.fields.unshift({\n      name: 'type',\n      type: 'radio',\n      admin: {\n        layout: 'horizontal',\n      },\n      defaultValue: 'reference',\n      options: [\n        {\n          label: 'Internal link',\n          value: 'reference',\n        },\n        {\n          label: 'Custom URL',\n          value: 'custom',\n        },\n      ],\n    })\n\n    if (redirect.fields[2].type !== 'row') redirect.fields[2].label = 'Custom URL'\n\n    redirect.fields[2].admin = {\n      condition: (_, siblingData) => siblingData?.type === 'custom',\n    }\n  }\n\n  const defaultFields: Field[] = [\n    {\n      name: 'title',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'fields',\n      type: 'blocks',\n      blocks: Object.entries(formConfig?.fields || {})\n        .map(([fieldKey, fieldConfig]) => {\n          // let the config enable/disable fields with either boolean values or objects\n          if (fieldConfig !== false) {\n            const block = fields[fieldKey]\n\n            if (block === undefined && typeof fieldConfig === 'object') {\n              return fieldConfig\n            }\n\n            if (typeof block === 'object' && typeof fieldConfig === 'object') {\n              return merge<FieldConfig>(block, fieldConfig, {\n                arrayMerge: (_, sourceArray) => sourceArray,\n              })\n            }\n\n            if (typeof block === 'function') {\n              return block(fieldConfig)\n            }\n\n            return block\n          }\n\n          return null\n        })\n        .filter(Boolean) as Block[],\n    },\n    {\n      name: 'submitButtonLabel',\n      type: 'text',\n      localized: true,\n    },\n    {\n      name: 'confirmationType',\n      type: 'radio',\n      admin: {\n        description:\n          'Choose whether to display an on-page message or redirect to a different page after they submit the form.',\n        layout: 'horizontal',\n      },\n      defaultValue: 'message',\n      options: [\n        {\n          label: 'Message',\n          value: 'message',\n        },\n        {\n          label: 'Redirect',\n          value: 'redirect',\n        },\n      ],\n    },\n    {\n      name: 'confirmationMessage',\n      type: 'richText',\n      admin: {\n        condition: (_, siblingData) => siblingData?.confirmationType === 'message',\n      },\n      localized: true,\n      required: true,\n    },\n    redirect,\n    {\n      name: 'emails',\n      type: 'array',\n      admin: {\n        description:\n          \"Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}.\",\n      },\n      fields: [\n        {\n          type: 'row',\n          fields: [\n            {\n              name: 'emailTo',\n              type: 'text',\n              admin: {\n                placeholder: '\"Email Sender\" <sender@email.com>',\n                width: '100%',\n              },\n              label: 'Email To',\n            },\n            {\n              name: 'cc',\n              type: 'text',\n              admin: {\n                width: '50%',\n              },\n              label: 'CC',\n            },\n            {\n              name: 'bcc',\n              type: 'text',\n              admin: {\n                width: '50%',\n              },\n              label: 'BCC',\n            },\n          ],\n        },\n        {\n          type: 'row',\n          fields: [\n            {\n              name: 'replyTo',\n              type: 'text',\n              admin: {\n                placeholder: '\"Reply To\" <reply-to@email.com>',\n                width: '50%',\n              },\n              label: 'Reply To',\n            },\n            {\n              name: 'emailFrom',\n              type: 'text',\n              admin: {\n                placeholder: '\"Email From\" <email-from@email.com>',\n                width: '50%',\n              },\n              label: 'Email From',\n            },\n          ],\n        },\n        {\n          name: 'subject',\n          type: 'text',\n          defaultValue: \"You've received a new message.\",\n          label: 'Subject',\n          localized: true,\n          required: true,\n        },\n        {\n          name: 'message',\n          type: 'richText',\n          admin: {\n            description: 'Enter the message that should be sent in this email.',\n          },\n          label: 'Message',\n          localized: true,\n        },\n      ],\n    },\n  ]\n\n  const config: CollectionConfig = {\n    ...(formConfig?.formOverrides || {}),\n    slug: formConfig?.formOverrides?.slug || 'forms',\n    access: {\n      read: () => true,\n      ...(formConfig?.formOverrides?.access || {}),\n    },\n    admin: {\n      enableRichTextRelationship: false,\n      useAsTitle: 'title',\n      ...(formConfig?.formOverrides?.admin || {}),\n    },\n    fields:\n      formConfig?.formOverrides?.fields && typeof formConfig?.formOverrides?.fields === 'function'\n        ? formConfig.formOverrides.fields({ defaultFields })\n        : defaultFields,\n  }\n\n  return config\n}\n"],"names":["merge","fields","generateFormCollection","formConfig","redirect","name","type","admin","condition","_","siblingData","confirmationType","hideGutter","label","required","redirectRelationships","unshift","maxDepth","relationTo","layout","defaultValue","options","value","defaultFields","blocks","Object","entries","map","fieldKey","fieldConfig","block","undefined","arrayMerge","sourceArray","filter","Boolean","localized","description","placeholder","width","config","formOverrides","slug","access","read","enableRichTextRelationship","useAsTitle"],"mappings":"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"}